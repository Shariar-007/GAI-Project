{
  "issue_id": 11015,
  "issue_url": "https://github.com/checkstyle/checkstyle/issues/11015",
  "title": "SimplifyBooleanExpression: A false negative about ternary operator",
  "description": "<p dir=\"auto\">I have read check documentation: <a href=\"https://checkstyle.sourceforge.io/config_coding.html#SimplifyBooleanExpression\" rel=\"nofollow\">https://checkstyle.sourceforge.io/config_coding.html#SimplifyBooleanExpression</a><br>\nI have downloaded the latest checkstyle from: <a href=\"https://checkstyle.org/cmdline.html#Download_and_Run\" rel=\"nofollow\">https://checkstyle.org/cmdline.html#Download_and_Run</a><br>\nI have executed the cli and showed it below, as cli describes the problem better than 1,000 words</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/var/tmp $ javac Test.java\n/var/tmp $ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n  <property name=\"severity\" value=\"error\"/>\n  <property name=\"fileExtensions\" value=\"java, properties, xml\"/>\n  <module name=\"TreeWalker\">    \n    <module name=\"SimplifyBooleanExpression\"/>\n  </module>\n</module>\n\n/var/tmp $ cat Test.java\npublic class Test {\n    public boolean fun() {\n        return false;\n    }\n    public boolean foo() {\n        boolean tag = fun() ? true : false;  // should report a warning here\n        // boolean tag = func() == true; // can be detected\n        return tag;\n    }\n}\n\n/var/tmp $ RUN_LOCALE=\"-Duser.language=en -Duser.country=US\"\n/var/tmp $ java $RUN_LOCALE -jar checkstyle-9.2-all.jar -c ./config.xml Test.java\n\n#[[PLACE YOUR OUTPUT HERE]]\nStarting audit...\nAudit done.\"><pre>/var/tmp $ javac Test.java\n/var/tmp $ cat config.xml\n<span class=\"pl-k\"><</span><span class=\"pl-k\">?</span>xml version=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">?</span><span class=\"pl-k\">></span>\n<span class=\"pl-k\"><</span><span class=\"pl-k\">!</span>DOCTYPE module PUBLIC\n          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-//Checkstyle//DTD Checkstyle Configuration 1.3//EN<span class=\"pl-pds\">\"</span></span>\n          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://checkstyle.org/dtds/configuration_1_3.dtd<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">></span>\n\n<span class=\"pl-k\"><</span>module name=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Checker<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">></span>\n  <span class=\"pl-k\"><</span>property name=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>severity<span class=\"pl-pds\">\"</span></span> value=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error<span class=\"pl-pds\">\"</span></span>/<span class=\"pl-k\">></span>\n  <span class=\"pl-k\"><</span>property name=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fileExtensions<span class=\"pl-pds\">\"</span></span> value=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>java, properties, xml<span class=\"pl-pds\">\"</span></span>/<span class=\"pl-k\">></span>\n  <span class=\"pl-k\"><</span>module name=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TreeWalker<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">></span>    \n    <span class=\"pl-k\"><</span>module name=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SimplifyBooleanExpression<span class=\"pl-pds\">\"</span></span>/<span class=\"pl-k\">></span>\n  <span class=\"pl-k\"><</span>/module<span class=\"pl-k\">></span>\n<span class=\"pl-k\"><</span>/module<span class=\"pl-k\">></span>\n\n/var/tmp $ cat Test.java\npublic class Test {\n    public boolean <span class=\"pl-en\">fun</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span><span class=\"pl-k\">;</span>\n    }\n    public boolean <span class=\"pl-en\">foo</span>() {\n        boolean tag = <span class=\"pl-en\">fun</span>() <span class=\"pl-k\">?</span> <span class=\"pl-c1\">true</span> <span class=\"pl-c1\">:</span> <span class=\"pl-c1\">false</span>;  // should report a warning here\n        // boolean tag = <span class=\"pl-en\">func</span>() == <span class=\"pl-c1\">true</span>; // can be detected\n        <span class=\"pl-k\">return</span> tag<span class=\"pl-k\">;</span>\n    }\n}\n\n/var/tmp $ RUN_LOCALE=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-Duser.language=en -Duser.country=US<span class=\"pl-pds\">\"</span></span>\n/var/tmp $ java <span class=\"pl-smi\">$RUN_LOCALE</span> -jar checkstyle-9.2-all.jar -c ./config.xml Test.java\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>[[PLACE YOUR OUTPUT HERE]]</span>\nStarting audit...\nAudit done.</pre></div>\n<hr>\n<h2 dir=\"auto\"><strong>Describe what you expect in detail.</strong></h2>\n<p dir=\"auto\">I have just found a false negative about the rule SimplifyBooleanExpression. Please refer to the below simplfied case. Here, I think <code class=\"notranslate\">fun() ? true : false</code>  at line 6 is similar to <code class=\"notranslate\">func() == true</code>. They all can be simplified into <code class=\"notranslate\">func()</code>.</p>",
  "description_text": "I have read check documentation: https://checkstyle.sourceforge.io/config_coding.html#SimplifyBooleanExpression\nI have downloaded the latest checkstyle from: https://checkstyle.org/cmdline.html#Download_and_Run\nI have executed the cli and showed it below, as cli describes the problem better than 1,000 words\n\n\n\n\n\n\n\n\n\n\n/var/tmp $ cat Test.java\npublic class Test {\n    public boolean fun() {\n        return false;\n    }\n    public boolean foo() {\n        boolean tag = fun() ? true : false;  // should report a warning here\n        // boolean tag = func() == true; // can be detected\n        return tag;\n    }\n}\n\n/var/tmp $ RUN_LOCALE=\"-Duser.language=en -Duser.country=US\"\n/var/tmp $ java $RUN_LOCALE -jar checkstyle-9.2-all.jar -c ./config.xml Test.java\n\n#[[PLACE YOUR OUTPUT HERE]]\nStarting audit...\nAudit done.\">/var/tmp $ javac Test.java\n/var/tmp $ cat config.xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n  <property name=\"severity\" value=\"error\"/>\n  <property name=\"fileExtensions\" value=\"java, properties, xml\"/>\n  <module name=\"TreeWalker\">    \n    <module name=\"SimplifyBooleanExpression\"/>\n  </module>\n</module>\n\n/var/tmp $ cat Test.java\npublic class Test {\n    public boolean fun() {\n        return false;\n    }\n    public boolean foo() {\n        boolean tag = fun() ? true : false;  // should report a warning here\n        // boolean tag = func() == true; // can be detected\n        return tag;\n    }\n}\n\n/var/tmp $ RUN_LOCALE=\"-Duser.language=en -Duser.country=US\"\n/var/tmp $ java $RUN_LOCALE -jar checkstyle-9.2-all.jar -c ./config.xml Test.java\n\n#[[PLACE YOUR OUTPUT HERE]]\nStarting audit...\nAudit done.\n\nDescribe what you expect in detail.\nI have just found a false negative about the rule SimplifyBooleanExpression. Please refer to the below simplfied case. Here, I think fun() ? true : false  at line 6 is similar to func() == true. They all can be simplified into func()."
}