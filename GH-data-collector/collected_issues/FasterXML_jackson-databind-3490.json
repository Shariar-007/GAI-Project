{
  "issue_id": 3489,
  "issue_url": "https://github.com/FasterXML/jackson-databind/issues/3489",
  "title": "`Nulls.AS_EMPTY` returns null in `java.lang.Object`",
  "description": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nWhen I'm using <code class=\"notranslate\">JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY, Nulls.AS_EMPTY)</code> for nullable value with type <code class=\"notranslate\">java.lang.Object</code> in a Map, I still getting the null in the deserialized object. I think that problem is that <a href=\"https://github.com/FasterXML/jackson-databind/blob/3be614716f4736867379345c6febbc0c3898050f/src/main/java/com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.java#L659\"><code class=\"notranslate\">com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla</code></a> doesn't override <a href=\"https://github.com/FasterXML/jackson-databind/blob/3be614716f4736867379345c6febbc0c3898050f/src/main/java/com/fasterxml/jackson/databind/JsonDeserializer.java#L375\"><code class=\"notranslate\">com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)</code></a>. I think that the deserializer for object should return empty object in the <code class=\"notranslate\">getEmptyValue</code> method.</p>\n<p dir=\"auto\"><strong>Version information</strong><br>\n2.13.2.2</p>\n<p dir=\"auto\"><strong>To Reproduce</strong><br>\nIf you have a way to reproduce this with:</p>\n<ol dir=\"auto\">\n<li>Create a JSON, like this:</li>\n</ol>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  \"a\": {\n    \"first\": \"second\",\n    \"third\": null\n  }\n}\"><pre>{\n  <span class=\"pl-ent\">\"a\"</span>: {\n    <span class=\"pl-ent\">\"first\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>second<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"third\"</span>: <span class=\"pl-c1\">null</span>\n  }\n}</pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>Create this class to deserialize with:</li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import java.util.Map;\n\npublic class Scratch {\n    private Map<String, Object> a;\n\n    public Map<String, Object> getA() {\n        return a;\n    }\n\n    public void setA(Map<String, Object> a) {\n        this.a = a;\n    }\n}\n\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Map</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Scratch</span> {\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Map</span><<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>> <span class=\"pl-s1\">a</span>;\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Map</span><<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>> <span class=\"pl-en\">getA</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">a</span>;\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setA</span>(<span class=\"pl-smi\">Map</span><<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>> <span class=\"pl-s1\">a</span>) {\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">a</span> = <span class=\"pl-s1\">a</span>;\n    }\n}</pre></div>\n<ol start=\"3\" dir=\"auto\">\n<li>Create the <code class=\"notranslate\">ObjectMapper</code> and override nullable behavior:</li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        final ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY, Nulls.AS_EMPTY));\"><pre>        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">objectMapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configOverride</span>(<span class=\"pl-smi\">Map</span>.<span class=\"pl-s1\">class</span>).<span class=\"pl-en\">setSetterInfo</span>(<span class=\"pl-smi\">JsonSetter</span>.<span class=\"pl-s1\">Value</span>.<span class=\"pl-en\">forValueNulls</span>(<span class=\"pl-smi\">Nulls</span>.<span class=\"pl-c1\">AS_EMPTY</span>, <span class=\"pl-smi\">Nulls</span>.<span class=\"pl-c1\">AS_EMPTY</span>));</pre></div>\n<ol start=\"4\" dir=\"auto\">\n<li>Deserialize this JSON:</li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        String json = \"...\";\n        final Scratch scratch = objectMapper.readValue(json, Scratch.class);\"><pre>        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">json</span> = <span class=\"pl-s\">\"...\"</span>;\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Scratch</span> <span class=\"pl-s1\">scratch</span> = <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">json</span>, <span class=\"pl-smi\">Scratch</span>.<span class=\"pl-s1\">class</span>);</pre></div>\n<ol start=\"5\" dir=\"auto\">\n<li>Verify that in the <code class=\"notranslate\">a</code> object we got a <code class=\"notranslate\">null</code> in the <code class=\"notranslate\">third</code> key:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        final Object third = scratch.getA().get(\"third\");\n        assert third != null; // fails\"><pre class=\"notranslate\"><code>        final Object third = scratch.getA().get(\"third\");\n        assert third != null; // fails\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nI'm expecting that the empty value of the <code class=\"notranslate\">java.lang.Object</code> is a new Object instance.</p>",
  "description_text": "Describe the bug\nWhen I'm using JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY, Nulls.AS_EMPTY) for nullable value with type java.lang.Object in a Map, I still getting the null in the deserialized object. I think that problem is that com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.Vanilla doesn't override com.fasterxml.jackson.databind.JsonDeserializer#getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext). I think that the deserializer for object should return empty object in the getEmptyValue method.\nVersion information\n2.13.2.2\nTo Reproduce\nIf you have a way to reproduce this with:\n\nCreate a JSON, like this:\n\n{\n  \"a\": {\n    \"first\": \"second\",\n    \"third\": null\n  }\n}\n\nCreate this class to deserialize with:\n\nimport java.util.Map;\n\npublic class Scratch {\n    private Map<String, Object> a;\n\n    public Map<String, Object> getA() {\n        return a;\n    }\n\n    public void setA(Map<String, Object> a) {\n        this.a = a;\n    }\n}\n\nCreate the ObjectMapper and override nullable behavior:\n\n        final ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.configOverride(Map.class).setSetterInfo(JsonSetter.Value.forValueNulls(Nulls.AS_EMPTY, Nulls.AS_EMPTY));\n\nDeserialize this JSON:\n\n        String json = \"...\";\n        final Scratch scratch = objectMapper.readValue(json, Scratch.class);\n\nVerify that in the a object we got a null in the third key:\n\n        final Object third = scratch.getA().get(\"third\");\n        assert third != null; // fails\n\nExpected behavior\nI'm expecting that the empty value of the java.lang.Object is a new Object instance."
}