{
  "issue_id": 161,
  "issue_url": "https://github.com/Hakky54/sslcontext-kickstart/issues/161",
  "title": "`SSLFactory.Builder.withDefaultIdentityMaterial` method",
  "description": "<p dir=\"auto\">When custom sslContext is created there is no easy way to load \"default\" keyManager<br>\n, although <code class=\"notranslate\">withDefaultTrustMaterial</code> allows it do so for trustManager.</p>\n<p dir=\"auto\">It would be nice to have <code class=\"notranslate\">withDefaultIdentityMaterial</code> method that would utilize default keyManager (<code class=\"notranslate\">javax.net.ssl.keyStore</code>)</p>\n<p dir=\"auto\">Documentation suggests to use</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\".withIdentityMaterial(Paths.get(System.getProperty(\"javax.net.ssl.keyStore\")), System.getProperty(\"javax.net.ssl.keyStorePassword\").toCharArray(), \nSystem.getProperty(\"javax.net.ssl.keyStoreType\"))\"><pre>.<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">Paths</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStore\"</span>)), <span class=\"pl-s1\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStorePassword\"</span>).<span class=\"pl-en\">toCharArray</span>(), \n<span class=\"pl-s1\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStoreType\"</span>))</pre></div>\n<p dir=\"auto\">which probably does the trick, but does not handle the cases when properties are not set. Helper method would do null checks and remove boilerplate code from users of SSLFactory.</p>\n<p dir=\"auto\">And Maybe there is a way to get a reference to internal keyManage. I haven't found one.</p>",
  "description_text": "When custom sslContext is created there is no easy way to load \"default\" keyManager\n, although withDefaultTrustMaterial allows it do so for trustManager.\nIt would be nice to have withDefaultIdentityMaterial method that would utilize default keyManager (javax.net.ssl.keyStore)\nDocumentation suggests to use\n.withIdentityMaterial(Paths.get(System.getProperty(\"javax.net.ssl.keyStore\")), System.getProperty(\"javax.net.ssl.keyStorePassword\").toCharArray(), \nSystem.getProperty(\"javax.net.ssl.keyStoreType\"))\nwhich probably does the trick, but does not handle the cases when properties are not set. Helper method would do null checks and remove boilerplate code from users of SSLFactory.\nAnd Maybe there is a way to get a reference to internal keyManage. I haven't found one."
}