{
  "issue_id": 2397,
  "issue_url": "https://github.com/assertj/assertj/issues/2397",
  "title": "`catchThrowableOfType` enriched alternatives",
  "description": "<h4 dir=\"auto\">Summary</h4>\n<p dir=\"auto\">Similarly to the enriched alternatives of <a href=\"https://assertj.github.io/doc/#assertj-core-exception-assertions-assertThatExceptionOfType\" rel=\"nofollow\"><code class=\"notranslate\">assertThatExceptionOfType</code></a>, we could introduce enriched versions of <code class=\"notranslate\">catchThrowableOfType</code>.</p>\n<h4 dir=\"auto\">Example</h4>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"NullPointerException npe = catchNullPointerException( () -> ... );\nIllegalArgumentException iae = catchIllegalArgumentException( () -> ... );\nIllegalStateException ise = catchIllegalStateException( () -> ... );\nIOException ioe = catchIOException( () -> ... );\"><pre><span class=\"pl-smi\">NullPointerException</span> <span class=\"pl-s1\">npe</span> = <span class=\"pl-en\">catchNullPointerException</span>( () -> ... );\n<span class=\"pl-smi\">IllegalArgumentException</span> <span class=\"pl-s1\">iae</span> = <span class=\"pl-en\">catchIllegalArgumentException</span>( () -> ... );\n<span class=\"pl-smi\">IllegalStateException</span> <span class=\"pl-s1\">ise</span> = <span class=\"pl-en\">catchIllegalStateException</span>( () -> ... );\n<span class=\"pl-smi\">IOException</span> <span class=\"pl-s1\">ioe</span> = <span class=\"pl-en\">catchIOException</span>( () -> ... );</pre></div>",
  "description_text": "Summary\nSimilarly to the enriched alternatives of assertThatExceptionOfType, we could introduce enriched versions of catchThrowableOfType.\nExample\nNullPointerException npe = catchNullPointerException( () -> ... );\nIllegalArgumentException iae = catchIllegalArgumentException( () -> ... );\nIllegalStateException ise = catchIllegalStateException( () -> ... );\nIOException ioe = catchIOException( () -> ... );"
}