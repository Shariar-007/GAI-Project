{
  "issue_id": 2548,
  "issue_url": "https://github.com/mockito/mockito/issues/2548",
  "title": "[PR open] Add feature to verify static methods calls in order",
  "description": "<p dir=\"auto\"><strong>TL;DR</strong> Mockito doesn't allow verifying static methods calls in order. I have implemented this feature here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1113136158\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2549\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2549/hovercard\" href=\"https://github.com/mockito/mockito/pull/2549\">#2549</a>. If possible, I'd like to contribute; or discuss other ways to achieve the same.</p>\n<hr>\n<p dir=\"auto\">Hey Mockito team.</p>\n<p dir=\"auto\">This discussion relates to: <a href=\"https://groups.google.com/g/mockito/c/wjd9jIj_oBs\" rel=\"nofollow\">https://groups.google.com/g/mockito/c/wjd9jIj_oBs</a>. Since I'm not sure that the Google group is active, I'm posting it here for now.</p>\n<p dir=\"auto\">This issue is about verifying static methods calls in order. I'm aware of the InOrder class, but we can't pass a MockedStatic instance. I had a closer look, and we can pass to it a Class instance. But the InOrder interface is not powerful enough to verify that a static method has been called:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface InOrder {\n  <T> T verify(T mock);\n  <T> T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\"><pre class=\"notranslate\"><code>public interface InOrder {\n  <T> T verify(T mock);\n  <T> T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\n</code></pre></div>\n<p dir=\"auto\">To verify static calls, using method references and lambdas, we likely need two more methods in the InOrder interface, with signatures similar to MockedStatic#verify:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface MockedStatic<T> extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\"><pre class=\"notranslate\"><code>public interface MockedStatic<T> extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\n</code></pre></div>\n<p dir=\"auto\">What do you think of the InOrder interface exposing two methods to deal with the MockedStatic objects that accept both the MockedStatic and the Verification instances to use? Like the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"void verify(MockedStatic<?> mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic<?> mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\"><pre class=\"notranslate\"><code>void verify(MockedStatic<?> mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic<?> mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\n</code></pre></div>\n<p dir=\"auto\">I made the above changes, and we can verify static methods, together with instance methods too. I have updated the tests as well in my PR.</p>\n<p dir=\"auto\">Let me know if you are aware of other ways to achieve the same. If it is not doable, then please share your thoughts about the above, and if I can contribute in case.</p>",
  "description_text": "TL;DR Mockito doesn't allow verifying static methods calls in order. I have implemented this feature here: #2549. If possible, I'd like to contribute; or discuss other ways to achieve the same.\n\nHey Mockito team.\nThis discussion relates to: https://groups.google.com/g/mockito/c/wjd9jIj_oBs. Since I'm not sure that the Google group is active, I'm posting it here for now.\nThis issue is about verifying static methods calls in order. I'm aware of the InOrder class, but we can't pass a MockedStatic instance. I had a closer look, and we can pass to it a Class instance. But the InOrder interface is not powerful enough to verify that a static method has been called:\npublic interface InOrder {\n   T verify(T mock);\n   T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\n\nTo verify static calls, using method references and lambdas, we likely need two more methods in the InOrder interface, with signatures similar to MockedStatic#verify:\npublic interface MockedStatic extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\n\nWhat do you think of the InOrder interface exposing two methods to deal with the MockedStatic objects that accept both the MockedStatic and the Verification instances to use? Like the following:\nvoid verify(MockedStatic mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\n\nI made the above changes, and we can verify static methods, together with instance methods too. I have updated the tests as well in my PR.\nLet me know if you are aware of other ways to achieve the same. If it is not doable, then please share your thoughts about the above, and if I can contribute in case."
}