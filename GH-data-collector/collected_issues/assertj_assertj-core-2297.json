{
  "issue_id": 731,
  "issue_url": "https://github.com/assertj/assertj/issues/731",
  "title": "Add satisfies with checked exceptions consumer.",
  "description": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">Currently it is not possible to write code like that:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nassertThat(item).satisfies(i -> {\n   assertThat(i.getContent()).isEqualTo(\"data\"); // i.getContent() throws IOException\n});\"><pre><span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">item</span>).<span class=\"pl-en\">satisfies</span>(<span class=\"pl-s1\">i</span> -> {\n   <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">i</span>.<span class=\"pl-en\">getContent</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"data\"</span>); <span class=\"pl-c\">// i.getContent() throws IOException</span>\n});</pre></div>\n<p dir=\"auto\">Would it be possible to add satisfies method which can handle consumer throwing checked exception? If exception would be thrown then it would be assumed that condition failed.</p>\n<p dir=\"auto\">Thanks,<br>\nMicha\u0142</p>",
  "description_text": "Hello,\nCurrently it is not possible to write code like that:\nassertThat(item).satisfies(i -> {\n   assertThat(i.getContent()).isEqualTo(\"data\"); // i.getContent() throws IOException\n});\nWould it be possible to add satisfies method which can handle consumer throwing checked exception? If exception would be thrown then it would be assumed that condition failed.\nThanks,\nMicha\u0142"
}