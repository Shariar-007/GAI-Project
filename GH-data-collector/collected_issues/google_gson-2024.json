{
  "issue_id": 1886,
  "issue_url": "https://github.com/google/gson/issues/1886",
  "title": "New FieldNamingPolicy: UPPER_CASE_WITH_UNDERSCORES",
  "description": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">currently, I do try to integrate a service that uses a UPPER_CASE_WITH_UNDERSCORES naming scheme for their field names, e.g.:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n  \"PRODUCT_LIST\" : {\n    \"PRODUCT\" : [\n      {\n      \"APPLICATION_CODE\" : \"secret application code\",\n      \"PRODUCT_TYPE\" : \"product type value\",\n      \"PRODUCT_NAME\" : \"product name\"\n      }\n    ]\n  }\n}\"><pre class=\"notranslate\"><code>{\n  \"PRODUCT_LIST\" : {\n    \"PRODUCT\" : [\n      {\n      \"APPLICATION_CODE\" : \"secret application code\",\n      \"PRODUCT_TYPE\" : \"product type value\",\n      \"PRODUCT_NAME\" : \"product name\"\n      }\n    ]\n  }\n}\n</code></pre></div>\n<p dir=\"auto\">Currently, GSON only supports LOWER_CASE_WITH_UNDERSCORES by default, so I would have to implement my own FieldNamingStategy class and possibly duplicate some code, like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"this.gson = new GsonBuilder()\n                .setFieldNamingStrategy(\n                        f -> FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES.translateName(f).toUpperCase(Locale.ENGLISH))\n                .create();\"><pre class=\"notranslate\"><code>this.gson = new GsonBuilder()\n                .setFieldNamingStrategy(\n                        f -> FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES.translateName(f).toUpperCase(Locale.ENGLISH))\n                .create();\n</code></pre></div>\n<p dir=\"auto\">So, ideally, something like this would be supported by GSON itself and I could use a new enum value.</p>",
  "description_text": "Hi,\ncurrently, I do try to integrate a service that uses a UPPER_CASE_WITH_UNDERSCORES naming scheme for their field names, e.g.:\n{\n  \"PRODUCT_LIST\" : {\n    \"PRODUCT\" : [\n      {\n      \"APPLICATION_CODE\" : \"secret application code\",\n      \"PRODUCT_TYPE\" : \"product type value\",\n      \"PRODUCT_NAME\" : \"product name\"\n      }\n    ]\n  }\n}\n\nCurrently, GSON only supports LOWER_CASE_WITH_UNDERSCORES by default, so I would have to implement my own FieldNamingStategy class and possibly duplicate some code, like this:\nthis.gson = new GsonBuilder()\n                .setFieldNamingStrategy(\n                        f -> FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES.translateName(f).toUpperCase(Locale.ENGLISH))\n                .create();\n\nSo, ideally, something like this would be supported by GSON itself and I could use a new enum value."
}