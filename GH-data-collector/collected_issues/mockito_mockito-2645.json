{
  "issue_id": 2640,
  "issue_url": "https://github.com/mockito/mockito/issues/2640",
  "title": "Mockito mock of interfaces lost annotation information",
  "description": "<p dir=\"auto\">I see some different behaviour after updating mockito, and I think it's a bug.<br>\nSee code below - the test fails because the mocked interface has lost the expected annotation.</p>\n<p dir=\"auto\">Making mocks of classes, keeps the annotation information.<br>\nMaking mocks of interfaces, annotation information is lost.</p>\n<p dir=\"auto\">Junit version: junit:junit:4.13.2<br>\nmockito version: org.mockito:mockito-core:4.5.1<br>\nopenJDK 11</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\"><pre class=\"notranslate\"><code>package com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\n</code></pre></div>\n<p dir=\"auto\">The test works on previous versions of mockito like, 4.4.0</p>",
  "description_text": "I see some different behaviour after updating mockito, and I think it's a bug.\nSee code below - the test fails because the mocked interface has lost the expected annotation.\nMaking mocks of classes, keeps the annotation information.\nMaking mocks of interfaces, annotation information is lost.\nJunit version: junit:junit:4.13.2\nmockito version: org.mockito:mockito-core:4.5.1\nopenJDK 11\npackage com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\n\nThe test works on previous versions of mockito like, 4.4.0"
}