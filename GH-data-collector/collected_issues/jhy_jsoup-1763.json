{
  "issue_id": 1764,
  "issue_url": "https://github.com/jhy/jsoup/issues/1764",
  "title": "Copy constructor of Safelist shares state",
  "description": "<p dir=\"auto\">The copy constructor of Safelist <code class=\"notranslate\">public Safelist(Safelist copy)</code> does not deep copy the data structures as advertised in the JavaDoc but shares the nested data structures, e.g. <code class=\"notranslate\">Map<TagName, Set<AttributeKey>></code>. This causes unexpected mutation.</p>\n<p dir=\"auto\">An example would be:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Safelist safelist1 = Safelist.none().addAttributes(\"foo\", \"bar\");\nSafelist safelist2 = new Safelist(safelist1);\nsafelist1.addAttributes(\"foo\", \"baz\");\n\nfinal String html = \"<foo bar=\\\"val\\\" baz=\\\"val\\\" />\";\nSystem.out.println(Jsoup.clean(html, safelist1));\nSystem.out.println(Jsoup.clean(html, safelist2));\"><pre><span class=\"pl-smi\">Safelist</span> <span class=\"pl-s1\">safelist1</span> = <span class=\"pl-s1\">Safelist</span>.<span class=\"pl-en\">none</span>().<span class=\"pl-en\">addAttributes</span>(<span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"bar\"</span>);\n<span class=\"pl-smi\">Safelist</span> <span class=\"pl-s1\">safelist2</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Safelist</span>(<span class=\"pl-s1\">safelist1</span>);\n<span class=\"pl-s1\">safelist1</span>.<span class=\"pl-en\">addAttributes</span>(<span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"baz\"</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">html</span> = <span class=\"pl-s\">\"<foo bar=\\\"val\\\" baz=\\\"val\\\" />\"</span>;\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">clean</span>(<span class=\"pl-s1\">html</span>, <span class=\"pl-s1\">safelist1</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">clean</span>(<span class=\"pl-s1\">html</span>, <span class=\"pl-s1\">safelist2</span>));</pre></div>\n<p dir=\"auto\">The second output should not contain the <code class=\"notranslate\">baz</code> attribute but does.</p>",
  "description_text": "The copy constructor of Safelist public Safelist(Safelist copy) does not deep copy the data structures as advertised in the JavaDoc but shares the nested data structures, e.g. Map>. This causes unexpected mutation.\nAn example would be:\n\";\nSystem.out.println(Jsoup.clean(html, safelist1));\nSystem.out.println(Jsoup.clean(html, safelist2));\">Safelist safelist1 = Safelist.none().addAttributes(\"foo\", \"bar\");\nSafelist safelist2 = new Safelist(safelist1);\nsafelist1.addAttributes(\"foo\", \"baz\");\n\nfinal String html = \"\";\nSystem.out.println(Jsoup.clean(html, safelist1));\nSystem.out.println(Jsoup.clean(html, safelist2));\nThe second output should not contain the baz attribute but does."
}