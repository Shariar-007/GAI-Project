{
  "issue_id": 2724,
  "issue_url": "https://github.com/assertj/assertj/issues/2724",
  "title": "`returns` and `doesNotReturn` should honor custom type comparators",
  "description": "<h4 dir=\"auto\">Feature summary</h4>\n<p dir=\"auto\">Currently, comparators set via <code class=\"notranslate\">usingComparatorForType</code> are ignored by <code class=\"notranslate\">returns</code> and <code class=\"notranslate\">doesNotReturn</code> assertions.</p>\n<p dir=\"auto\">We could enhance the implementation so that custom comparators are also used with these two methods.</p>\n<p dir=\"auto\">Source: <a href=\"https://stackoverflow.com/questions/73121345/\" rel=\"nofollow\">https://stackoverflow.com/questions/73121345/</a></p>\n<h4 dir=\"auto\">Example</h4>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\nvoid test() {\n    assertThat(new BigDecimal(\"10.00\"))\n        .usingComparatorForType(BigDecimalComparator.BIG_DECIMAL_COMPARATOR, BigDecimal.class)\n        .returns(BigDecimal.TEN, BigDecimal::abs); // currently fails\n}\"><pre><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-smi\">void</span> <span class=\"pl-s1\">test</span>() {\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-s\">\"10.00\"</span>))\n        .<span class=\"pl-en\">usingComparatorForType</span>(<span class=\"pl-smi\">BigDecimalComparator</span>.<span class=\"pl-c1\">BIG_DECIMAL_COMPARATOR</span>, <span class=\"pl-smi\">BigDecimal</span>.<span class=\"pl-s1\">class</span>)\n        .<span class=\"pl-en\">returns</span>(<span class=\"pl-smi\">BigDecimal</span>.<span class=\"pl-c1\">TEN</span>, <span class=\"pl-s1\">BigDecimal</span>::<span class=\"pl-s1\">abs</span>); <span class=\"pl-c\">// currently fails</span>\n}</pre></div>",
  "description_text": "Feature summary\nCurrently, comparators set via usingComparatorForType are ignored by returns and doesNotReturn assertions.\nWe could enhance the implementation so that custom comparators are also used with these two methods.\nSource: https://stackoverflow.com/questions/73121345/\nExample\n@Test\nvoid test() {\n    assertThat(new BigDecimal(\"10.00\"))\n        .usingComparatorForType(BigDecimalComparator.BIG_DECIMAL_COMPARATOR, BigDecimal.class)\n        .returns(BigDecimal.TEN, BigDecimal::abs); // currently fails\n}"
}