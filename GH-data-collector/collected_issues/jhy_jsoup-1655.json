{
  "issue_id": 1653,
  "issue_url": "https://github.com/jhy/jsoup/issues/1653",
  "title": "Please expose maxPaddingWidth in two ways",
  "description": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I work with the formatter-maven-plugin and ever since 1.14.1, we have been unable to upgrade as it seriously corrupted pretty formatted html.  After deep diving this, I finally found the cause.  So I think the change basically breaks pretty formatting in most cases.  Our example is rather simple, you cna find it here -></p>\n<p dir=\"auto\"><a href=\"https://github.com/revelc/formatter-maven-plugin/blob/main/src/test/java/net/revelc/code/formatter/html/HTMLFormatterTest.java\">test</a><br>\n<a href=\"https://github.com/revelc/formatter-maven-plugin/blob/main/src/test/resources/someFile.html\">resource</a></p>\n<p dir=\"auto\">We keep the hash of what the prior formatter was producing (namely 1.13.1) that is on our master now.  If it changes during an upgrade, it should be some improvement.  In this case its rather corrupted by lack of proper whitespace.  It further doesn't line break on the header any longer (not solved on this ticket).</p>\n<p dir=\"auto\">After reviewing all the code changes and a lot of debuging, I have gotten to the StringUtil change <a href=\"https://github.com/jhy/jsoup/commit/afd73606a90909444e1c443b555dae7b71e6a5a0#diff-597d6f91192e47c0d6c1eb2451e4f36c54d9f3d982ccb867f30246712384506f\">here</a>.  Specifically line 75 (width = Math.min(width, maxPaddingWidth);) or line 128 in your lastest master.</p>\n<p dir=\"auto\">After looking at what formatted for us, it was clear it was 30 characters as that is set preventing proper nesting to occur.  So I cloned this repo and commented out that line then ran against that.  The result was more of what we expected.  A few tags were shortened where possible (but note that header line break from star slash comment didn't change).  This is far more acceptable to us given our user base and fact that jsoup is vulnerable I believe a couple times now.</p>\n<p dir=\"auto\">This is clearly internal code of jsoup and not intended for external exposure based on the package naming but I feel we need this exposed with 2 options.  The first option, completely disable it so it works like it did before as that is rather critical as we are formatting source code to be committed to repos.  The second option would simply to allow some sizing.  So I think something like -1 to mean no limit and then configurable to whatever a user might want.</p>\n<p dir=\"auto\">I don't might writing the code to expose that out but wanted to run this full diagnostic of the issue by your team first before attempting to do so.</p>",
  "description_text": "Hi,\nI work with the formatter-maven-plugin and ever since 1.14.1, we have been unable to upgrade as it seriously corrupted pretty formatted html.  After deep diving this, I finally found the cause.  So I think the change basically breaks pretty formatting in most cases.  Our example is rather simple, you cna find it here ->\ntest\nresource\nWe keep the hash of what the prior formatter was producing (namely 1.13.1) that is on our master now.  If it changes during an upgrade, it should be some improvement.  In this case its rather corrupted by lack of proper whitespace.  It further doesn't line break on the header any longer (not solved on this ticket).\nAfter reviewing all the code changes and a lot of debuging, I have gotten to the StringUtil change here.  Specifically line 75 (width = Math.min(width, maxPaddingWidth);) or line 128 in your lastest master.\nAfter looking at what formatted for us, it was clear it was 30 characters as that is set preventing proper nesting to occur.  So I cloned this repo and commented out that line then ran against that.  The result was more of what we expected.  A few tags were shortened where possible (but note that header line break from star slash comment didn't change).  This is far more acceptable to us given our user base and fact that jsoup is vulnerable I believe a couple times now.\nThis is clearly internal code of jsoup and not intended for external exposure based on the package naming but I feel we need this exposed with 2 options.  The first option, completely disable it so it works like it did before as that is rather critical as we are formatting source code to be committed to repos.  The second option would simply to allow some sizing.  So I think something like -1 to mean no limit and then configurable to whatever a user might want.\nI don't might writing the code to expose that out but wanted to run this full diagnostic of the issue by your team first before attempting to do so."
}