{
  "issue_id": 181,
  "issue_url": "https://github.com/Hakky54/sslcontext-kickstart/issues/181",
  "title": "CombinableX509TrustManager can't completed all trustManager's check",
  "description": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nHi, i found that CombinableX509TrustManager can't completed all trustManager's check, when some trustManager's trustdCerts is empty.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ElasticsearchTest {\n    @Test\n    public void test_connect_elasticsearch_server() throws IOException {\n        SSLFactory sslFactory = SSLFactory.builder()\n                .withSystemTrustMaterial()\n                .withTrustMaterial(CertificateUtils.loadCertificate(\"http_ca.crt\"))\n                .build();\n        BasicCredentialsProvider basicCredentialsProvider = new BasicCredentialsProvider();\n        basicCredentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\"elastic\", \"es123456\"));\n\n        RestClient restClient = RestClient.builder(new HttpHost(\"192.168.169.2\", 39200, \"https\"))\n                .setHttpClientConfigCallback(httpAsyncClientBuilder -> httpAsyncClientBuilder\n                        .setDefaultCredentialsProvider(basicCredentialsProvider)\n                        .setSSLContext(sslFactory.getSslContext())\n                        .setSSLHostnameVerifier(sslFactory.getHostnameVerifier())\n                )\n                .build();\n        RestClientTransport restClientTransport = new RestClientTransport(restClient, new JacksonJsonpMapper());\n        ElasticsearchClient elasticsearchClient = new ElasticsearchClient(restClientTransport);\n        IndicesResponse indices = elasticsearchClient.cat().indices();\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ElasticsearchTest</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test_connect_elasticsearch_server</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-c1\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n                .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">CertificateUtils</span>.<span class=\"pl-en\">loadCertificate</span>(<span class=\"pl-s\">\"http_ca.crt\"</span>))\n                .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">BasicCredentialsProvider</span> <span class=\"pl-s1\">basicCredentialsProvider</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BasicCredentialsProvider</span>();\n        <span class=\"pl-s1\">basicCredentialsProvider</span>.<span class=\"pl-en\">setCredentials</span>(<span class=\"pl-smi\">AuthScope</span>.<span class=\"pl-c1\">ANY</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UsernamePasswordCredentials</span>(<span class=\"pl-s\">\"elastic\"</span>, <span class=\"pl-s\">\"es123456\"</span>));\n\n        <span class=\"pl-smi\">RestClient</span> <span class=\"pl-s1\">restClient</span> = <span class=\"pl-s1\">RestClient</span>.<span class=\"pl-en\">builder</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpHost</span>(<span class=\"pl-s\">\"192.168.169.2\"</span>, <span class=\"pl-c1\">39200</span>, <span class=\"pl-s\">\"https\"</span>))\n                .<span class=\"pl-en\">setHttpClientConfigCallback</span>(<span class=\"pl-s1\">httpAsyncClientBuilder</span> -> <span class=\"pl-s1\">httpAsyncClientBuilder</span>\n                        .<span class=\"pl-en\">setDefaultCredentialsProvider</span>(<span class=\"pl-s1\">basicCredentialsProvider</span>)\n                        .<span class=\"pl-en\">setSSLContext</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>())\n                        .<span class=\"pl-en\">setSSLHostnameVerifier</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getHostnameVerifier</span>())\n                )\n                .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">RestClientTransport</span> <span class=\"pl-s1\">restClientTransport</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RestClientTransport</span>(<span class=\"pl-s1\">restClient</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JacksonJsonpMapper</span>());\n        <span class=\"pl-smi\">ElasticsearchClient</span> <span class=\"pl-s1\">elasticsearchClient</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ElasticsearchClient</span>(<span class=\"pl-s1\">restClientTransport</span>);\n        <span class=\"pl-smi\">IndicesResponse</span> <span class=\"pl-s1\">indices</span> = <span class=\"pl-s1\">elasticsearchClient</span>.<span class=\"pl-en\">cat</span>().<span class=\"pl-en\">indices</span>();\n    }\n}</pre></div>\n<p dir=\"auto\">in withSystemTrustMaterial(), it would load Windows-ROOT keystore and Windows-MY keystore, but now my Windows-MY keystore certicate is empty.<br>\nin withTrustMaterial(CertificateUtils.loadCertificate(\"http_ca.crt\")), it would load the elasticsearch's certicate.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/167653717-e786ea91-e646-4e20-b1ac-9d96966ec06c.png\"><img src=\"https://user-images.githubusercontent.com/24501621/167653717-e786ea91-e646-4e20-b1ac-9d96966ec06c.png\" alt=\"trustmanagers\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">the error is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.<init>(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.<init>(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.<init>(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\"><pre class=\"notranslate\"><code>Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.<init>(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.<init>(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.<init>(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\n</code></pre></div>\n<p dir=\"auto\">I found in CombinableX509TrustManager will check all the TrustManager whether to support the current certificate chain. As a result of my second TrustManage from <code class=\"notranslate\">Windows-MY</code> trustCerts is empty, so when executing <code class=\"notranslate\">callBackConsumer.checkTrusted(trustManager);</code> method throws <code class=\"notranslate\">InvalidAlgorithmParameterException</code>, but my third TrustManager actually can trust the current certificate.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/167658297-bf6c3dc8-b8be-4ce8-ae21-7980beca928b.png\"><img src=\"https://user-images.githubusercontent.com/24501621/167658297-bf6c3dc8-b8be-4ce8-ae21-7980beca928b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Whether all exceptions can be caught in <code class=\"notranslate\">CombinableX509TrustManager.checkTrusted</code> so that all TrustManagers have a chance to be executed, or whether <code class=\"notranslate\">callBackConsumer.checkTrusted(trustManager);</code> is not executed when the <code class=\"notranslate\">trustCerts</code> of the <code class=\"notranslate\">trustManager</code> is empty.</p>\n<p dir=\"auto\">Although I could have avoided this problem in my example by removing <code class=\"notranslate\">.withSystemTrustMaterial()</code>, I think it's still possible that someone could load multiple TrustManagers at the same time, and the trustCerts of one of them might be empty.</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 1.8.0_321</li>\n<li>sslcontext-kickstart Version 7.4.2</li>\n<li>OS: Windows</li>\n</ul>",
  "description_text": "Describe the bug\nHi, i found that CombinableX509TrustManager can't completed all trustManager's check, when some trustManager's trustdCerts is empty.\nTo Reproduce\n httpAsyncClientBuilder\n                        .setDefaultCredentialsProvider(basicCredentialsProvider)\n                        .setSSLContext(sslFactory.getSslContext())\n                        .setSSLHostnameVerifier(sslFactory.getHostnameVerifier())\n                )\n                .build();\n        RestClientTransport restClientTransport = new RestClientTransport(restClient, new JacksonJsonpMapper());\n        ElasticsearchClient elasticsearchClient = new ElasticsearchClient(restClientTransport);\n        IndicesResponse indices = elasticsearchClient.cat().indices();\n    }\n}\">public class ElasticsearchTest {\n    @Test\n    public void test_connect_elasticsearch_server() throws IOException {\n        SSLFactory sslFactory = SSLFactory.builder()\n                .withSystemTrustMaterial()\n                .withTrustMaterial(CertificateUtils.loadCertificate(\"http_ca.crt\"))\n                .build();\n        BasicCredentialsProvider basicCredentialsProvider = new BasicCredentialsProvider();\n        basicCredentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\"elastic\", \"es123456\"));\n\n        RestClient restClient = RestClient.builder(new HttpHost(\"192.168.169.2\", 39200, \"https\"))\n                .setHttpClientConfigCallback(httpAsyncClientBuilder -> httpAsyncClientBuilder\n                        .setDefaultCredentialsProvider(basicCredentialsProvider)\n                        .setSSLContext(sslFactory.getSslContext())\n                        .setSSLHostnameVerifier(sslFactory.getHostnameVerifier())\n                )\n                .build();\n        RestClientTransport restClientTransport = new RestClientTransport(restClient, new JacksonJsonpMapper());\n        ElasticsearchClient elasticsearchClient = new ElasticsearchClient(restClientTransport);\n        IndicesResponse indices = elasticsearchClient.cat().indices();\n    }\n}\nin withSystemTrustMaterial(), it would load Windows-ROOT keystore and Windows-MY keystore, but now my Windows-MY keystore certicate is empty.\nin withTrustMaterial(CertificateUtils.loadCertificate(\"http_ca.crt\")), it would load the elasticsearch's certicate.\n\nthe error is:\nCaused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\n\nI found in CombinableX509TrustManager will check all the TrustManager whether to support the current certificate chain. As a result of my second TrustManage from Windows-MY trustCerts is empty, so when executing callBackConsumer.checkTrusted(trustManager); method throws InvalidAlgorithmParameterException, but my third TrustManager actually can trust the current certificate.\n\nWhether all exceptions can be caught in CombinableX509TrustManager.checkTrusted so that all TrustManagers have a chance to be executed, or whether callBackConsumer.checkTrusted(trustManager); is not executed when the trustCerts of the trustManager is empty.\nAlthough I could have avoided this problem in my example by removing .withSystemTrustMaterial(), I think it's still possible that someone could load multiple TrustManagers at the same time, and the trustCerts of one of them might be empty.\nEnvironmental Data:\n\nJava Version 1.8.0_321\nsslcontext-kickstart Version 7.4.2\nOS: Windows\n"
}