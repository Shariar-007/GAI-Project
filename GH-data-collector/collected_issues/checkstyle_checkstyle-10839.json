{
  "issue_id": 10144,
  "issue_url": "https://github.com/checkstyle/checkstyle/issues/10144",
  "title": "ClassFanOutComplexity fails to count all classes in multicatch and implements clause, remove unused CheckUtil#createFullType method",
  "description": "<p dir=\"auto\">I have read check documentation: <a href=\"https://checkstyle.sourceforge.io/config_metrics.html#ClassFanOutComplexity\" rel=\"nofollow\">https://checkstyle.sourceforge.io/config_metrics.html#ClassFanOutComplexity</a><br>\nI have downloaded the latest checkstyle from: <a href=\"https://checkstyle.org/cmdline.html#Download_and_Run\" rel=\"nofollow\">https://checkstyle.org/cmdline.html#Download_and_Run</a><br>\nI have executed the cli and showed it below, as cli describes the problem better than 1,000 words</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n\u279c  src javac Test.java\nNote: Test.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n\n\u279c  src cat config.xml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n        <module name=\"ClassFanOutComplexity\">\n          <property name=\"max\" value=\"1\"/>\n<!--          <property name=\"memberModifiers\" value=\"LITERAL_PUBLIC, FINAL\"/>-->\n        </module>\n    </module>\n</module>\n\n\u279c  src cat Test.java\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.EmptyStackException;\n\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.println(args[7]);\n            File myFile = new File(\"myfile.txt\"); // 1\n\n            InputStream stream = myFile.toURL().openStream(); // 2\n        } catch (IOException  | EmptyStackException e) { // 3,4\n\n        }\n    }\n\n}\n\n\u279c  src java -jar checkstyle-8.43-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /home/nick/Desktop/Tester/src/Test.java:6:1: Class Fan-Out Complexity is 3 (max allowed is 1). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\u279c  src \n\n\"><pre class=\"notranslate\"><code>\n\u279c  src javac Test.java\nNote: Test.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n\n\u279c  src cat config.xml \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"TreeWalker\">\n        <module name=\"ClassFanOutComplexity\">\n          <property name=\"max\" value=\"1\"/>\n<!--          <property name=\"memberModifiers\" value=\"LITERAL_PUBLIC, FINAL\"/>-->\n        </module>\n    </module>\n</module>\n\n\u279c  src cat Test.java\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.EmptyStackException;\n\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.println(args[7]);\n            File myFile = new File(\"myfile.txt\"); // 1\n\n            InputStream stream = myFile.toURL().openStream(); // 2\n        } catch (IOException  | EmptyStackException e) { // 3,4\n\n        }\n    }\n\n}\n\n\u279c  src java -jar checkstyle-8.43-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /home/nick/Desktop/Tester/src/Test.java:6:1: Class Fan-Out Complexity is 3 (max allowed is 1). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\u279c  src \n\n\n</code></pre></div>\n<p dir=\"auto\">I would expect the \"Class Fan-Out Complexity\" to be 4.</p>",
  "description_text": "I have read check documentation: https://checkstyle.sourceforge.io/config_metrics.html#ClassFanOutComplexity\nI have downloaded the latest checkstyle from: https://checkstyle.org/cmdline.html#Download_and_Run\nI have executed the cli and showed it below, as cli describes the problem better than 1,000 words\n\n\n\n\n\n\n\n\n\n\n\n\u279c  src cat Test.java\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.EmptyStackException;\n\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.println(args[7]);\n            File myFile = new File(\"myfile.txt\"); // 1\n\n            InputStream stream = myFile.toURL().openStream(); // 2\n        } catch (IOException  | EmptyStackException e) { // 3,4\n\n        }\n    }\n\n}\n\n\u279c  src java -jar checkstyle-8.43-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /home/nick/Desktop/Tester/src/Test.java:6:1: Class Fan-Out Complexity is 3 (max allowed is 1). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\u279c  src \n\n\">\n\u279c  src javac Test.java\nNote: Test.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n\n\u279c  src cat config.xml \n\n\n\n\n    \n        \n          \n\n        \n    \n\n\n\u279c  src cat Test.java\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.EmptyStackException;\n\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.println(args[7]);\n            File myFile = new File(\"myfile.txt\"); // 1\n\n            InputStream stream = myFile.toURL().openStream(); // 2\n        } catch (IOException  | EmptyStackException e) { // 3,4\n\n        }\n    }\n\n}\n\n\u279c  src java -jar checkstyle-8.43-all.jar -c config.xml Test.java\nStarting audit...\n[ERROR] /home/nick/Desktop/Tester/src/Test.java:6:1: Class Fan-Out Complexity is 3 (max allowed is 1). [ClassFanOutComplexity]\nAudit done.\nCheckstyle ends with 1 errors.\n\u279c  src \n\n\n\nI would expect the \"Class Fan-Out Complexity\" to be 4."
}