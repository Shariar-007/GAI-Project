{
  "issue_id": 684,
  "issue_url": "https://github.com/FasterXML/jackson-core/issues/684",
  "title": "Add \"JsonPointer#appendProperty\" and \"JsonPointer#appendIndex\"",
  "description": "<p dir=\"auto\">When working heavily with JsonPointers, the following patterns usually emerges:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"JsonPointer root = JsonPointer.compile(\"/a/b\");\n/// ... code\nString property = \"c\"\nroot.append(JsonPointer.compile(\"/\" + property));\n/// or\nJsonPointer.compile(root + \"/\" + property)\"><pre><span class=\"pl-smi\">JsonPointer</span> <span class=\"pl-s1\">root</span> = <span class=\"pl-s1\">JsonPointer</span>.<span class=\"pl-en\">compile</span>(<span class=\"pl-s\">\"/a/b\"</span>);\n<span class=\"pl-c\">/// ... code</span>\n<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">property</span> = <span class=\"pl-s\">\"c\"</span>\n<span class=\"pl-s1\">root</span>.<span class=\"pl-en\">append</span>(<span class=\"pl-s1\">JsonPointer</span>.<span class=\"pl-en\">compile</span>(<span class=\"pl-s\">\"/\"</span> + <span class=\"pl-s1\">property</span>));\n<span class=\"pl-c\">/// or</span>\n<span class=\"pl-s1\">JsonPointer</span>.<span class=\"pl-en\">compile</span>(<span class=\"pl-s1\">root</span> + <span class=\"pl-s\">\"/\"</span> + <span class=\"pl-s1\">property</span>)</pre></div>\n<p dir=\"auto\">This is quite verbose, also a bit error prone, because it is easy to forget to add the <code class=\"notranslate\">/</code> before each append.</p>\n<p dir=\"auto\">Also, I found no easy way of appending slash characters without prior escaping.</p>\n<p dir=\"auto\">So the two methods proposed should help with both convenience and some edge cases. The only thing that worries me is overusing/misusing this methods. Jackson JsonPointer is <code class=\"notranslate\">head centric</code>, appending to the tail is expensive, so maybe documenting a warning should be good?</p>\n<p dir=\"auto\">I will open a PR when I get some free time. <a href=\"https://github.com/LouizFC/path-segment\">I did a similar thing in the past</a>, so I think I can probably reuse the tests from there.</p>",
  "description_text": "When working heavily with JsonPointers, the following patterns usually emerges:\nJsonPointer root = JsonPointer.compile(\"/a/b\");\n/// ... code\nString property = \"c\"\nroot.append(JsonPointer.compile(\"/\" + property));\n/// or\nJsonPointer.compile(root + \"/\" + property)\nThis is quite verbose, also a bit error prone, because it is easy to forget to add the / before each append.\nAlso, I found no easy way of appending slash characters without prior escaping.\nSo the two methods proposed should help with both convenience and some edge cases. The only thing that worries me is overusing/misusing this methods. Jackson JsonPointer is head centric, appending to the tail is expensive, so maybe documenting a warning should be good?\nI will open a PR when I get some free time. I did a similar thing in the past, so I think I can probably reuse the tests from there."
}