{
  "issue_id": 2686,
  "issue_url": "https://github.com/mockito/mockito/issues/2686",
  "title": "RETURNS_SELF breaks methods with generic return type",
  "description": "<p dir=\"auto\">I'm trying to use RETURNS_SELF to mock a builder with a generic method:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static class HttpBuilder {\n  private String uri;\n  \n  public HttpBuilder withUri(String uri) {\n    this.uri = uri;\n    return this\n  }\n\n  ...\n\n  public <T> T request(T result) {\n    return result; // Do typed request\n  }\n}\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">HttpBuilder</span> {\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>;\n  \n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">HttpBuilder</span> <span class=\"pl-en\">withUri</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>) {\n    <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">uri</span> = <span class=\"pl-s1\">uri</span>;\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>\n  }\n\n  ...\n\n  <span class=\"pl-k\">public</span> <<span class=\"pl-s1\">T</span>> <span class=\"pl-smi\">T</span> <span class=\"pl-s1\">request</span>(<span class=\"pl-smi\">T</span> <span class=\"pl-s1\">result</span>) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>; <span class=\"pl-c\">// Do typed request</span>\n  }\n}</pre></div>\n<p dir=\"auto\">It is easy enough to mock using:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val builder = mock(HttpBuilder.class, RETURNS_SELF);\"><pre><span class=\"pl-smi\">val</span> <span class=\"pl-s1\">builder</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">HttpBuilder</span>.<span class=\"pl-s1\">class</span>, <span class=\"pl-c1\">RETURNS_SELF</span>);</pre></div>\n<p dir=\"auto\">However this breaks:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"given(builder.request(anyString())).willAnswer(i \u2192 \"Mocked result\");\"><pre><span class=\"pl-en\">given</span>(<span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">request</span>(<span class=\"pl-en\">anyString</span>())).<span class=\"pl-en\">willAnswer</span>(<span class=\"pl-s1\">i</span> \u2192 <span class=\"pl-s\">\"Mocked result\"</span>);</pre></div>\n<p dir=\"auto\">The problem is, that <code class=\"notranslate\">anyString()</code> infers <code class=\"notranslate\">builder.request</code> to have a <code class=\"notranslate\">String</code> return type, which infers <code class=\"notranslate\">given</code> to have a <code class=\"notranslate\">String methodCall</code> parameter.<br>\nHowever, at runtime a <code class=\"notranslate\">ClassCastException</code> is thrown as <code class=\"notranslate\">builder.request(anyString())</code> returns a <code class=\"notranslate\">HttpBuilder$MockitoMock</code> which cannot be cast to the the <code class=\"notranslate\">String</code> expected by <code class=\"notranslate\">given</code>.<br>\n(I think) this is caused by <code class=\"notranslate\">RETURNS_SELF</code> <a href=\"https://github.com/mockito/mockito/blob/6f9108b833323345bd926f10914224d3e0a11b80/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java#L23\">here</a> in the <code class=\"notranslate\">TriesToReturnSelf</code> class. The generic method has the return type <code class=\"notranslate\">Object</code> which is obviously assignable from <code class=\"notranslate\">mockType</code>. This causes mockito to always undesirably return <code class=\"notranslate\">this</code> with methods with generic return types when using <code class=\"notranslate\">RETURNS_SELF</code>.</p>\n<p dir=\"auto\">Is it possible for mockito to check whether the return type of the method  is generic? In that case I would suggest a fix to never return <code class=\"notranslate\">this</code> for methods with generic return types.<br>\nIf you think this would be a good solution, I am happy to contribute a fix.</p>\n<p dir=\"auto\">edit: What do you think of checking whether return type is of type <code class=\"notranslate\">Object.class</code>, which suggests that mockito should probable return the empty value instead of <code class=\"notranslate\">this</code></p>\n<p dir=\"auto\">edit 2: Added <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1270961760\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2687\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2687/hovercard\" href=\"https://github.com/mockito/mockito/pull/2687\">#2687</a> to demonstrate the issue with a test and solution proposal. Happy to update with any comments</p>",
  "description_text": "I'm trying to use RETURNS_SELF to mock a builder with a generic method:\nprivate static class HttpBuilder {\n  private String uri;\n  \n  public HttpBuilder withUri(String uri) {\n    this.uri = uri;\n    return this\n  }\n\n  ...\n\n  public <T> T request(T result) {\n    return result; // Do typed request\n  }\n}\nIt is easy enough to mock using:\nval builder = mock(HttpBuilder.class, RETURNS_SELF);\nHowever this breaks:\ngiven(builder.request(anyString())).willAnswer(i \u2192 \"Mocked result\");\nThe problem is, that anyString() infers builder.request to have a String return type, which infers given to have a String methodCall parameter.\nHowever, at runtime a ClassCastException is thrown as builder.request(anyString()) returns a HttpBuilder$MockitoMock which cannot be cast to the the String expected by given.\n(I think) this is caused by RETURNS_SELF here in the TriesToReturnSelf class. The generic method has the return type Object which is obviously assignable from mockType. This causes mockito to always undesirably return this with methods with generic return types when using RETURNS_SELF.\nIs it possible for mockito to check whether the return type of the method  is generic? In that case I would suggest a fix to never return this for methods with generic return types.\nIf you think this would be a good solution, I am happy to contribute a fix.\nedit: What do you think of checking whether return type is of type Object.class, which suggests that mockito should probable return the empty value instead of this\nedit 2: Added #2687 to demonstrate the issue with a test and solution proposal. Happy to update with any comments"
}