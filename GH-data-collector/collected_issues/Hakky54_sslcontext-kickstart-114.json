{
  "issue_id": 113,
  "issue_url": "https://github.com/Hakky54/sslcontext-kickstart/issues/113",
  "title": "Misleading NullPointerException when reading an encrypted PEM key and none supplied",
  "description": "<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">When an encrypted PEM private key is used without supplying a password, a null pointer exception is being returned.</p>\n<p dir=\"auto\">There is not way for the library user (an probably my end users too) to know the reason of this failure is that a password is required.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        \"certs.crt\",\n                        \"encrypted.private.key\",\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(\"TLS\");\n            context.init(kmf.getKeyManagers(), null, null);\"><pre class=\"notranslate\"><code>            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        \"certs.crt\",\n                        \"encrypted.private.key\",\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(\"TLS\");\n            context.init(kmf.getKeyManagers(), null, null);\n</code></pre></div>\n<p dir=\"auto\">Results in :</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\"><pre class=\"notranslate\"><code>java.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">I expect a dedicated exception with an easy to understand message...</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java 11 (OpenJDK 11.0.11)</li>\n<li>Maven 3.6.3</li>\n<li>Ubuntu</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong></p>\n<p dir=\"auto\">I could end up using this library in a contribution to Apache James to not just support keystores but also PEM files.</p>\n<p dir=\"auto\">The ease of use is appealing though I need users to understand by themselves their mistakes before reaching the community (including I) and says stuff like \"your soft is not working there is a NPE\" without understanding the mistake is theirs...</p>\n<p dir=\"auto\">BTW I could fire a patch if my above proposal is deemed acceptable.</p>",
  "description_text": "Describe the bug\nWhen an encrypted PEM private key is used without supplying a password, a null pointer exception is being returned.\nThere is not way for the library user (an probably my end users too) to know the reason of this failure is that a password is required.\nTo Reproduce\n            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        \"certs.crt\",\n                        \"encrypted.private.key\",\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(\"TLS\");\n            context.init(kmf.getKeyManagers(), null, null);\n\nResults in :\njava.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\n\nExpected behavior\nI expect a dedicated exception with an easy to understand message...\nEnvironmental Data:\n\nJava 11 (OpenJDK 11.0.11)\nMaven 3.6.3\nUbuntu\n\nAdditional context\nI could end up using this library in a contribution to Apache James to not just support keystores but also PEM files.\nThe ease of use is appealing though I need users to understand by themselves their mistakes before reaching the community (including I) and says stuff like \"your soft is not working there is a NPE\" without understanding the mistake is theirs...\nBTW I could fire a patch if my above proposal is deemed acceptable."
}