[{"repository":{"pullRequest":{"title":"Fix generating invalid XML tag names","url":"https://github.com/FasterXML/jackson-dataformat-xml/pull/531","resourcePath":"/FasterXML/jackson-dataformat-xml/pull/531","createdAt":"2022-06-02T07:17:54Z","number":531,"mergeCommit":null,"potentialMergeCommit":{"oid":"5ab8fd372d20c243b8de7eeedfd3ac210a4908d6","message":"Merge 87cc90c14d3c1ffbccb63972f230ef5b8837edf1 into c044e6fed8836374e9d108200c92a8e560eae354","commitUrl":"https://github.com/FasterXML/jackson-dataformat-xml/commit/5ab8fd372d20c243b8de7eeedfd3ac210a4908d6","parents":{"nodes":[{"oid":"c044e6fed8836374e9d108200c92a8e560eae354","message":"Bump codecov/codecov-action from 1 to 3 (#528)\n\nBumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 1 to 3.\r\n- [Release notes](https://github.com/codecov/codecov-action/releases)\r\n- [Changelog](https://github.com/codecov/codecov-action/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/codecov/codecov-action/compare/v1...v3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: codecov/codecov-action\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"},{"oid":"87cc90c14d3c1ffbccb63972f230ef5b8837edf1","message":"Add XML tag name proccessing support via XmlTagProcessor\n\nThis commit adds an extendable `XmlTagProcessor` that is used for\nescaping invalid characters in XML tag names.\n\nfixes #523\nfixes #524"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactory.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/XmlMapper.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTagProcessor.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/XmlTagProcessors.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/com/fasterxml/jackson/dataformat/xml/misc/TagEscapeTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/com/fasterxml/jackson/dataformat/xml/stream/XmlTokenStreamTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOABJ3ss449MTE2gAoODdjYzkwYzE0ZDNjMWZmYmNjYjYzOTcyZjIzMGVmNWI4ODM3ZWRmMQ","url":"https://github.com/FasterXML/jackson-dataformat-xml/pull/531/commits/87cc90c14d3c1ffbccb63972f230ef5b8837edf1"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":523,"url":"https://github.com/FasterXML/jackson-dataformat-xml/issues/523","title":"Bad map keys can not be unmarshaled","bodyHTML":"<p dir=\"auto\">Specifically map keys like <code class=\"notranslate\">000</code> and <code class=\"notranslate\">111</code> will be marshaled as <code class=\"notranslate\">&lt;000&gt;</code> and <code class=\"notranslate\">&lt;111&gt;</code>, which can no longer be unmarshaled. Jackson should make sure to escape those keys correctly.</p>\n<p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package it;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.dataformat.xml.XmlMapper;\n\nimport java.util.Map;\n\npublic class BadMap {\n    public static class DTO {\n        public Map&lt;String, String&gt; badMap = Map.of(&quot;000&quot;, &quot;foo&quot;, &quot;111&quot;, &quot;bar&quot;);\n    }\n\n    public static void main(String ... args) throws JsonProcessingException {\n        DTO dto = new DTO();\n\n        XmlMapper mapper = new XmlMapper();\n\n        final String res = mapper.writeValueAsString(dto);\n\n        // &lt;DTO&gt;&lt;badMap&gt;&lt;000&gt;foo&lt;/000&gt;&lt;111&gt;bar&lt;/111&gt;&lt;/badMap&gt;&lt;/DTO&gt;\n        System.out.println(res);\n\n        // ERROR!\n        // com.fasterxml.jackson.core.JsonParseException: Unexpected character '0' (code 48) in content after '&lt;' (malformed start element?).\n        mapper.readValue(res, DTO.class);\n    }\n}\n\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-s1\">it</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">JsonProcessingException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">dataformat</span>.<span class=\"pl-s1\">xml</span>.<span class=\"pl-s1\">XmlMapper</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Map</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">BadMap</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DTO</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">badMap</span> = <span class=\"pl-s1\">Map</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-s\">\"000\"</span>, <span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"111\"</span>, <span class=\"pl-s\">\"bar\"</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span> ... <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">JsonProcessingException</span> {\n        <span class=\"pl-smi\">DTO</span> <span class=\"pl-s1\">dto</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DTO</span>();\n\n        <span class=\"pl-smi\">XmlMapper</span> <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">XmlMapper</span>();\n\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">res</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-s1\">dto</span>);\n\n        <span class=\"pl-c\">// &lt;DTO&gt;&lt;badMap&gt;&lt;000&gt;foo&lt;/000&gt;&lt;111&gt;bar&lt;/111&gt;&lt;/badMap&gt;&lt;/DTO&gt;</span>\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">res</span>);\n\n        <span class=\"pl-c\">// ERROR!</span>\n        <span class=\"pl-c\">// com.fasterxml.jackson.core.JsonParseException: Unexpected character '0' (code 48) in content after '&lt;' (malformed start element?).</span>\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">res</span>, <span class=\"pl-smi\">DTO</span>.<span class=\"pl-s1\">class</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">jackson version: 2.13.2</p>","resourcePath":"/FasterXML/jackson-dataformat-xml/issues/523","createdAt":"2022-05-03T13:28:15Z","labels":{"edges":[]}}},{"node":{"number":524,"url":"https://github.com/FasterXML/jackson-dataformat-xml/issues/524","title":"Dollars in POJO property names are not escaped on serialization","bodyHTML":"<p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package it;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.dataformat.xml.XmlMapper;\n\npublic class Dollar {\n\n    public static class DTO {\n        public String thisStringIs$Fancy$ = &quot;Hello World!&quot;;\n    }\n\n    public static void main(String ... args) throws JsonProcessingException {\n        DTO dto = new DTO();\n\n        XmlMapper mapper = new XmlMapper();\n\n        final String res = mapper.writeValueAsString(dto);\n\n        // &lt;DTO&gt;&lt;thisStringIs$Fancy$&gt;Hello World!&lt;/thisStringIs$Fancy$&gt;&lt;/DTO&gt;\n        System.out.println(res);\n\n        // ERROR!\n        // com.fasterxml.jackson.core.JsonParseException: Unexpected character '$' (code 36) excepted space, or '&gt;' or &quot;/&gt;&quot;\n        mapper.readValue(res, DTO.class);\n    }\n\n}\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-s1\">it</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">JsonProcessingException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">dataformat</span>.<span class=\"pl-s1\">xml</span>.<span class=\"pl-s1\">XmlMapper</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Dollar</span> {\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DTO</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">thisStringIs$Fancy$</span> = <span class=\"pl-s\">\"Hello World!\"</span>;\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span> ... <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">JsonProcessingException</span> {\n        <span class=\"pl-smi\">DTO</span> <span class=\"pl-s1\">dto</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DTO</span>();\n\n        <span class=\"pl-smi\">XmlMapper</span> <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">XmlMapper</span>();\n\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">res</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-s1\">dto</span>);\n\n        <span class=\"pl-c\">// &lt;DTO&gt;&lt;thisStringIs$Fancy$&gt;Hello World!&lt;/thisStringIs$Fancy$&gt;&lt;/DTO&gt;</span>\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">res</span>);\n\n        <span class=\"pl-c\">// ERROR!</span>\n        <span class=\"pl-c\">// com.fasterxml.jackson.core.JsonParseException: Unexpected character '$' (code 36) excepted space, or '&gt;' or \"/&gt;\"</span>\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">res</span>, <span class=\"pl-smi\">DTO</span>.<span class=\"pl-s1\">class</span>);\n    }\n\n}</pre></div>\n<p dir=\"auto\">jackson version: 2.13.2</p>","resourcePath":"/FasterXML/jackson-dataformat-xml/issues/524","createdAt":"2022-05-03T13:29:48Z","labels":{"edges":[{"node":{"name":"2.14"}}]}}}]}}}}]