[{"repository":{"pullRequest":{"title":"Try harder to get charset from meta elements","url":"https://github.com/jhy/jsoup/pull/835","resourcePath":"/jhy/jsoup/pull/835","createdAt":"2017-02-22T09:45:21Z","number":835,"mergeCommit":{"oid":"91afa82cfd285b88999669aa55a725f7c75cc40a","message":"Merge pull request #835 from cketti/GH-834_multiple_meta_elements_with_content_type\n\nTry harder to get charset from meta elements","commitUrl":"https://github.com/jhy/jsoup/commit/91afa82cfd285b88999669aa55a725f7c75cc40a","parents":{"nodes":[{"oid":"bae55f9e99afed86b0d30caff999fd40c4268d48","message":"Improved docs to help with #852"},{"oid":"a5266b14a2b7457e076d5f6429c2197baf5412e4","message":"Consider all meta elements until a charset is found"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/DataUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/helper/DataUtilTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTA3MzY4ODc0OmE1MjY2YjE0YTJiNzQ1N2UwNzZkNWY2NDI5YzIxOTdiYWY1NDEyZTQ=","url":"https://github.com/jhy/jsoup/pull/835/commits/a5266b14a2b7457e076d5f6429c2197baf5412e4"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":834,"url":"https://github.com/jhy/jsoup/issues/834","title":"DataUtil.parseByteData charset detect issue ","bodyHTML":"<p dir=\"auto\">If there are two meta[http-equiv=content-type] below the URL, this is not detected</p>\n<p dir=\"auto\"><a href=\"http://www.hanatour.com/asp/contents/eventBoard/cp-00001.asp?hanacode=main_coupon\" rel=\"nofollow\">http://www.hanatour.com/asp/contents/eventBoard/cp-00001.asp?hanacode=main_coupon</a></p>\n<p dir=\"auto\">this site html tag is<br>\n&lt; head&gt;<br>\n&lt; META http-equiv=\"Content-Type\" content=\"text/html\"&gt;<br>\n&lt; title&gt;하나투어 :: 1등 여행사 (주)하나투어&lt;/title&gt;<br>\n&lt; meta http-equiv=\"Content-Type\" content=\"text/html; charset=euc-kr\"&gt;<br>\n.<br>\n.<br>\n.</p>","resourcePath":"/jhy/jsoup/issues/834","createdAt":"2017-02-22T07:35:59Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix :has selector to set the root, allowing relative selectors","url":"https://github.com/jhy/jsoup/pull/1214","resourcePath":"/jhy/jsoup/pull/1214","createdAt":"2019-05-16T11:22:19Z","number":1214,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/select/StructuralEvaluator.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/select/SelectorTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc5NDYxMzkxOjU3MzM3NTViMGZmMjA1ZDgxMWQ2OGNhNTA3ODljYTgwMzc5NzdkMDk=","url":"https://github.com/jhy/jsoup/pull/1214/commits/5733755b0ff205d811d68ca50789ca8037977d09"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1116,"url":"https://github.com/jhy/jsoup/issues/1116","title":"feature request: \":has()\" and \">\"","bodyHTML":"<p dir=\"auto\">Hello.</p>\n<p dir=\"auto\">It would nice to be able to use \"has:()\" with \"&gt;\".<br>\nSo query like \"div:has(&gt; a)\" will select all \"div\" elements that have at lease one direct child \"a\" element.<br>\nOr, for example, add selector like \":hasChild(..)\".</p>\n<p dir=\"auto\">Thanks.</p>","resourcePath":"/jhy/jsoup/issues/1116","createdAt":"2018-08-26T09:37:25Z","labels":{"edges":[{"node":{"name":"feature"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Add methods taking a Reader","url":"https://github.com/jhy/jsoup/pull/1178","resourcePath":"/jhy/jsoup/pull/1178","createdAt":"2019-02-03T16:44:56Z","number":1178,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/Jsoup.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/Parser.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjQ5ODg4NTI2OmU3OTc5MDc3MzFmYzYxNjhmYmEyODQyODQ1MWFlNWY0Y2NkM2IyZmQ=","url":"https://github.com/jhy/jsoup/pull/1178/commits/e797907731fc6168fba28428451ae5f4ccd3b2fd"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1177,"url":"https://github.com/jhy/jsoup/issues/1177","title":"Expand support for java.io.Reader","bodyHTML":"<p dir=\"auto\">I see that in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"42985161\" data-permission-text=\"Title is private\" data-url=\"https://github.com/jhy/jsoup/issues/463\" data-hovercard-type=\"issue\" data-hovercard-url=\"/jhy/jsoup/issues/463/hovercard\" href=\"https://github.com/jhy/jsoup/issues/463\">#463</a> some support for <code class=\"notranslate\">Reader</code> was added: <a href=\"https://jsoup.org/apidocs/org/jsoup/parser/Parser.html#parseInput-java.io.Reader-java.lang.String-\" rel=\"nofollow\">https://jsoup.org/apidocs/org/jsoup/parser/Parser.html#parseInput-java.io.Reader-java.lang.String-</a></p>\n<p dir=\"auto\">However, I'm not quite sure how to use it. It looks like none of the <code class=\"notranslate\">Jsoup.parse</code> methods take a reader. Would it be possible to add a new method taking a <code class=\"notranslate\">Reader</code>? I'm trying to use Jsoup inside an interface that only has a <code class=\"notranslate\">Reader</code> available</p>","resourcePath":"/jhy/jsoup/issues/1177","createdAt":"2019-02-03T08:36:36Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Report the correct error position in some malformed constructs.","url":"https://github.com/jhy/jsoup/pull/1253","resourcePath":"/jhy/jsoup/pull/1253","createdAt":"2019-08-31T10:21:37Z","number":1253,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/CharacterReader.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TokeniserState.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/TokeniserStateTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzEyOTQ2MjgyOjI5YWNkNThiODY0YjdjYjYxZGU5OGYwMDc2ZDM4ZTg0MGExODEwZDI=","url":"https://github.com/jhy/jsoup/pull/1253/commits/29acd58b864b7cb61de98f0076d38e840a1810d2"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1251,"url":"https://github.com/jhy/jsoup/issues/1251","title":"Bad html causes ArrayIndexOutOfBoundsException (v1.11.3), UncheckedIOException (v1.12.1)","bodyHTML":"<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void test() {\n    byte[] data = new URL(&quot;https://github.com/apache/any23/files/3551705/weirdjsoupmin.txt&quot;).openStream().readAllBytes();\n    Parser.parseFragment(new String(data, StandardCharsets.ISO_8859_1), null, &quot;&quot;, ParseErrorList.tracking(1));\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">test</span>() {\n    <span class=\"pl-smi\">byte</span>[] <span class=\"pl-s1\">data</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">URL</span>(<span class=\"pl-s\">\"https://github.com/apache/any23/files/3551705/weirdjsoupmin.txt\"</span>).<span class=\"pl-en\">openStream</span>().<span class=\"pl-en\">readAllBytes</span>();\n    <span class=\"pl-s1\">Parser</span>.<span class=\"pl-en\">parseFragment</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>(<span class=\"pl-s1\">data</span>, <span class=\"pl-smi\">StandardCharsets</span>.<span class=\"pl-c1\">ISO_8859_1</span>), <span class=\"pl-c1\">null</span>, <span class=\"pl-s\">\"\"</span>, <span class=\"pl-s1\">ParseErrorList</span>.<span class=\"pl-en\">tracking</span>(<span class=\"pl-c1\">1</span>));\n}</pre></div>\n<p dir=\"auto\">Output (jsoup v1.11.3):</p>\n<blockquote>\n<p dir=\"auto\">Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1<br>\nat org.jsoup.parser.CharacterReader.consume(CharacterReader.java:99)<br>\nat org.jsoup.parser.TokeniserState$34.read(TokeniserState.java:552)<br>\nat org.jsoup.parser.Tokeniser.read(Tokeniser.java:57)<br>\nat org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:51)<br>\nat org.jsoup.parser.HtmlTreeBuilder.parseFragment(HtmlTreeBuilder.java:126)<br>\nat org.jsoup.parser.Parser.parseFragment(Parser.java:138)</p>\n</blockquote>\n<p dir=\"auto\">Output (jsoup v1.12.1):</p>\n<blockquote>\n<p dir=\"auto\">Exception in thread \"main\" org.jsoup.UncheckedIOException: java.io.IOException: No buffer left to unconsume<br>\nat org.jsoup.parser.CharacterReader.unconsume(CharacterReader.java:111)<br>\nat org.jsoup.parser.TokeniserState$41.read(TokeniserState.java:877)<br>\nat org.jsoup.parser.Tokeniser.read(Tokeniser.java:57)<br>\nat org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:55)<br>\nat org.jsoup.parser.HtmlTreeBuilder.parseFragment(HtmlTreeBuilder.java:126)<br>\nat org.jsoup.parser.Parser.parseFragment(Parser.java:140)<br>\nCaused by: java.io.IOException: No buffer left to unconsume<br>\n... 7 more</p>\n</blockquote>\n<p dir=\"auto\">This exception originally occurred when parsing the webpage <a href=\"https://www.streetpadel.com/overgrip-head-pro-grip-dz-negro-p-17233.html\" rel=\"nofollow\">https://www.streetpadel.com/overgrip-head-pro-grip-dz-negro-p-17233.html</a> but I whittled the html down to a minimal example that reproduces the issue, here: <a href=\"https://github.com/apache/any23/files/3551705/weirdjsoupmin.txt\">https://github.com/apache/any23/files/3551705/weirdjsoupmin.txt</a>.</p>\n<p dir=\"auto\">Cf. <a href=\"https://github.com/apache/any23/pull/139\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/apache/any23/pull/139/hovercard\">ANY23-441</a></p>","resourcePath":"/jhy/jsoup/issues/1251","createdAt":"2019-08-28T23:51:21Z","labels":{"edges":[{"node":{"name":"bug"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #1220 self-closing textarea.","url":"https://github.com/jhy/jsoup/pull/1222","resourcePath":"/jhy/jsoup/pull/1222","createdAt":"2019-05-24T21:04:33Z","number":1222,"mergeCommit":{"oid":"a8d431bad9575d5f32d7b87252962a8aae02d59f","message":"Fixes #1220 self-closing textarea","commitUrl":"https://github.com/jhy/jsoup/commit/a8d431bad9575d5f32d7b87252962a8aae02d59f","parents":{"nodes":[{"oid":"cfd1362861093f5836513fb1a7a9670f9c5c1de6","message":"Extra tests"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"CHANGES"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjgyMTU4NzkyOmIwNjEwMDcyYjg2YTY1YzZjZmU3OGE3MGRiZDhiYmQ1YzJlZThlODE=","url":"https://github.com/jhy/jsoup/pull/1222/commits/b0610072b86a65c6cfe78a70dbd8bbd5c2ee8e81"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1220,"url":"https://github.com/jhy/jsoup/issues/1220","title":"Fixing <textarea/> leaves some unwanted things.","bodyHTML":"<p dir=\"auto\">Someone noticed <a href=\"https://stackoverflow.com/questions/56296170/jsoup-messing-the-html-with-self-closing-text-area/56297927\" rel=\"nofollow\">here</a> jsoup doesn't parse <code class=\"notranslate\">&lt;textarea/&gt;</code> correctly.<br>\nParsing this HTML</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;div&gt;\n   &lt;div&gt;\n      &lt;textarea/&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\"><pre class=\"notranslate\"><code>&lt;div&gt;\n   &lt;div&gt;\n      &lt;textarea/&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre></div>\n<p dir=\"auto\">results in:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;div&gt;\n   &lt;div&gt;\n      &lt;textarea&gt;&lt;/textarea&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;\n   &lt;/div&gt;\n&lt;/div&gt;\"><pre class=\"notranslate\"><code>&lt;div&gt;\n   &lt;div&gt;\n      &lt;textarea&gt;&lt;/textarea&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre></div>\n<p dir=\"auto\">I appreciate it nicely recovered and resolved textarea to opening and closing tag but it added some unnecessary things.<br>\nUsing XML parser is not a solution as we're talking about HTML.<br>\nTo reproduce:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Document doc = Jsoup.parse(&quot;&lt;div&gt;&lt;div&gt;&lt;textarea /&gt;&lt;/div&gt;&lt;/div&gt;&quot;);\nSystem.out.println(doc);\"><pre class=\"notranslate\"><code>Document doc = Jsoup.parse(\"&lt;div&gt;&lt;div&gt;&lt;textarea /&gt;&lt;/div&gt;&lt;/div&gt;\");\nSystem.out.println(doc);\n</code></pre></div>","resourcePath":"/jhy/jsoup/issues/1220","createdAt":"2019-05-24T18:39:26Z","labels":{"edges":[{"node":{"name":"improvement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Add a parse method to encode illegal tag in html body","url":"https://github.com/jhy/jsoup/pull/1359","resourcePath":"/jhy/jsoup/pull/1359","createdAt":"2020-04-20T14:40:14Z","number":1359,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/Jsoup.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/Parser.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TreeBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlParserTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDA2MTA1ODgxOjFiNjc5ZGY2OGE3YzUyMjUzYTQwZmIxZDcwYjFjNWJiMWVlYTZjOTI=","url":"https://github.com/jhy/jsoup/pull/1359/commits/1b679df68a7c52253a40fb1d70b1c5bb1eea6c92"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1230,"url":"https://github.com/jhy/jsoup/issues/1230","title":"How to encode illegal tag in html body","bodyHTML":"<p dir=\"auto\">Is there anyway to encode illegal tags with cleaner or parser like this:</p>\n<p dir=\"auto\">input: <code class=\"notranslate\">&lt;p&gt;Try &lt;aaa&gt;jsoup&lt;/p&gt;</code><br>\noutput: <code class=\"notranslate\">&lt;p&gt;Try &amp;lt;aaa&amp;gt; jsoup&lt;/p&gt;</code></p>\n<p dir=\"auto\">thanks for your help.</p>","resourcePath":"/jhy/jsoup/issues/1230","createdAt":"2019-06-05T02:41:07Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Support Element.firstParent(query)","url":"https://github.com/jhy/jsoup/pull/1354","resourcePath":"/jhy/jsoup/pull/1354","createdAt":"2020-04-19T06:25:00Z","number":1354,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Element.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/select/ElementsTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDA1NjEyNzY1OmI4YjE3YzM0NzJmMmIwMDFjYzIzMDFkMDU0ZmIzODNiMDk0ZDZjNmU=","url":"https://github.com/jhy/jsoup/pull/1354/commits/b8b17c3472f2b001cc2301d054fb383b094d6c6e"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1060,"url":"https://github.com/jhy/jsoup/issues/1060","title":"[Enhancement] Element.firstParent(String query)","bodyHTML":"<p dir=\"auto\">It would be nice if there was a function that allows one to find the nearest parent using a specific query, for readability purposes.</p>\n<p dir=\"auto\">Currently what is happening is<br>\n<code class=\"notranslate\">Element.parents().select(query).first()</code></p>\n<p dir=\"auto\">What it would look like<br>\n<code class=\"notranslate\">Element.firstParent(query)</code></p>","resourcePath":"/jhy/jsoup/issues/1060","createdAt":"2018-05-10T19:04:53Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix incorrect rtc element","url":"https://github.com/jhy/jsoup/pull/1365","resourcePath":"/jhy/jsoup/pull/1365","createdAt":"2020-05-03T12:37:14Z","number":1365,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/parser/RtcElementTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDEyNTk2MzI4OmU5MGIzNTJiZDNhYzgzYWM0NzNkODE2MTM5MTAzZjlmZDQ5MzFiNTM=","url":"https://github.com/jhy/jsoup/pull/1365/commits/e90b352bd3ac83ac473d816139103f9fd4931b53"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1294,"url":"https://github.com/jhy/jsoup/issues/1294","title":"The ruby rtc element is incorrectly processed.","bodyHTML":"<p dir=\"auto\">Given the markup in the example from <a href=\"https://www.w3.org/TR/2001/REC-ruby-20010531/#complex\" rel=\"nofollow\">https://www.w3.org/TR/2001/REC-ruby-20010531/#complex</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;ruby&gt;\n  &lt;rbc&gt;\n    &lt;rb&gt;10&lt;/rb&gt;\n    &lt;rb&gt;31&lt;/rb&gt;\n    &lt;rb&gt;2002&lt;/rb&gt;\n  &lt;/rbc&gt;\n  &lt;rtc&gt;\n    &lt;rt&gt;Month&lt;/rt&gt;\n    &lt;rt&gt;Day&lt;/rt&gt;\n    &lt;rt&gt;Year&lt;/rt&gt;\n  &lt;/rtc&gt;\n  &lt;rtc&gt;\n    &lt;rt rbspan=&quot;3&quot;&gt;Expiration Date&lt;/rt&gt;\n  &lt;/rtc&gt;\n&lt;/ruby&gt;\"><pre class=\"notranslate\"><code>&lt;ruby&gt;\n  &lt;rbc&gt;\n    &lt;rb&gt;10&lt;/rb&gt;\n    &lt;rb&gt;31&lt;/rb&gt;\n    &lt;rb&gt;2002&lt;/rb&gt;\n  &lt;/rbc&gt;\n  &lt;rtc&gt;\n    &lt;rt&gt;Month&lt;/rt&gt;\n    &lt;rt&gt;Day&lt;/rt&gt;\n    &lt;rt&gt;Year&lt;/rt&gt;\n  &lt;/rtc&gt;\n  &lt;rtc&gt;\n    &lt;rt rbspan=\"3\"&gt;Expiration Date&lt;/rt&gt;\n  &lt;/rtc&gt;\n&lt;/ruby&gt;\n</code></pre></div>\n<p dir=\"auto\">the jsoup parser treats the <code class=\"notranslate\">rtc</code> element as an unknown element that gets closed immediately. This causes it to serialize in xml mode as:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;rtc&gt;&lt;/rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;\"><pre class=\"notranslate\"><code>&lt;rtc&gt;&lt;/rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;\n</code></pre></div>\n<p dir=\"auto\">I have checked the behaviour of Firefox and Chrome, and they preserve the <code class=\"notranslate\">rtc</code> element structure, e.g.:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;&lt;/rtc&gt;\"><pre class=\"notranslate\"><code>&lt;rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;&lt;/rtc&gt;\n</code></pre></div>\n<p dir=\"auto\">The <code class=\"notranslate\">rtc</code> element is supported in the W3C HTML spec [1], but not the WHATWG spec. Also, even though the <code class=\"notranslate\">rbc</code> element is not listed in either of those (only in the Ruby Annotations specification), the jsoup parser preserves the <code class=\"notranslate\">rbc</code> element structure.</p>\n<p dir=\"auto\">[1] <a href=\"https://www.w3.org/TR/2014/REC-html5-20141028/text-level-semantics.html#the-rtc-element\" rel=\"nofollow\">https://www.w3.org/TR/2014/REC-html5-20141028/text-level-semantics.html#the-rtc-element</a></p>","resourcePath":"/jhy/jsoup/issues/1294","createdAt":"2020-01-07T16:17:10Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix incorrect rtc element","url":"https://github.com/jhy/jsoup/pull/1364","resourcePath":"/jhy/jsoup/pull/1364","createdAt":"2020-05-03T12:18:51Z","number":1364,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/CharacterReader.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TokeniserState.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/parser/FragmentParseTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/parser/RtcElementTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDEyNTk0MDgzOjBlMGRkOTQ3N2ZhZjBjMjJjOWU4YTFlMzUyYjYwYTFkNmM1YmU2ODc=","url":"https://github.com/jhy/jsoup/pull/1364/commits/0e0dd9477faf0c22c9e8a1e352b60a1d6c5be687"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1294,"url":"https://github.com/jhy/jsoup/issues/1294","title":"The ruby rtc element is incorrectly processed.","bodyHTML":"<p dir=\"auto\">Given the markup in the example from <a href=\"https://www.w3.org/TR/2001/REC-ruby-20010531/#complex\" rel=\"nofollow\">https://www.w3.org/TR/2001/REC-ruby-20010531/#complex</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;ruby&gt;\n  &lt;rbc&gt;\n    &lt;rb&gt;10&lt;/rb&gt;\n    &lt;rb&gt;31&lt;/rb&gt;\n    &lt;rb&gt;2002&lt;/rb&gt;\n  &lt;/rbc&gt;\n  &lt;rtc&gt;\n    &lt;rt&gt;Month&lt;/rt&gt;\n    &lt;rt&gt;Day&lt;/rt&gt;\n    &lt;rt&gt;Year&lt;/rt&gt;\n  &lt;/rtc&gt;\n  &lt;rtc&gt;\n    &lt;rt rbspan=&quot;3&quot;&gt;Expiration Date&lt;/rt&gt;\n  &lt;/rtc&gt;\n&lt;/ruby&gt;\"><pre class=\"notranslate\"><code>&lt;ruby&gt;\n  &lt;rbc&gt;\n    &lt;rb&gt;10&lt;/rb&gt;\n    &lt;rb&gt;31&lt;/rb&gt;\n    &lt;rb&gt;2002&lt;/rb&gt;\n  &lt;/rbc&gt;\n  &lt;rtc&gt;\n    &lt;rt&gt;Month&lt;/rt&gt;\n    &lt;rt&gt;Day&lt;/rt&gt;\n    &lt;rt&gt;Year&lt;/rt&gt;\n  &lt;/rtc&gt;\n  &lt;rtc&gt;\n    &lt;rt rbspan=\"3\"&gt;Expiration Date&lt;/rt&gt;\n  &lt;/rtc&gt;\n&lt;/ruby&gt;\n</code></pre></div>\n<p dir=\"auto\">the jsoup parser treats the <code class=\"notranslate\">rtc</code> element as an unknown element that gets closed immediately. This causes it to serialize in xml mode as:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;rtc&gt;&lt;/rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;\"><pre class=\"notranslate\"><code>&lt;rtc&gt;&lt;/rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;\n</code></pre></div>\n<p dir=\"auto\">I have checked the behaviour of Firefox and Chrome, and they preserve the <code class=\"notranslate\">rtc</code> element structure, e.g.:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;&lt;/rtc&gt;\"><pre class=\"notranslate\"><code>&lt;rtc&gt;&lt;rt&gt;Month&lt;/rt&gt;&lt;rt&gt;Day&lt;/rt&gt;&lt;rt&gt;Year&lt;/rt&gt;&lt;/rtc&gt;\n</code></pre></div>\n<p dir=\"auto\">The <code class=\"notranslate\">rtc</code> element is supported in the W3C HTML spec [1], but not the WHATWG spec. Also, even though the <code class=\"notranslate\">rbc</code> element is not listed in either of those (only in the Ruby Annotations specification), the jsoup parser preserves the <code class=\"notranslate\">rbc</code> element structure.</p>\n<p dir=\"auto\">[1] <a href=\"https://www.w3.org/TR/2014/REC-html5-20141028/text-level-semantics.html#the-rtc-element\" rel=\"nofollow\">https://www.w3.org/TR/2014/REC-html5-20141028/text-level-semantics.html#the-rtc-element</a></p>","resourcePath":"/jhy/jsoup/issues/1294","createdAt":"2020-01-07T16:17:10Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix NullPointerException on standalone elements","url":"https://github.com/jhy/jsoup/pull/1394","resourcePath":"/jhy/jsoup/pull/1394","createdAt":"2020-05-30T13:25:30Z","number":1394,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Node.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/parser/WrapTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDI1NDY1NzM3OmI4NjMxZGJlNWRlOWVhM2JlMWMwYWJkODhhYTJiOTQzNDI3NTA2Mzk=","url":"https://github.com/jhy/jsoup/pull/1394/commits/b8631dbe5de9ea3be1c0abd88aa2b94342750639"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":593,"url":"https://github.com/jhy/jsoup/issues/593","title":"Node#wrap() throws NullPointerException on standalone elements","bodyHTML":"<p dir=\"auto\">When trying to call wrap(String) on a standalone element, wrap accesses the parent without checking if it is null which causes an exception.</p>\n<p dir=\"auto\">Example</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Document doc = Jsoup.connect('http://www.google.com').get();\n// create a new standalone element\nElement standaloneElement = new Element(doc.tag(), doc.baseUri())\n// wrap accesses parent which is null\nstandaloneElement.wrap(&quot;&lt;div&gt;&lt;/div&gt;&quot;)\"><pre class=\"notranslate\"><code>Document doc = Jsoup.connect('http://www.google.com').get();\n// create a new standalone element\nElement standaloneElement = new Element(doc.tag(), doc.baseUri())\n// wrap accesses parent which is null\nstandaloneElement.wrap(\"&lt;div&gt;&lt;/div&gt;\")\n</code></pre></div>\n<p dir=\"auto\">And the exception</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n    at org.jsoup.nodes.Node.wrap(Node.java:360)\n    at org.jsoup.nodes.Element.wrap(Element.java:453)\"><pre class=\"notranslate\"><code>java.lang.NullPointerException\n    at org.jsoup.nodes.Node.wrap(Node.java:360)\n    at org.jsoup.nodes.Element.wrap(Element.java:453)\n</code></pre></div>\n<p dir=\"auto\">Tested on version 1.8.2</p>","resourcePath":"/jhy/jsoup/issues/593","createdAt":"2015-06-19T19:58:31Z","labels":{"edges":[{"node":{"name":"bug"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix incorrect template element xml serialization","url":"https://github.com/jhy/jsoup/pull/1391","resourcePath":"/jhy/jsoup/pull/1391","createdAt":"2020-05-30T12:57:56Z","number":1391,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/jsoup/parser/TemplateTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/parser/TemplateTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDI1NDYyNzU0OmM2ZThkZWIzYmNkMzk0ODY3ZDNiMDJjZGQ4MzVkNjViZWZhMzMwOTI=","url":"https://github.com/jhy/jsoup/pull/1391/commits/c6e8deb3bcd394867d3b02cdd835d65befa33092"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1315,"url":"https://github.com/jhy/jsoup/issues/1315","title":"template element xml serialization removes the inner start/end tags","bodyHTML":"<p dir=\"auto\">After parsing the HTML fragment:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;template id=&quot;lorem-ipsum&quot;&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Lorem&lt;/td&gt;\n    &lt;td&gt;Ipsum&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\"><pre class=\"notranslate\"><code>&lt;template id=\"lorem-ipsum\"&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Lorem&lt;/td&gt;\n    &lt;td&gt;Ipsum&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre></div>\n<p dir=\"auto\">using the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"doc.outputSettings().prettyPrint(false)\ndoc.outputSettings().syntax(Document.OutputSettings.Syntax.xml)\nreturn doc.outerHtml()\"><pre class=\"notranslate\"><code>doc.outputSettings().prettyPrint(false)\ndoc.outputSettings().syntax(Document.OutputSettings.Syntax.xml)\nreturn doc.outerHtml()\n</code></pre></div>\n<p dir=\"auto\">the output is as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;template id=&quot;lorem-ipsum&quot;&gt;\n  \n    Lorem\n    Ipsum\n  \n&lt;/template&gt;\"><pre class=\"notranslate\"><code>&lt;template id=\"lorem-ipsum\"&gt;\n  \n    Lorem\n    Ipsum\n  \n&lt;/template&gt;\n</code></pre></div>\n<p dir=\"auto\">That is, it is the same as the template content excluding the start and end tags. The whitespace is still preserved.</p>\n<p dir=\"auto\">The tree construction in Firefox and Chrome is the same as the source, with a <code class=\"notranslate\">#document-fragment</code> node between the template element and the tr content. That is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;template id=&quot;lorem-ipsum&quot;&gt;\n  #document-fragment\n    &lt;tr&gt;\n      &lt;td&gt;Lorem&lt;/td&gt;\n      &lt;td&gt;Ipsum&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/template&gt;\"><pre class=\"notranslate\"><code>&lt;template id=\"lorem-ipsum\"&gt;\n  #document-fragment\n    &lt;tr&gt;\n      &lt;td&gt;Lorem&lt;/td&gt;\n      &lt;td&gt;Ipsum&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre></div>","resourcePath":"/jhy/jsoup/issues/1315","createdAt":"2020-02-05T11:11:33Z","labels":{"edges":[{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Add initial nullability annotations","url":"https://github.com/jhy/jsoup/pull/1467","resourcePath":"/jhy/jsoup/pull/1467","createdAt":"2020-12-20T01:12:29Z","number":1467,"mergeCommit":{"oid":"d45098eb5657e83880476fd1f7ff257f0ba6b59c","message":"Add initial nullability annotations (#1467)\n\nUsing JSR-305, which IntelliJ and Kotlin and other checkers are compatible with to annotate nullability.\r\n\r\nIncludes initial annotations for ReturnsNonnull and ParametersNonnull for Jsoup.class. Over time, the goal will be to add those to all packages, and only explicitly specify nullable returns / params / fields.","commitUrl":"https://github.com/jhy/jsoup/commit/d45098eb5657e83880476fd1f7ff257f0ba6b59c","parents":{"nodes":[{"oid":"e8ae03d25c0bd50d433fbf493834484b068e5479","message":"Corrected issue link"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"CHANGES"}},{"node":{"changeType":"MODIFIED","path":"pom.xml"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/Jsoup.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/jsoup/internal/ReturnsAreNonnullByDefault.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TreeBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/XmlTreeBuilder.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/helper/ValidateTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQzMDAwOTY1OjNjMWI3ZmIzNWIxNGVkZmM3OTViMmMwZGY0Yjk4M2Q2Nzk4ODg0M2M=","url":"https://github.com/jhy/jsoup/pull/1467/commits/3c1b7fb35b14edfc795b2c0df4b983d67988843c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1264,"url":"https://github.com/jhy/jsoup/issues/1264","title":"Add @Nullable/@NotNull to API (for Kotlin, etc)","bodyHTML":"<p dir=\"auto\">Would you consider adding <a href=\"https://kotlinlang.org/docs/reference/java-interop.html#nullability-annotations\" rel=\"nofollow\">nullability annotations</a> to the API? The official page says that jsoup is compatible with Kotlin, so it would be great to have its null-safety mechanisms when using the library.</p>","resourcePath":"/jhy/jsoup/issues/1264","createdAt":"2019-10-09T21:42:15Z","labels":{"edges":[{"node":{"name":"improvement"}},{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Add @SafeHtml java validator","url":"https://github.com/jhy/jsoup/pull/1427","resourcePath":"/jhy/jsoup/pull/1427","createdAt":"2020-09-18T18:49:13Z","number":1427,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_ro.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_ru.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_sk.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_tr.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_uk.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_zh.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_zh_CN.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/ContributorValidationMessages_zh_TW.properties"}},{"node":{"changeType":"ADDED","path":"src/main/resources/META-INF/services/javax.validation.ConstraintValidator"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/validators/SafeHtmlValidatorTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg5NDgzNzE1OjcxYzZjOTM2ZDY0YmI0OWU2ZjE2MWE2Y2JkMzNmMDM1YjE5MGJkOGQ=","url":"https://github.com/jhy/jsoup/pull/1427/commits/71c6c936d64bb49e6f161a6cbd33f035b190bd8d"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1382,"url":"https://github.com/jhy/jsoup/issues/1382","title":"Add @SafeHtml Jakarta Validator","bodyHTML":"<p dir=\"auto\">Hibernate Validator currently has <a href=\"https://docs.jboss.org/hibernate/stable/validator/api/org/hibernate/validator/constraints/SafeHtml.html\" rel=\"nofollow\">@SafeHtml</a>, a Jakara Validator, to do validation of a string to ensure it's valid HTML using jsoup.</p>\n<p dir=\"auto\">However, Hibernate Validator has decided to deprecate this validator as that project doesn't feel that it's the right place for it. Please see <a href=\"https://in.relation.to/2019/11/20/hibernate-validator-610-6018-released/\" rel=\"nofollow\">https://in.relation.to/2019/11/20/hibernate-validator-610-6018-released/</a> for more information.</p>\n<p dir=\"auto\">I think jsoup is the perfect home @SafeHtml.</p>\n<p dir=\"auto\">Copying @SafeHtml into jsoup would be done by:</p>\n<ul dir=\"auto\">\n<li>adding an Maven optional dependency on <code class=\"notranslate\">jakarta.validation:jakarta.validation-api</code></li>\n<li>copying a few classes for Hibernate Validator</li>\n<li>and adding a <code class=\"notranslate\">META-INF</code> service loader file so the validator is loaded (see <a href=\"https://in.relation.to/2017/03/02/adding-custom-constraint-definitions-via-the-java-service-loader/\" rel=\"nofollow\">https://in.relation.to/2017/03/02/adding-custom-constraint-definitions-via-the-java-service-loader/</a> for details)</li>\n</ul>","resourcePath":"/jhy/jsoup/issues/1382","createdAt":"2020-05-20T01:50:46Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Adds optional tracking of discarded tags and atttributes","url":"https://github.com/jhy/jsoup/pull/1499","resourcePath":"/jhy/jsoup/pull/1499","createdAt":"2021-03-09T08:24:56Z","number":1499,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/safety/Cleaner.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/jsoup/safety/DiscardList.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/safety/CleanerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTg3NjAxODYyOjNjMmNjNzNjZjliMDNlNDAyMmE2MmI3ZWU3MTdjMmIzZmM1Y2M0Yjc=","url":"https://github.com/jhy/jsoup/pull/1499/commits/3c2cc73cf9b03e4022a62b7ee717c2b3fc5cc4b7"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1360,"url":"https://github.com/jhy/jsoup/issues/1360","title":"Report invalid elements or attributes","bodyHTML":"<p dir=\"auto\">The <em>Cleaner</em> class today uses the protected methods <em>isSafeTag</em> and <em>isSafeAttribute</em> to determine whether a tag or attribute is valid according to the provided whitelist. Those methods are not directly available to the application using Jsoup. To provide better feedback to whoever provided a document, it would be interesting to determine easily which tags and attributes invalidate a specific document. Maybe, in addition to keeping count of removed elements and attributes, the cleaner could also keep and provide a list of those things if requested.</p>","resourcePath":"/jhy/jsoup/issues/1360","createdAt":"2020-04-21T16:11:10Z","labels":{"edges":[{"node":{"name":"feature"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Attempt at a multi release jar","url":"https://github.com/jhy/jsoup/pull/1470","resourcePath":"/jhy/jsoup/pull/1470","createdAt":"2020-12-31T07:52:09Z","number":1470,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"pom.xml"}},{"node":{"changeType":"ADDED","path":"src/main/java9/module-info.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQ3MjgwNzc2OmE0OGJkZGNjZjFiM2JhYjg4OGM2NjU1MzVjNGQyZDA4YjQxOWFlMWQ=","url":"https://github.com/jhy/jsoup/pull/1470/commits/a48bddccf1b3bab888c665535c4d2d08b419ae1d"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1466,"url":"https://github.com/jhy/jsoup/issues/1466","title":"Provide module-info.java for Java9+ users","bodyHTML":"<p dir=\"auto\">I know you already provide an Automatic-Module-Name for Java9+ users but we would be better off with a multi-release JAR that exports a full-fledged <code class=\"notranslate\">module-info.java</code> because when using <code class=\"notranslate\">requires transitive org.jsoup</code> the compiler complains (warns) against exporting automatic modules.</p>\n<p dir=\"auto\">Publishing a MultiRelease JAR using Maven should be relatively easy. See <code class=\"notranslate\">multiReleaseOutput</code> at <a href=\"https://www.baeldung.com/maven-multi-release-jars\" rel=\"nofollow\">https://www.baeldung.com/maven-multi-release-jars</a></p>\n<p dir=\"auto\">Hit me up if you run into any problems and I'll take a look.</p>","resourcePath":"/jhy/jsoup/issues/1466","createdAt":"2020-12-19T18:12:10Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Adds feature for tracking discarded tags and attributes","url":"https://github.com/jhy/jsoup/pull/1500","resourcePath":"/jhy/jsoup/pull/1500","createdAt":"2021-03-09T09:57:44Z","number":1500,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/safety/Cleaner.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/jsoup/safety/DiscardList.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/safety/CleanerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTg3NzE5OTA4OjBkNTNlZGMzMmM0OGRiY2RhNzVmY2IyMTc4M2M3YWZmOWJiYTYxYzE=","url":"https://github.com/jhy/jsoup/pull/1500/commits/0d53edc32c48dbcda75fcb21783c7aff9bba61c1"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1360,"url":"https://github.com/jhy/jsoup/issues/1360","title":"Report invalid elements or attributes","bodyHTML":"<p dir=\"auto\">The <em>Cleaner</em> class today uses the protected methods <em>isSafeTag</em> and <em>isSafeAttribute</em> to determine whether a tag or attribute is valid according to the provided whitelist. Those methods are not directly available to the application using Jsoup. To provide better feedback to whoever provided a document, it would be interesting to determine easily which tags and attributes invalidate a specific document. Maybe, in addition to keeping count of removed elements and attributes, the cleaner could also keep and provide a list of those things if requested.</p>","resourcePath":"/jhy/jsoup/issues/1360","createdAt":"2020-04-21T16:11:10Z","labels":{"edges":[{"node":{"name":"feature"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Complete adoption agency algorithm","url":"https://github.com/jhy/jsoup/pull/1517","resourcePath":"/jhy/jsoup/pull/1517","createdAt":"2021-04-18T13:32:31Z","number":1517,"mergeCommit":{"oid":"e45e53c849197be70364a63db8a7c6c8971c1ead","message":"Complete adoption agency algorithm (#1517)\n\nFollow adoption agency algorithm","commitUrl":"https://github.com/jhy/jsoup/commit/e45e53c849197be70364a63db8a7c6c8971c1ead","parents":{"nodes":[{"oid":"f49f92c4c29cc2a8440c4ffccc2fb248cdd30694","message":"More robust prevention of XML Declaration recursion"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE3NDg1NTczOmExYzhlM2U3NGU5NTViN2FjMGMxNTNjOGYzYWM3ODdkZDI1NzE0NzI=","url":"https://github.com/jhy/jsoup/pull/1517/commits/a1c8e3e74e955b7ac0c153c8f3ac787dd2571472"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":845,"url":"https://github.com/jhy/jsoup/issues/845","title":"Nested anchor elements can end up nested in generated DOM tree","bodyHTML":"<p dir=\"auto\">This is a condensed version of the issue reported in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"163862071\" data-permission-text=\"Title is private\" data-url=\"https://github.com/jhy/jsoup/issues/728\" data-hovercard-type=\"issue\" data-hovercard-url=\"/jhy/jsoup/issues/728/hovercard?comment_id=286945987&amp;comment_type=issue_comment\" href=\"https://github.com/jhy/jsoup/issues/728#issuecomment-286945987\">#728 (comment)</a></p>\n<p dir=\"auto\"><strong>Input:</strong></p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;html&gt;\n  &lt;body&gt;\n    &lt;a href='#1'&gt;\n      &lt;div&gt;\n        &lt;div&gt;\n          &lt;a href='#2'&gt;child&lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span>\n  <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>='<span class=\"pl-s\">#1</span>'<span class=\"pl-kos\">&gt;</span>\n      <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n          <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>='<span class=\"pl-s\">#2</span>'<span class=\"pl-kos\">&gt;</span>child<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n      <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span>\n  <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\"><strong>Output:</strong> Jsoup (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/jhy/jsoup/commit/f28c024ba127fd701f0d195a359afbabff04d7a1/hovercard\" href=\"https://github.com/jhy/jsoup/commit/f28c024ba127fd701f0d195a359afbabff04d7a1\"><tt>f28c024</tt></a>)</p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt; \n  &lt;a href=&quot;#1&quot;&gt; &lt;/a&gt;\n  &lt;div&gt;\n   &lt;a href=&quot;#1&quot;&gt; \n    &lt;div&gt; \n     &lt;a href=&quot;#2&quot;&gt;child&lt;/a&gt; \n    &lt;/div&gt;&lt;/a&gt; \n  &lt;/div&gt;   \n &lt;/body&gt;\n&lt;/html&gt;\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span>\n <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span> \n  <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#1</span>\"<span class=\"pl-kos\">&gt;</span> <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span>\n  <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n   <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#1</span>\"<span class=\"pl-kos\">&gt;</span> \n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span> \n     <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#2</span>\"<span class=\"pl-kos\">&gt;</span>child<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span> \n    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span> \n  <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>   \n <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> Chrome transforms the input into this:</p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;\n    &lt;a href=&quot;#1&quot;&gt;\n      &lt;/a&gt;&lt;div&gt;&lt;a href=&quot;#1&quot;&gt;\n        &lt;/a&gt;&lt;div&gt;&lt;a href=&quot;#1&quot;&gt;\n          &lt;/a&gt;&lt;a href=&quot;#2&quot;&gt;child&lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#1</span>\"<span class=\"pl-kos\">&gt;</span>\n      <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#1</span>\"<span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#1</span>\"<span class=\"pl-kos\">&gt;</span>\n          <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">#2</span>\"<span class=\"pl-kos\">&gt;</span>child<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span>\n        <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n      <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\">The DOM tree generated by Jsoup contains nested anchor elements which are not allowed.<br>\nHaving only one nested <code class=\"notranslate\">div</code> element in the input seems to do the right thing. At least two nested block elements are necessary to trigger this bug.</p>","resourcePath":"/jhy/jsoup/issues/845","createdAt":"2017-03-16T15:32:22Z","labels":{"edges":[{"node":{"name":"bug"}},{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Adds easy request session-state and corrects cookie domain and path rules","url":"https://github.com/jhy/jsoup/pull/1476","resourcePath":"/jhy/jsoup/pull/1476","createdAt":"2021-01-16T06:29:08Z","number":1476,"mergeCommit":{"oid":"b431fb2dd002c0425d5938ca2ce4d1c967336a5b","message":"Adds easy request session-state and corrects cookie domain and path rules (#1476)","commitUrl":"https://github.com/jhy/jsoup/commit/b431fb2dd002c0425d5938ca2ce4d1c967336a5b","parents":{"nodes":[{"oid":"55e5a4284e0b45f57380f062a933a746564b264a","message":"Clarified the nullability annotations within Connection and HttpConnection"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/integration/ConnectTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/integration/SessionIT.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/integration/SessionTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/integration/TestServer.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/integration/servlets/CookieServlet.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/integration/servlets/EchoServlet.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/integration/servlets/FileServlet.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/integration/servlets/SlowRider.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/nodes/DocumentTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/nodes/FormElementTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU2MDg2OTA4OmE3YzAyMGJjYTc2YzRkMGRmOTVlMWFjYTBiMWYwOTVkMDJjNGFiODA=","url":"https://github.com/jhy/jsoup/pull/1476/commits/a7c020bca76c4d0df95e1aca0b1f095d02c4ab80"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":606,"url":"https://github.com/jhy/jsoup/issues/606","title":"FormElement#submit() and cookies","bodyHTML":"<p dir=\"auto\">The current implementation doesn't include previous cookies. I think we should add cookies so that when the form is in an authenticated page, we can go through while carrying the cookies.</p>","resourcePath":"/jhy/jsoup/issues/606","createdAt":"2015-07-29T12:22:36Z","labels":{"edges":[{"node":{"name":"improvement"}}]}}},{"node":{"number":1076,"url":"https://github.com/jhy/jsoup/issues/1076","title":"cookies with duplicate names not properly sent","bodyHTML":"<p dir=\"auto\">Hi,<br>\nThere seems to be an issue with the way cookies with duplicate names are handled.<br>\nThe wrong cookie seems to be sent to the next request, at least after a redirect<br>\nIn my example,<br>\nwe send a POST to a url, which sends a response back with redirect 302 to a GET (same domain <a href=\"http://www.swabiz.com\" rel=\"nofollow\">www.swabiz.com</a>, different url):<br>\nThe response sets the following cookies, 2 of them with the name 'corporateToken', one empty, the other not.<br>\nA browser (Chrome in this instance) will sent the non empty value in the next request. Jsoup sends the empty one..<br>\nNot sure what the specs say exactly on how an http client should handle this, but at least it doesn't behave like a browser and that's an issue. Instinctively, I would have expected the non empty value to be passed to the GET (since the domain is more specifc, <a href=\"http://www.swabiz.com\" rel=\"nofollow\">www.swabiz.com</a> vs .swabiz.com)<br>\nI have tried with jsoup version 1.11.3.</p>\n<p dir=\"auto\">SetCookie:</p>\n<table role=\"table\">\n<thead>\n<tr>\n<th>corporateToken</th>\n<th>eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJTd2FiaXoiLCJleHAiOjE4NDQ1MDY4OTIsIm5iZiI6MTUyODkzNzUxMiwiYm9va2luZ1R5cGUiOiJBTk9OWU1PVVMiLCJjb21wYW55SWQiOiI5OTYxMTc5NCIsImNvbXBhbnlOYW1lIjoiVHJpcEFjdGlvbnMiLCJwcm94eVRyYXZlbGVyQWNjb3VudE51bWJlciI6bnVsbCwicHJveHlUcmF2ZWxlck5hbWUiOm51bGwsInRyYXZlbE1hbmFnZXJOYW1lIjpudWxsLCJhdWQiOiJTb3V0aHdlc3QgQWlybGluZXMiLCJpc3MiOiJTb3V0aHdlc3QgQWlybGluZXMifQ.iyDYpB-LkhkAMx8Yyt-S49wnL7lmd9IPN9QeUSXFNZA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Expires</td>\n<td>Tue, 13-Jun-2028 11:01:32 GMT</td>\n</tr>\n<tr>\n<td>Domain</td>\n<td><a href=\"http://www.swabiz.com\" rel=\"nofollow\">www.swabiz.com</a></td>\n</tr>\n<tr>\n<td>Path</td>\n<td>/</td>\n</tr>\n<tr>\n<td>corporateToken</td>\n<td>\"\"</td>\n</tr>\n<tr>\n<td>Expires</td>\n<td>Thu, 01-Jan-1970 00:00:10 GMT</td>\n</tr>\n<tr>\n<td>Domain</td>\n<td>.swabiz.com</td>\n</tr>\n<tr>\n<td>Path</td>\n<td>/</td>\n</tr>\n</tbody>\n</table>\n<p dir=\"auto\">and in the next request after redirect we see the cookie:</p>\n<p dir=\"auto\">corporateToken \"\"</p>","resourcePath":"/jhy/jsoup/issues/1076","createdAt":"2018-06-14T20:54:08Z","labels":{"edges":[{"node":{"name":"bug"}},{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Use constants for the standard charsets (#1454)","url":"https://github.com/jhy/jsoup/pull/1455","resourcePath":"/jhy/jsoup/pull/1455","createdAt":"2020-11-20T19:48:54Z","number":1455,"mergeCommit":{"oid":"6ea3c3676bc7f53636dd1db0b5e6937282473798","message":"Use constants for the standard charsets (#1455)\n\nAlso solves thread contention in the constructor of OutputSettings.\r\nFixes #1454","commitUrl":"https://github.com/jhy/jsoup/commit/6ea3c3676bc7f53636dd1db0b5e6937282473798","parents":{"nodes":[{"oid":"54a3740dc26eeecbbac4770a977431cc91162e18","message":"Add bin/ to .gitignore (#1439)\n\n(Eclipse's default output folder)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/HttpConnection.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Document.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTI0OTE2NzMxOmRlNjI3NDNiZTk1NGI3YjA1YzYzNjVjOWQ5NDk4ZDhkMDEyN2YxYTg=","url":"https://github.com/jhy/jsoup/pull/1455/commits/de62743be954b7b05c6365c9d9498d8d0127f1a8"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1454,"url":"https://github.com/jhy/jsoup/issues/1454","title":"Thread contention in OutputSettings()","bodyHTML":"<p dir=\"auto\">Thread contention can happen in the constructor of <code class=\"notranslate\">OutputSettings</code>.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1450087/99841281-2e699380-2b6e-11eb-8684-590de3def5bb.png\"><img src=\"https://user-images.githubusercontent.com/1450087/99841281-2e699380-2b6e-11eb-8684-590de3def5bb.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">It can be solved by replacing <code class=\"notranslate\">Charset.forName(\"UTF8\")</code> with the constant <code class=\"notranslate\">StandardCharsets.UTF_8</code>.</p>","resourcePath":"/jhy/jsoup/issues/1454","createdAt":"2020-11-20T19:27:11Z","labels":{"edges":[{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Change how empty attribute names are handled","url":"https://github.com/jhy/jsoup/pull/1524","resourcePath":"/jhy/jsoup/pull/1524","createdAt":"2021-04-25T05:38:05Z","number":1524,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/Token.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TokeniserState.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/XmlTreeBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlParserTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIyNzAxMzQyOjAzZjQ1YTNhNzljZWIyMTZjZjcxMzM4MWE1NzIzYjRmMWU5MjBlNDc=","url":"https://github.com/jhy/jsoup/pull/1524/commits/03f45a3a79ceb216cf713381a5723b4f1e920e47"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1474,"url":"https://github.com/jhy/jsoup/issues/1474","title":"Empty attribute names produce invalid XML output syntax","bodyHTML":"<p dir=\"auto\">As noted in this <a href=\"https://stackoverflow.com/q/65633287/153184\" rel=\"nofollow\">StackOverflow question</a>, input with an empty attribute name produces invalid XML output when using the XML syntax. (I believe it's valid but meaningless HTML..)</p>\n<p dir=\"auto\"><strong>Input</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;div =&quot;&quot;&gt;\"><pre class=\"notranslate\"><code>&lt;div =\"\"&gt;\n</code></pre></div>\n<p dir=\"auto\"><a href=\"https://try.jsoup.org/~d9Ak3YlzQMWLcWkuIc49e0_8N_4\" rel=\"nofollow\">produces</a>:</p>\n<p dir=\"auto\"><strong>XML</strong></p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;div =&quot;&quot;=&quot;&quot;&gt;&lt;/div&gt;\"><pre>&lt;<span class=\"pl-ent\">div</span> =<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>&gt;&lt;/<span class=\"pl-ent\">div</span>&gt;</pre></div>\n<p dir=\"auto\"><strong>HTML</strong></p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;div =&quot;&quot;&gt;&lt;/div&gt;\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">div</span> =\"\"<span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">div</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\">Need to inspect the nodes directly for XML as I'm not sure what is happening there. The HTML at least looks valid.</p>\n<p dir=\"auto\">The expected outcome of the XML output syntax is that an XML parser can read it - so probably we need to apply the same validations as in the W3CDom convertor. Specifically, the tag name and attribute validators.</p>\n<p dir=\"auto\">For HTML it seems syntactically valid, but maybe a better idea that we just drop attributes with no key and no value -- what could be the point of retaining them? If they have a value though, should we keep an empty name? Happy to hear from people on this.</p>","resourcePath":"/jhy/jsoup/issues/1474","createdAt":"2021-01-09T04:48:12Z","labels":{"edges":[{"node":{"name":"bug"}},{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Support different whitespace characters","url":"https://github.com/jhy/jsoup/pull/1553","resourcePath":"/jhy/jsoup/pull/1553","createdAt":"2021-05-21T16:21:17Z","number":1553,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/CharacterReader.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TokeniserState.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/CharacterReaderTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjUwMTE5MjI3OjQ1MzQ3YTkwMTZkZGZjOTU1OTkzNTU3MDU5NDFmZTIwOTdiMThjYmM=","url":"https://github.com/jhy/jsoup/pull/1553/commits/45347a9016ddfc95599355705941fe2097b18cbc"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1550,"url":"https://github.com/jhy/jsoup/issues/1550","title":"NBSP creates invalid tags","bodyHTML":"<p dir=\"auto\">First - thanks for this library - it's great!</p>\n<p dir=\"auto\">We just ran into an error where we got a bit of HTML that looks like this (encoded as a java string for clarity).</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"String html = &quot;&lt;a\\u00A0href=\\&quot;http://example.com/test\\&quot;&gt;test&lt;/a&gt;&quot;\"><pre><span class=\"pl-smi\">String</span> <span class=\"pl-s1\">html</span> = <span class=\"pl-s\">\"&lt;a\\u00A0href=\\\"http://example.com/test\\\"&gt;test&lt;/a&gt;\"</span></pre></div>\n<p dir=\"auto\">This causes the tag to be parsed as: <code class=\"notranslate\">a\\u00A0href=\"http:</code>. Should the parser be made more tolerant to this sort of error? I'm assuming it's checking explicitly for ascii space - should any unicode whitespace character be a delimiter?</p>","resourcePath":"/jhy/jsoup/issues/1550","createdAt":"2021-05-20T16:46:43Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Implement Elements.replaceAll","url":"https://github.com/jhy/jsoup/pull/1522","resourcePath":"/jhy/jsoup/pull/1522","createdAt":"2021-04-24T12:06:01Z","number":1522,"mergeCommit":null,"potentialMergeCommit":{"oid":"d8956f5e59245ed1e1005c7481d5bae2ca6a623b","message":"Merge b8b921f9858987287854d2179f7bc429a2e8a9d3 into 12175ab43e639289c387d4af4a3741a477416f45","commitUrl":"https://github.com/jhy/jsoup/commit/d8956f5e59245ed1e1005c7481d5bae2ca6a623b","parents":{"nodes":[{"oid":"12175ab43e639289c387d4af4a3741a477416f45","message":"Track source position from original to cleaned elements."},{"oid":"b8b921f9858987287854d2179f7bc429a2e8a9d3","message":"remove Objects.requireNonNull"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/select/Elements.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/select/ElementsTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIyNTczMTMzOmI4YjkyMWY5ODU4OTg3Mjg3ODU0ZDIxNzlmN2JjNDI5YTJlOGE5ZDM=","url":"https://github.com/jhy/jsoup/pull/1522/commits/b8b921f9858987287854d2179f7bc429a2e8a9d3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1514,"url":"https://github.com/jhy/jsoup/issues/1514","title":"replaceAll on Elements does not work","bodyHTML":"<p dir=\"auto\">While this wont work:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"document.select(&quot;foo&quot;).replaceAll(element -&gt; {\n  return new Element(&quot;replacement&quot;);\n});\"><pre><span class=\"pl-s1\">document</span>.<span class=\"pl-en\">select</span>(<span class=\"pl-s\">\"foo\"</span>).<span class=\"pl-en\">replaceAll</span>(<span class=\"pl-s1\">element</span> -&gt; {\n  <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Element</span>(<span class=\"pl-s\">\"replacement\"</span>);\n});</pre></div>\n<p dir=\"auto\">this will work without any issues</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"document.select(&quot;foo&quot;).forEach(element -&gt; {\n  element.replaceWith(new Element(&quot;replacement&quot;));\n});\"><pre><span class=\"pl-s1\">document</span>.<span class=\"pl-en\">select</span>(<span class=\"pl-s\">\"foo\"</span>).<span class=\"pl-en\">forEach</span>(<span class=\"pl-s1\">element</span> -&gt; {\n  <span class=\"pl-s1\">element</span>.<span class=\"pl-en\">replaceWith</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Element</span>(<span class=\"pl-s\">\"replacement\"</span>));\n});</pre></div>\n<p dir=\"auto\">If that makes any difference, in my concrete code i use</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"document.select(new Evaluator.Tag(&quot;pc:foo&quot;)).replaceAll(..);\"><pre><span class=\"pl-s1\">document</span>.<span class=\"pl-en\">select</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Evaluator</span>.<span class=\"pl-smi\">Tag</span>(<span class=\"pl-s\">\"pc:foo\"</span>)).<span class=\"pl-en\">replaceAll</span>(..);</pre></div>\n<p dir=\"auto\">But as far as i understand the implementation, that should not really matter</p>","resourcePath":"/jhy/jsoup/issues/1514","createdAt":"2021-04-16T11:26:14Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Native XPath support in jsoup","url":"https://github.com/jhy/jsoup/pull/1629","resourcePath":"/jhy/jsoup/pull/1629","createdAt":"2021-09-08T12:30:09Z","number":1629,"mergeCommit":{"oid":"c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","message":"Native XPath support in jsoup (#1629)\n\nBringing in as a beta feature in 1.14.3","commitUrl":"https://github.com/jhy/jsoup/commit/c283a8dd0c5f0f5e726fccaef329ee217e98b1b2","parents":{"nodes":[{"oid":"f7ef7c3dc986e420891b5d0d58feba27019c5974","message":"Added Nullable annotations for equals()\n\nFixed #1628"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"CHANGES"}},{"node":{"changeType":"MODIFIED","path":"pom.xml"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/Jsoup.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/W3CDom.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Element.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/NodeUtils.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/TextUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/helper/W3CDomTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/select/XpathTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI5NjAyMzA5Ojk1Y2RmMDhhZTRlNzk2YWNkY2IzZjYxNTEyODM3OGQ4NDZjY2Y0MmY=","url":"https://github.com/jhy/jsoup/pull/1629/commits/95cdf08ae4e796acdcb3f615128378d846ccf42f"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":653,"url":"https://github.com/jhy/jsoup/issues/653","title":"Support xpath 2.0 or greater","bodyHTML":"<p dir=\"auto\">It would be fine if jsoup could support xpath queries inherently. There is a xpath extension called \"xsoup\" but this extension doesn't cover the whole xpath specification. <a href=\"https://github.com/code4craft/xsoup\">https://github.com/code4craft/xsoup</a></p>\n<p dir=\"auto\">I already tried using saxon in combination with jsoup (converting jsoup document to w3c document) to get full xpath support. This works but using the w3c document object model you get further problems while getting the original inner html for a node as you can see in my question on sf <a href=\"http://stackoverflow.com/questions/33635398/how-to-get-html-from-a-org-w3c-dom-node-in-java\" rel=\"nofollow\">http://stackoverflow.com/questions/33635398/how-to-get-html-from-a-org-w3c-dom-node-in-java</a></p>\n<p dir=\"auto\">I think if jsoup would support xpath many companies and developers would only use jsoup for data extraction and xpath purposes, due to the fact that jsoup offers one of the best parsing-engines for parsing malformed html documents (like many websites or html documents are).</p>","resourcePath":"/jhy/jsoup/issues/653","createdAt":"2015-11-10T17:29:47Z","labels":{"edges":[{"node":{"name":"feature"}},{"node":{"name":"fixed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Allow attributes valid in html when converting","url":"https://github.com/jhy/jsoup/pull/1648","resourcePath":"/jhy/jsoup/pull/1648","createdAt":"2021-09-29T12:27:14Z","number":1648,"mergeCommit":{"oid":"6b1fbb51b501de87049b250fecc9a5076a186f6d","message":"Allow attributes valid in html when converting (#1648)\n\nWhen parsing and converting an html document, the syntax was hard-coded to xml. This PR checks the document type of the output document and uses that to determine which attributes are valid.\r\n\r\nCo-authored-by: jhy <jonathan@hedley.net>\r\n\r\nFixes #1647","commitUrl":"https://github.com/jhy/jsoup/commit/6b1fbb51b501de87049b250fecc9a5076a186f6d","parents":{"nodes":[{"oid":"9ce6ae1ae21fb49afcc0700084fc4366490bc421","message":"Bump jetty-server from 9.4.43.v20210629 to 9.4.44.v20210927 (#1649)\n\nBumps [jetty-server](https://github.com/eclipse/jetty.project) from 9.4.43.v20210629 to 9.4.44.v20210927.\r\n- [Release notes](https://github.com/eclipse/jetty.project/releases)\r\n- [Commits](https://github.com/eclipse/jetty.project/compare/jetty-9.4.43.v20210629...jetty-9.4.44.v20210927)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.jetty:jetty-server\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"CHANGES"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/W3CDom.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/helper/W3CDomTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs4sclpy2gAoYzBmNGQ4MzA4NjA4OWExMjFlMWFjNjUxYmFlNjIyZTJhN2FhYzc1Mw","url":"https://github.com/jhy/jsoup/pull/1648/commits/c0f4d83086089a121e1ac651bae622e2a7aac753"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1647,"url":"https://github.com/jhy/jsoup/issues/1647","title":"Allow attributes valid in html when converting from JSoup to W3C Document","bodyHTML":"<p dir=\"auto\">Consider the following html document:</p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;/head&gt;\n&lt;body style=&quot;color: red&quot; &quot; name&quot;&gt;\n  &lt;p hành=&quot;1&quot; hình=&quot;2&quot;&gt;unicode attr names&lt;/p&gt;\n&lt;/body&gt;&lt;/html&gt;\"><pre><span class=\"pl-c1\">&lt;!DOCTYPE html<span class=\"pl-kos\">&gt;</span></span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span> <span class=\"pl-c1\">style</span>=\"<span class=\"pl-s\">color: red</span>\" \" name\"<span class=\"pl-kos\">&gt;</span>\n  <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">p</span> <span class=\"pl-c1\">hành</span>=\"<span class=\"pl-s\">1</span>\" <span class=\"pl-c1\">hình</span>=\"<span class=\"pl-s\">2</span>\"<span class=\"pl-kos\">&gt;</span>unicode attr names<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\">Using v1.14.2 and running the following code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public static void main(String[] args) {\n        String html = &quot;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=\\&quot;color: red\\&quot; \\&quot; name\\&quot;&gt;&lt;p hành=\\&quot;1\\&quot; hình=\\&quot;2\\&quot;&gt;unicode attr names&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;;\n        org.jsoup.nodes.Document jsoupDoc;\n        jsoupDoc = Jsoup.parse(html);\n        Document w3Doc = W3CDom.convert(jsoupDoc);\n        System.out.println(W3CDom.asString(w3Doc, W3CDom.OutputHtml()));\n    }\"><pre>    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">html</span> = <span class=\"pl-s\">\"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body style=\\\"color: red\\\" \\\" name\\\"&gt;&lt;p hành=\\\"1\\\" hình=\\\"2\\\"&gt;unicode attr names&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\"</span>;\n        <span class=\"pl-smi\">org</span>.<span class=\"pl-smi\">jsoup</span>.<span class=\"pl-smi\">nodes</span>.<span class=\"pl-smi\">Document</span> <span class=\"pl-s1\">jsoupDoc</span>;\n        <span class=\"pl-s1\">jsoupDoc</span> = <span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">parse</span>(<span class=\"pl-s1\">html</span>);\n        <span class=\"pl-smi\">Document</span> <span class=\"pl-s1\">w3Doc</span> = <span class=\"pl-s1\">W3CDom</span>.<span class=\"pl-en\">convert</span>(<span class=\"pl-s1\">jsoupDoc</span>);\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">W3CDom</span>.<span class=\"pl-en\">asString</span>(<span class=\"pl-s1\">w3Doc</span>, <span class=\"pl-s1\">W3CDom</span>.<span class=\"pl-en\">OutputHtml</span>()));\n    }</pre></div>\n<p dir=\"auto\">Results in:</p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;!DOCTYPE html SYSTEM &quot;about:legacy-compat&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;META http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;/head&gt;\n&lt;body name=&quot;&quot; style=&quot;color: red&quot;&gt;\n  &lt;p hnh=&quot;2&quot;&gt;unicode attr names&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\"><pre><span class=\"pl-c1\">&lt;!DOCTYPE html SYSTEM \"about:legacy-compat\"<span class=\"pl-kos\">&gt;</span></span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">META</span> <span class=\"pl-c1\">http-equiv</span>=\"<span class=\"pl-s\">Content-Type</span>\" <span class=\"pl-c1\">content</span>=\"<span class=\"pl-s\">text/html; charset=UTF-8</span>\"<span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span> <span class=\"pl-c1\">name</span>=\"\" <span class=\"pl-c1\">style</span>=\"<span class=\"pl-s\">color: red</span>\"<span class=\"pl-kos\">&gt;</span>\n  <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">p</span> <span class=\"pl-c1\">hnh</span>=\"<span class=\"pl-s\">2</span>\"<span class=\"pl-kos\">&gt;</span>unicode attr names<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\">This is caused by <a href=\"https://github.com/jhy/jsoup/blob/master/src/main/java/org/jsoup/helper/W3CDom.java#L346\">W3CDOM.java#L346</a> hard-codes the syntax to <code class=\"notranslate\">xml</code>. It can be easily fixed by checking the doctype of the output document and use that as the syntax.</p>","resourcePath":"/jhy/jsoup/issues/1647","createdAt":"2021-09-29T11:29:14Z","labels":{"edges":[{"node":{"name":"improvement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Added full parser support for <template> tags","url":"https://github.com/jhy/jsoup/pull/1635","resourcePath":"/jhy/jsoup/pull/1635","createdAt":"2021-09-17T07:08:22Z","number":1635,"mergeCommit":{"oid":"a049edcdae373ef6c24747845adb846d1298cb72","message":"Added full parser support for template tags (#1635)\n\nFixes #1634","commitUrl":"https://github.com/jhy/jsoup/commit/a049edcdae373ef6c24747845adb846d1298cb72","parents":{"nodes":[{"oid":"d075651d59bd0565f718077bfe4e3c6f543f477b","message":"Changelog typo"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"CHANGES"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilder.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/Tag.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlParserTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlTreeBuilderStateTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/HtmlTreeBuilderTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs4r4E1I2gAoNmYzMDVkOTkxNGJlY2M5MDY4NzhlYTFlYmE3MWQxYjA3OWEyZDFkOQ","url":"https://github.com/jhy/jsoup/pull/1635/commits/6f305d9914becc906878ea1eba71d1b079a2d1d9"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1315,"url":"https://github.com/jhy/jsoup/issues/1315","title":"template element xml serialization removes the inner start/end tags","bodyHTML":"<p dir=\"auto\">After parsing the HTML fragment:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;template id=&quot;lorem-ipsum&quot;&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Lorem&lt;/td&gt;\n    &lt;td&gt;Ipsum&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\"><pre class=\"notranslate\"><code>&lt;template id=\"lorem-ipsum\"&gt;\n  &lt;tr&gt;\n    &lt;td&gt;Lorem&lt;/td&gt;\n    &lt;td&gt;Ipsum&lt;/td&gt;\n  &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre></div>\n<p dir=\"auto\">using the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"doc.outputSettings().prettyPrint(false)\ndoc.outputSettings().syntax(Document.OutputSettings.Syntax.xml)\nreturn doc.outerHtml()\"><pre class=\"notranslate\"><code>doc.outputSettings().prettyPrint(false)\ndoc.outputSettings().syntax(Document.OutputSettings.Syntax.xml)\nreturn doc.outerHtml()\n</code></pre></div>\n<p dir=\"auto\">the output is as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;template id=&quot;lorem-ipsum&quot;&gt;\n  \n    Lorem\n    Ipsum\n  \n&lt;/template&gt;\"><pre class=\"notranslate\"><code>&lt;template id=\"lorem-ipsum\"&gt;\n  \n    Lorem\n    Ipsum\n  \n&lt;/template&gt;\n</code></pre></div>\n<p dir=\"auto\">That is, it is the same as the template content excluding the start and end tags. The whitespace is still preserved.</p>\n<p dir=\"auto\">The tree construction in Firefox and Chrome is the same as the source, with a <code class=\"notranslate\">#document-fragment</code> node between the template element and the tr content. That is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;template id=&quot;lorem-ipsum&quot;&gt;\n  #document-fragment\n    &lt;tr&gt;\n      &lt;td&gt;Lorem&lt;/td&gt;\n      &lt;td&gt;Ipsum&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/template&gt;\"><pre class=\"notranslate\"><code>&lt;template id=\"lorem-ipsum\"&gt;\n  #document-fragment\n    &lt;tr&gt;\n      &lt;td&gt;Lorem&lt;/td&gt;\n      &lt;td&gt;Ipsum&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/template&gt;\n</code></pre></div>","resourcePath":"/jhy/jsoup/issues/1315","createdAt":"2020-02-05T11:11:33Z","labels":{"edges":[{"node":{"name":"fixed"}}]}}},{"node":{"number":1409,"url":"https://github.com/jhy/jsoup/issues/1409","title":"Childs of <template> should be a document fragment","bodyHTML":"<p dir=\"auto\">The HTML5 living standard states regarding the template element (<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#the-template-element\" rel=\"nofollow\">https://html.spec.whatwg.org/multipage/scripting.html#the-template-element</a>):</p>\n<blockquote>\n<p dir=\"auto\">The template contents of a template element are not children of the element itself.</p>\n</blockquote>\n<p dir=\"auto\">When parsing the following HTML:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n  &lt;template id=a&gt;&lt;p&gt;Test&lt;/p&gt;&lt;/template&gt;\n&lt;/body&gt;\n&lt;/html&gt;\"><pre class=\"notranslate\"><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n  &lt;template id=a&gt;&lt;p&gt;Test&lt;/p&gt;&lt;/template&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></div>\n<p dir=\"auto\">I therefor would expect a DOM similar to this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"template (DOMElement)\n   #DocumentFragement\n       p (DOMElement)\"><pre class=\"notranslate\"><code>template (DOMElement)\n   #DocumentFragement\n       p (DOMElement)\n</code></pre></div>\n<p dir=\"auto\">This is the way Chromium presents it in dev tools</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/940768/85845838-32eb7500-b7a5-11ea-8f55-f9de8f7532e8.png\"><img src=\"https://user-images.githubusercontent.com/940768/85845838-32eb7500-b7a5-11ea-8f55-f9de8f7532e8.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Alternatively, having no children at all seems also OK. I'm not sure how to interpret the standard here.</p>\n<p dir=\"auto\">However, JSoup return this DOM tree:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"template (DOMElement)\n    p (DOMElement)\"><pre class=\"notranslate\"><code>template (DOMElement)\n    p (DOMElement)\n</code></pre></div>\n<p dir=\"auto\">The p element is placed as a child beneath the template tag, which I think violates the HTML5 specification.</p>","resourcePath":"/jhy/jsoup/issues/1409","createdAt":"2020-06-26T10:09:55Z","labels":{"edges":[{"node":{"name":"fixed"}}]}}},{"node":{"number":1630,"url":"https://github.com/jhy/jsoup/issues/1630","title":"<template> element closes <head>","bodyHTML":"<p dir=\"auto\">A &lt;template&gt; element inside a &lt;head&gt; closes the head.</p>\n<p dir=\"auto\">See the following example: <a href=\"https://try.jsoup.org/~EGp3UZxQe503TJDHQEQEzm8IeUc\" rel=\"nofollow\">https://try.jsoup.org/~EGp3UZxQe503TJDHQEQEzm8IeUc</a></p>\n<p dir=\"auto\">The &lt;template&gt; element is allowed within other elements that accept meta data content (see <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template</a>).</p>\n<p dir=\"auto\">The &lt;head&gt; element accepts meta data content (in fact it only accepts meta data content): <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head</a></p>\n<p dir=\"auto\">Therefore &lt;template&gt; elements are valid inside a &lt;head&gt;, and the &lt;head&gt; should not be closed.</p>\n<p dir=\"auto\">This also is like both Firefox and Chrome handle the example code.</p>","resourcePath":"/jhy/jsoup/issues/1630","createdAt":"2021-09-08T18:53:35Z","labels":{"edges":[{"node":{"name":"fixed"}}]}}},{"node":{"number":1634,"url":"https://github.com/jhy/jsoup/issues/1634","title":"Add support for <template> tags","bodyHTML":"<p dir=\"auto\">Right now, we don't support the <code class=\"notranslate\">template</code> tag correctly, and there are few issues filed regarding that.</p>\n<p dir=\"auto\">Particularly, the tree builder and states need to be updated to meet the current spec. There's a concept of a template state stack.</p>\n<p dir=\"auto\">As far as an implementation in jsoup goes:</p>\n<ul dir=\"auto\">\n<li>parse -&gt; serialize should be pass through (which is the main gap now - as it's unknown, template in head will boot the tree builder to the body state, and similarly within tables)</li>\n<li>following the principle of least surprise, contents of a template element will be visible to selectors on the owner doc (so the contents of a template will not be contained in a document fragment; in script-enabled browsers they are so that script execution and layout doesn't expose them)</li>\n<li>easy to use as actual templates via clone, modify, append, unwrap et al</li>\n</ul>\n<p dir=\"auto\">Other than the basics, I'm keen to hear everyone's view on this and what could improve the functionality. And of use cases that you've come across that would be good to optimize for.</p>","resourcePath":"/jhy/jsoup/issues/1634","createdAt":"2021-09-16T05:23:49Z","labels":{"edges":[{"node":{"name":"improvement"}},{"node":{"name":"discussion"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Expose maxPaddingWidth in OutputSettings keeping default as 30","url":"https://github.com/jhy/jsoup/pull/1655","resourcePath":"/jhy/jsoup/pull/1655","createdAt":"2021-10-17T01:27:56Z","number":1655,"mergeCommit":{"oid":"3bd4d793ad7af94b3596fdf35be86758ff94696b","message":"Expose maxPaddingWidth in OutputSettings keeping default as 30 (#1655)\n\nCo-authored-by: Jonathan Hedley <jonathan@hedley.net>","commitUrl":"https://github.com/jhy/jsoup/commit/3bd4d793ad7af94b3596fdf35be86758ff94696b","parents":{"nodes":[{"oid":"7eb5a745bd44b26777d99e429bd5036597aa6273","message":"Normalize attribute names when testing if a boolean attribute\n\nFixes #1656"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"CHANGES"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/internal/StringUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Document.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Node.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/internal/StringUtilTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/nodes/ElementTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs4tSN0M2gAoNTYyMTI1MDUzNmVmYWZiNTg0OTM4MTE4YTNkZWUxOTVmZDY3OWNhNg","url":"https://github.com/jhy/jsoup/pull/1655/commits/5621250536efafb584938118a3dee195fd679ca6"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1653,"url":"https://github.com/jhy/jsoup/issues/1653","title":"Please expose maxPaddingWidth in two ways","bodyHTML":"<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I work with the formatter-maven-plugin and ever since 1.14.1, we have been unable to upgrade as it seriously corrupted pretty formatted html.  After deep diving this, I finally found the cause.  So I think the change basically breaks pretty formatting in most cases.  Our example is rather simple, you cna find it here -&gt;</p>\n<p dir=\"auto\"><a href=\"https://github.com/revelc/formatter-maven-plugin/blob/main/src/test/java/net/revelc/code/formatter/html/HTMLFormatterTest.java\">test</a><br>\n<a href=\"https://github.com/revelc/formatter-maven-plugin/blob/main/src/test/resources/someFile.html\">resource</a></p>\n<p dir=\"auto\">We keep the hash of what the prior formatter was producing (namely 1.13.1) that is on our master now.  If it changes during an upgrade, it should be some improvement.  In this case its rather corrupted by lack of proper whitespace.  It further doesn't line break on the header any longer (not solved on this ticket).</p>\n<p dir=\"auto\">After reviewing all the code changes and a lot of debuging, I have gotten to the StringUtil change <a href=\"https://github.com/jhy/jsoup/commit/afd73606a90909444e1c443b555dae7b71e6a5a0#diff-597d6f91192e47c0d6c1eb2451e4f36c54d9f3d982ccb867f30246712384506f\">here</a>.  Specifically line 75 (width = Math.min(width, maxPaddingWidth);) or line 128 in your lastest master.</p>\n<p dir=\"auto\">After looking at what formatted for us, it was clear it was 30 characters as that is set preventing proper nesting to occur.  So I cloned this repo and commented out that line then ran against that.  The result was more of what we expected.  A few tags were shortened where possible (but note that header line break from star slash comment didn't change).  This is far more acceptable to us given our user base and fact that jsoup is vulnerable I believe a couple times now.</p>\n<p dir=\"auto\">This is clearly internal code of jsoup and not intended for external exposure based on the package naming but I feel we need this exposed with 2 options.  The first option, completely disable it so it works like it did before as that is rather critical as we are formatting source code to be committed to repos.  The second option would simply to allow some sizing.  So I think something like -1 to mean no limit and then configurable to whatever a user might want.</p>\n<p dir=\"auto\">I don't might writing the code to expose that out but wanted to run this full diagnostic of the issue by your team first before attempting to do so.</p>","resourcePath":"/jhy/jsoup/issues/1653","createdAt":"2021-10-15T05:02:18Z","labels":{"edges":[{"node":{"name":"improvement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"fix #1411 add Element parse method","url":"https://github.com/jhy/jsoup/pull/1665","resourcePath":"/jhy/jsoup/pull/1665","createdAt":"2021-11-04T03:57:42Z","number":1665,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Element.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/nodes/ElementTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs4uEx6t2gAoYTIyY2NlMzhkMTNhYmFkMWU0MWRkZTRkY2RkOGMyYjI3YmNlMWY2Zg","url":"https://github.com/jhy/jsoup/pull/1665/commits/a22cce38d13abad1e41dde4dcdd8c2b27bce1f6f"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1411,"url":"https://github.com/jhy/jsoup/issues/1411","title":"Element factory method","bodyHTML":"<p dir=\"auto\">This is a feature request for a more concise way of creating Elements objects directly from an HTML String.  Right now, especially in unit tests, we have lots of code that looks like this:</p>\n<p dir=\"auto\"><code class=\"notranslate\">Element e = new Element(\"div\").html(\"&lt;span&gt;Some stuff&lt;/span&gt;&lt;span&gt;Second part&lt;/span&gt;\");</code></p>\n<p dir=\"auto\">It would be very nice to have something more like this:</p>\n<p dir=\"auto\"><code class=\"notranslate\">Element e = Element.of(\"&lt;div&gt;&lt;span&gt;Some stuff&lt;/span&gt;&lt;span&gt;Second part&lt;/span&gt;&lt;/div&gt;\")</code></p>\n<p dir=\"auto\">Or alternatively have a parser method like</p>\n<p dir=\"auto\"><code class=\"notranslate\">Element e = JSoup.parseElement(\"&lt;div&gt;&lt;/div&gt;\");</code></p>\n<p dir=\"auto\">This is not only more concise, it would allow easier dynamic creation of mock elements for testing from a data file or list of HTML strings.</p>","resourcePath":"/jhy/jsoup/issues/1411","createdAt":"2020-07-10T17:31:36Z","labels":{"edges":[{"node":{"name":"improvement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Add suport for handling unbound prefixes on tag names and attribute keys","url":"https://github.com/jhy/jsoup/pull/1682","resourcePath":"/jhy/jsoup/pull/1682","createdAt":"2021-12-07T12:17:31Z","number":1682,"mergeCommit":null,"potentialMergeCommit":{"oid":"7e37712cadb9fbe7b68ffbbcf9eed1f2b0c6f20d","message":"Merge 239897f29724860f714f84d9888dfcb355eda311 into 12175ab43e639289c387d4af4a3741a477416f45","commitUrl":"https://github.com/jhy/jsoup/commit/7e37712cadb9fbe7b68ffbbcf9eed1f2b0c6f20d","parents":{"nodes":[{"oid":"12175ab43e639289c387d4af4a3741a477416f45","message":"Track source position from original to cleaned elements."},{"oid":"239897f29724860f714f84d9888dfcb355eda311","message":"Update Tag.java"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Attribute.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/Tag.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/AttributeParseTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/parser/TagTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs4vfz3Y2gAoMjM5ODk3ZjI5NzI0ODYwZjcxNGY4NGQ5ODg4ZGZjYjM1NWVkYTMxMQ","url":"https://github.com/jhy/jsoup/pull/1682/commits/239897f29724860f714f84d9888dfcb355eda311"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1341,"url":"https://github.com/jhy/jsoup/issues/1341","title":"Unbound prefixes not handled","bodyHTML":"<p dir=\"auto\">Hello,<br>\nI want to report an issue I am having with jsoup. I have not found a similar issue, so I am creating a new one.</p>\n<p dir=\"auto\">I created a toy example that illustrates the issue:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;!doctype html&gt;\n&lt;html lang=&quot;de&quot;&gt;\n    &lt;head&gt;\n\n    &lt;/head&gt;\n    &lt;body&gt;\n\t&lt;test:h1&gt;UnboundPrefix&lt;/test:h1&gt;\n\t&lt;svg width=&quot;180&quot; height=&quot;180&quot; xlink:href=&quot;UnboundPrefix&quot;&gt;\n        \t&lt;rect x=&quot;20&quot; y=&quot;20&quot; rx=&quot;20&quot; ry=&quot;20&quot; width=&quot;100&quot; height=&quot;100&quot; style=&quot;fill:lightgray; stroke:#1c87c9; stroke-width:4;&quot;/&gt;\n      \t&lt;/svg&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\"><pre class=\"notranslate\"><code>&lt;!doctype html&gt;\n&lt;html lang=\"de\"&gt;\n    &lt;head&gt;\n\n    &lt;/head&gt;\n    &lt;body&gt;\n\t&lt;test:h1&gt;UnboundPrefix&lt;/test:h1&gt;\n\t&lt;svg width=\"180\" height=\"180\" xlink:href=\"UnboundPrefix\"&gt;\n        \t&lt;rect x=\"20\" y=\"20\" rx=\"20\" ry=\"20\" width=\"100\" height=\"100\" style=\"fill:lightgray; stroke:#1c87c9; stroke-width:4;\"/&gt;\n      \t&lt;/svg&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></div>\n<p dir=\"auto\">This webpage contains two unbound prefixes, one in within a tag and one within an attribute. Jsoup does not handle these according to <a href=\"https://html.spec.whatwg.org/#creating-and-inserting-nodes\" rel=\"nofollow\">https://html.spec.whatwg.org/#creating-and-inserting-nodes</a> and <a href=\"https://html.spec.whatwg.org/#coercing-an-html-dom-into-an-infoset\" rel=\"nofollow\">https://html.spec.whatwg.org/#coercing-an-html-dom-into-an-infoset</a>. There it says, the first case (tag) should be handled as follows: <code class=\"notranslate\">&lt;test:h1&gt;</code> becomes <code class=\"notranslate\">&lt;testU00003Ah1&gt;</code>. The second case is handled by adding the <code class=\"notranslate\">xlink</code> namespace to the html tag.</p>\n<p dir=\"auto\">Without the unbound prefixes being fixed, I have issues using XPath. It would be nice if jsoup handles such cases.</p>\n<p dir=\"auto\">Regards,<br>\nSimon</p>","resourcePath":"/jhy/jsoup/issues/1341","createdAt":"2020-03-17T11:58:23Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Add url fragment field to `Document` class","url":"https://github.com/jhy/jsoup/pull/1698","resourcePath":"/jhy/jsoup/pull/1698","createdAt":"2021-12-23T12:05:40Z","number":1698,"mergeCommit":null,"potentialMergeCommit":{"oid":"a768ed5934bf62ef40a867b47b1effd37a62759b","message":"Merge c4e0ec87c9055f2fe21eac37ded69d1fee63e946 into 12175ab43e639289c387d4af4a3741a477416f45","commitUrl":"https://github.com/jhy/jsoup/commit/a768ed5934bf62ef40a867b47b1effd37a62759b","parents":{"nodes":[{"oid":"12175ab43e639289c387d4af4a3741a477416f45","message":"Track source position from original to cleaned elements."},{"oid":"c4e0ec87c9055f2fe21eac37ded69d1fee63e946","message":"Add url fragment field to `Document` class\n\nFixes #1686"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/DataUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/HttpConnection.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Document.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/helper/DataUtilTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs4wOhFi2gAoYzRlMGVjODdjOTA1NWYyZmUyMWVhYzM3ZGVkNjlkMWZlZTYzZTk0Ng","url":"https://github.com/jhy/jsoup/pull/1698/commits/c4e0ec87c9055f2fe21eac37ded69d1fee63e946"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1686,"url":"https://github.com/jhy/jsoup/issues/1686","title":"Document::location does not contain fragment identifier","bodyHTML":"<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">It is important for me to get the fragment id of a page from jsoup <em>Document</em>s.<br>\nIs it possible to get the URL intact as passed to the <em>Jsoup::connect</em> method?</p>\n<p dir=\"auto\">The original URL that I pass to <em>Jsoup::connect</em> method has a fragment identifier at its end.<br>\nBut <em>Document::location</em> or <em>Document::baseUri</em> do not contain the id.</p>\n<p dir=\"auto\">For example, <code class=\"notranslate\">https://developer.android.com/jetpack/androidx/releases/annotation</code><strong><code class=\"notranslate\">#annotation-1.4.0-alpha01</code></strong><br>\nbecomes <code class=\"notranslate\">https://developer.android.com/jetpack/androidx/releases/annotation</code>.</p>","resourcePath":"/jhy/jsoup/issues/1686","createdAt":"2021-12-19T19:19:39Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Solve testfailure when network is unable","url":"https://github.com/jhy/jsoup/pull/1754","resourcePath":"/jhy/jsoup/pull/1754","createdAt":"2022-04-23T13:26:18Z","number":1754,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/helper/Validate.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/integration/ConnectTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42q1qk2gAoN2U2ODcwZTUxNTA0MWRkMzVjNTZjZjYyMjEyZjc1ZTUxYjkzODVkMw","url":"https://github.com/jhy/jsoup/pull/1754/commits/7e6870e515041dd35c56cf62212f75e51b9385d3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1733,"url":"https://github.com/jhy/jsoup/issues/1733","title":"ConnecTest#handlesUnknownEscapesAcrossBuffer fails if the network is not available","bodyHTML":"<p dir=\"auto\">The test fails with an unknown host exception when the network is not available.<br>\n<code class=\"notranslate\">[ERROR] Errors:  [ERROR]   ConnectTest.handlesUnknownEscapesAcrossBuffer:524 » UnknownHost gist.githubuse... [INFO]  [ERROR] Tests run: 1008, Failures: 0, Errors: 1, Skipped: 2</code></p>","resourcePath":"/jhy/jsoup/issues/1733","createdAt":"2022-03-15T20:10:17Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix/safelist deep copy constructor","url":"https://github.com/jhy/jsoup/pull/1763","resourcePath":"/jhy/jsoup/pull/1763","createdAt":"2022-05-05T16:44:56Z","number":1763,"mergeCommit":{"oid":"eaf5028718840d71c9a7f94f538b65b135012702","message":"Fix/safelist deep copy constructor (#1763)\n\nCopies nested data structures instead of using a shallow copy to avoid unexpected state mutations after copy constructor usage.","commitUrl":"https://github.com/jhy/jsoup/commit/eaf5028718840d71c9a7f94f538b65b135012702","parents":{"nodes":[{"oid":"72612480cfc5a8b3c6ca31097cfd908121a638da","message":"Bump maven-bundle-plugin from 5.1.5 to 5.1.6 (#1768)\n\nBumps maven-bundle-plugin from 5.1.5 to 5.1.6.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.apache.felix:maven-bundle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/safety/Safelist.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/safety/SafelistTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs43XhUD2gAoOGYxODIwYjhkOThiZjIxM2MyYjY4ZjhhNWQ1YTMzZDA4MjQ0MzZlOA","url":"https://github.com/jhy/jsoup/pull/1763/commits/8f1820b8d98bf213c2b68f8a5d5a33d0824436e8"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1764,"url":"https://github.com/jhy/jsoup/issues/1764","title":"Copy constructor of Safelist shares state","bodyHTML":"<p dir=\"auto\">The copy constructor of Safelist <code class=\"notranslate\">public Safelist(Safelist copy)</code> does not deep copy the data structures as advertised in the JavaDoc but shares the nested data structures, e.g. <code class=\"notranslate\">Map&lt;TagName, Set&lt;AttributeKey&gt;&gt;</code>. This causes unexpected mutation.</p>\n<p dir=\"auto\">An example would be:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Safelist safelist1 = Safelist.none().addAttributes(&quot;foo&quot;, &quot;bar&quot;);\nSafelist safelist2 = new Safelist(safelist1);\nsafelist1.addAttributes(&quot;foo&quot;, &quot;baz&quot;);\n\nfinal String html = &quot;&lt;foo bar=\\&quot;val\\&quot; baz=\\&quot;val\\&quot; /&gt;&quot;;\nSystem.out.println(Jsoup.clean(html, safelist1));\nSystem.out.println(Jsoup.clean(html, safelist2));\"><pre><span class=\"pl-smi\">Safelist</span> <span class=\"pl-s1\">safelist1</span> = <span class=\"pl-s1\">Safelist</span>.<span class=\"pl-en\">none</span>().<span class=\"pl-en\">addAttributes</span>(<span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"bar\"</span>);\n<span class=\"pl-smi\">Safelist</span> <span class=\"pl-s1\">safelist2</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Safelist</span>(<span class=\"pl-s1\">safelist1</span>);\n<span class=\"pl-s1\">safelist1</span>.<span class=\"pl-en\">addAttributes</span>(<span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"baz\"</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">html</span> = <span class=\"pl-s\">\"&lt;foo bar=\\\"val\\\" baz=\\\"val\\\" /&gt;\"</span>;\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">clean</span>(<span class=\"pl-s1\">html</span>, <span class=\"pl-s1\">safelist1</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">clean</span>(<span class=\"pl-s1\">html</span>, <span class=\"pl-s1\">safelist2</span>));</pre></div>\n<p dir=\"auto\">The second output should not contain the <code class=\"notranslate\">baz</code> attribute but does.</p>","resourcePath":"/jhy/jsoup/issues/1764","createdAt":"2022-05-05T16:55:56Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Adding a function for connection for more attempt / fix #1761","url":"https://github.com/jhy/jsoup/pull/1762","resourcePath":"/jhy/jsoup/pull/1762","createdAt":"2022-05-05T04:01:56Z","number":1762,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/Jsoup.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs43VDgf2gAoMTk4YmI4NTAyNGQ5ZDNlNWNkMTgyNGU0OWQ5NzQyYWQxMjdiNjBmMw","url":"https://github.com/jhy/jsoup/pull/1762/commits/198bb85024d9d3e5cd1824e49d9742ad127b60f3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1761,"url":"https://github.com/jhy/jsoup/issues/1761","title":"Add attempt","bodyHTML":"<p dir=\"auto\">Hi!<br>\nYou can add to the call parameters the number of attempts to receive an answer from the server.<br>\n<strong>.attemp(3)</strong><br>\nThis is necessary in order to make several attempts to receive an answer from the server if it is not equal to Code 200<br>\nIt will be convenient not to create extra cycles.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t\t\tDocument doc = Jsoup.connect(url)\n                                        .attemp(3)\n\t\t\t\t\t.get();\"><pre class=\"notranslate\"><code>\t\t\tDocument doc = Jsoup.connect(url)\n                                        .attemp(3)\n\t\t\t\t\t.get();\n</code></pre></div>\n<p dir=\"auto\">Forgive my bad English.</p>","resourcePath":"/jhy/jsoup/issues/1761","createdAt":"2022-05-05T02:34:21Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Solve the bug of multiple css queries with '>' / fix #1707","url":"https://github.com/jhy/jsoup/pull/1752","resourcePath":"/jhy/jsoup/pull/1752","createdAt":"2022-04-23T10:52:05Z","number":1752,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/select/QueryParser.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/select/QueryParserTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42qwUR2gAoNTYyY2Q0YTE2MzNmMDM5ODVmMDA4ZDQzZmY2ZDI0ZjJiYWJjOGY4Yw","url":"https://github.com/jhy/jsoup/pull/1752/commits/562cd4a1633f03985f008d43ff6d24f2babc8f8c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1707,"url":"https://github.com/jhy/jsoup/issues/1707","title":"Multiple selectors for direct descendants catches indirect descendants as well","bodyHTML":"<p dir=\"auto\">Using <code class=\"notranslate\">org.jsoup:jsoup:1.14.3</code>, it seems like using something like <code class=\"notranslate\">.select(\"&gt; .direct &gt; .foo, &gt; .direct &gt; .bar\")</code> will also select <code class=\"notranslate\">.direct &gt; .bar</code>.</p>\n<p dir=\"auto\">As a work-around: <code class=\"notranslate\">.selectFirst(\"&gt; .direct\")!!.select(\"&gt; .foo, &gt; .bar\")</code> seems to work fine.</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package bug\n\nimport org.intellij.lang.annotations.*\nimport org.jsoup.*\nimport org.junit.*\nimport org.junit.Assert.*\n\nclass JsoupLearningTests {\n   @Test\n   fun direct_descendant_bug_1() { // Fails.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_2() { // Passes.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_3() { // Passes.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_4() { // Fails.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n}\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-en\">bug</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.intellij.lang.annotations.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.jsoup.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.Assert.*</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">JsoupLearningTests</span> {\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_1</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Fails.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_2</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Passes.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_3</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Passes.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_4</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Fails.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n}</pre></div>\n<p dir=\"auto\">Not sure if it's a bug or a feature: in comparison, JS's <code class=\"notranslate\">.querySelectorAll(&gt; .direct)</code> throws about an invalid selector.</p>","resourcePath":"/jhy/jsoup/issues/1707","createdAt":"2022-01-18T16:46:33Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Find reason of null","url":"https://github.com/jhy/jsoup/pull/1757","resourcePath":"/jhy/jsoup/pull/1757","createdAt":"2022-04-24T15:34:47Z","number":1757,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/NodeUtils.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42r15o2gAoMDc3MDEzYWE1NTk0NjRkOWQzZmYyMmZiMDc0ZTU0MjM0MTc3ZTJlMg","url":"https://github.com/jhy/jsoup/pull/1757/commits/077013aa559464d9d3ff22fb074e54234177e2e2"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1756,"url":"https://github.com/jhy/jsoup/issues/1756","title":"the addition imprrove for the selectXpath function","bodyHTML":"<p dir=\"auto\">in the closed issues \"Question about using document.selectXpath() in xhtml <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1206391817\" data-permission-text=\"Title is private\" data-url=\"https://github.com/jhy/jsoup/issues/1746\" data-hovercard-type=\"issue\" data-hovercard-url=\"/jhy/jsoup/issues/1746/hovercard\" href=\"https://github.com/jhy/jsoup/issues/1746\">#1746</a>\" Once XML with namespace is encountered, the corresponding XPath query will have no results. That is not a good thing for packet because it is not a easy thing to know is there XML with namespace in the http file. so my term and I plan to add a judge in it to throw a warning when the this case happen. I think this is important because no one want to get a null without the error message.</p>","resourcePath":"/jhy/jsoup/issues/1756","createdAt":"2022-04-24T07:06:14Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixing Issue #1707","url":"https://github.com/jhy/jsoup/pull/1748","resourcePath":"/jhy/jsoup/pull/1748","createdAt":"2022-04-20T08:52:49Z","number":1748,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/select/QueryParser.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/select/QueryParserTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42edfu2gAoY2ZmMjFkYjg0NWVhMDMzYzcyMzQzNTkwZTMwNDg3ODU1Y2QwYmZhNQ","url":"https://github.com/jhy/jsoup/pull/1748/commits/cff21db845ea033c72343590e30487855cd0bfa5"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1707,"url":"https://github.com/jhy/jsoup/issues/1707","title":"Multiple selectors for direct descendants catches indirect descendants as well","bodyHTML":"<p dir=\"auto\">Using <code class=\"notranslate\">org.jsoup:jsoup:1.14.3</code>, it seems like using something like <code class=\"notranslate\">.select(\"&gt; .direct &gt; .foo, &gt; .direct &gt; .bar\")</code> will also select <code class=\"notranslate\">.direct &gt; .bar</code>.</p>\n<p dir=\"auto\">As a work-around: <code class=\"notranslate\">.selectFirst(\"&gt; .direct\")!!.select(\"&gt; .foo, &gt; .bar\")</code> seems to work fine.</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package bug\n\nimport org.intellij.lang.annotations.*\nimport org.jsoup.*\nimport org.junit.*\nimport org.junit.Assert.*\n\nclass JsoupLearningTests {\n   @Test\n   fun direct_descendant_bug_1() { // Fails.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_2() { // Passes.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_3() { // Passes.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_4() { // Fails.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n}\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-en\">bug</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.intellij.lang.annotations.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.jsoup.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.Assert.*</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">JsoupLearningTests</span> {\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_1</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Fails.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_2</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Passes.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_3</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Passes.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_4</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Fails.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n}</pre></div>\n<p dir=\"auto\">Not sure if it's a bug or a feature: in comparison, JS's <code class=\"notranslate\">.querySelectorAll(&gt; .direct)</code> throws about an invalid selector.</p>","resourcePath":"/jhy/jsoup/issues/1707","createdAt":"2022-01-18T16:46:33Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Update Element.java and add NewElementTest.java","url":"https://github.com/jhy/jsoup/pull/1779","resourcePath":"/jhy/jsoup/pull/1779","createdAt":"2022-05-25T17:05:33Z","number":1779,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Element.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/nodes/NewElementTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs44dggm2gAoZjY2NDQwN2Y4NTExZDY1MjRlY2FhNmFkZGU1NTMwYjQxMjk2NGIzMg","url":"https://github.com/jhy/jsoup/pull/1779/commits/f664407f8511d6524ecaa6adde5530b412964b32"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1117,"url":"https://github.com/jhy/jsoup/issues/1117","title":"Showing content of downlevel-revealed conditionals for IE","bodyHTML":"<p dir=\"auto\">I'm parsing with Jsoup the follwing html and the output html and nodes are different in the result of <code class=\"notranslate\">document.html()</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"String html = &quot;&lt;div&gt;&quot;\n            + &quot;&lt;![if true]&gt;1&lt;![endif]&gt;&quot; // downlevel-revealed\n            + &quot;&lt;!--[if true]&gt;2&lt;![endif]--&gt;&quot; // downlevel-hidden\n            + &quot;&lt;/div&gt;&quot;;\nDocument document = Jsoup.parse(html);\"><pre class=\"notranslate\"><code>String html = \"&lt;div&gt;\"\n            + \"&lt;![if true]&gt;1&lt;![endif]&gt;\" // downlevel-revealed\n            + \"&lt;!--[if true]&gt;2&lt;![endif]--&gt;\" // downlevel-hidden\n            + \"&lt;/div&gt;\";\nDocument document = Jsoup.parse(html);\n</code></pre></div>\n<p dir=\"auto\"><strong>Output</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  &lt;div&gt;\n   &lt;!--[if true]--&gt;1\n   &lt;!--[endif]--&gt;\n   &lt;!--[if true]&gt;2&lt;![endif]--&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\"><pre class=\"notranslate\"><code>&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  &lt;div&gt;\n   &lt;!--[if true]--&gt;1\n   &lt;!--[endif]--&gt;\n   &lt;!--[if true]&gt;2&lt;![endif]--&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  &lt;div&gt;\n   &lt;![if true]&gt;1&lt;![endif]&gt;\n   &lt;!--[if true]&gt;2&lt;![endif]--&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\"><pre class=\"notranslate\"><code>&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n  &lt;div&gt;\n   &lt;![if true]&gt;1&lt;![endif]&gt;\n   &lt;!--[if true]&gt;2&lt;![endif]--&gt;\n  &lt;/div&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></div>\n<p dir=\"auto\">And the div <code class=\"notranslate\">document.select(\"div\").first().childNodes()</code> are like this:</p>\n<p dir=\"auto\">class org.jsoup.nodes.Comment<br>\nclass org.jsoup.nodes.TextNode<br>\nclass org.jsoup.nodes.Comment<br>\nclass org.jsoup.nodes.Comment</p>\n<p dir=\"auto\">I would be happy to contribute to an eventual patch if you give me some hints.</p>","resourcePath":"/jhy/jsoup/issues/1117","createdAt":"2018-08-29T13:49:27Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix #1731","url":"https://github.com/jhy/jsoup/pull/1749","resourcePath":"/jhy/jsoup/pull/1749","createdAt":"2022-04-23T09:15:23Z","number":1749,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/Jsoup.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/safety/CleanerTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/safety/NewCleanerTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42qtBd2gAoYTRhMTM5Y2NhNTA2NmY3NzJjOWM2YzcxMTYwZTAwYjdmOTdkYWY2Yw","url":"https://github.com/jhy/jsoup/pull/1749/commits/a4a139cca5066f772c9c6c71160e00b7f97daf6c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1731,"url":"https://github.com/jhy/jsoup/issues/1731","title":"Clean: Links with stripped href should  be removed","bodyHTML":"<p dir=\"auto\">JSoup.clean() keeps links with stripped href like</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;a href=&quot;invalid link&quot;&gt;my link&lt;/a&gt;\n\n=&gt; (JSoup.clean())\n\n&lt;a rel=&quot;nofollow&quot;&gt;my link&lt;/a&gt;\"><pre class=\"notranslate\"><code>&lt;a href=\"invalid link\"&gt;my link&lt;/a&gt;\n\n=&gt; (JSoup.clean())\n\n&lt;a rel=\"nofollow\"&gt;my link&lt;/a&gt;\n</code></pre></div>\n<p dir=\"auto\">This makes no sense to me. The behaviour should be to strip the complete link to plaintext like</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"=&gt;\n\nmy link\"><pre class=\"notranslate\"><code>=&gt;\n\nmy link\n</code></pre></div>\n<p dir=\"auto\">At least there should be a SafeList-Option to remove tags, if they do not have attribute xx after cleaning.</p>","resourcePath":"/jhy/jsoup/issues/1731","createdAt":"2022-03-06T12:25:49Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"\"Solve the bug of multiple css queries with '>'","url":"https://github.com/jhy/jsoup/pull/1753","resourcePath":"/jhy/jsoup/pull/1753","createdAt":"2022-04-23T11:12:34Z","number":1753,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/select/QueryParser.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/jsoup/select/QueryParserTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42qxBp2gAoOGI0ZjgwZTE3NmJlMzMyMTcxMjMyNDQwYmY1MDdkMWYxNGQwMjRhYg","url":"https://github.com/jhy/jsoup/pull/1753/commits/8b4f80e176be332171232440bf507d1f14d024ab"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1707,"url":"https://github.com/jhy/jsoup/issues/1707","title":"Multiple selectors for direct descendants catches indirect descendants as well","bodyHTML":"<p dir=\"auto\">Using <code class=\"notranslate\">org.jsoup:jsoup:1.14.3</code>, it seems like using something like <code class=\"notranslate\">.select(\"&gt; .direct &gt; .foo, &gt; .direct &gt; .bar\")</code> will also select <code class=\"notranslate\">.direct &gt; .bar</code>.</p>\n<p dir=\"auto\">As a work-around: <code class=\"notranslate\">.selectFirst(\"&gt; .direct\")!!.select(\"&gt; .foo, &gt; .bar\")</code> seems to work fine.</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package bug\n\nimport org.intellij.lang.annotations.*\nimport org.jsoup.*\nimport org.junit.*\nimport org.junit.Assert.*\n\nclass JsoupLearningTests {\n   @Test\n   fun direct_descendant_bug_1() { // Fails.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_2() { // Passes.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                              &lt;span class=&quot;interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_3() { // Passes.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n\n   @Test\n   fun direct_descendant_bug_4() { // Fails.\n      @Language(&quot;HTML&quot;)\n      val html = &quot;&quot;&quot;\n         &lt;!DOCTYPE html&gt;\n         &lt;html lang=&quot;en&quot;&gt;\n            &lt;head&gt;\n               &lt;meta charset=&quot;utf-8&quot;/&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n               &lt;div class=&quot;entry&quot;&gt;\n                  &lt;div class=&quot;entry__header&quot;&gt;\n                     &lt;div class=&quot;interesting-container&quot;&gt;\n                        &lt;span class=&quot;interesting-item&quot;&gt;Y&lt;/span&gt;\n                        &lt;span class=&quot;also-interesting-item&quot;&gt;Y&lt;/span&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=&quot;entry__body&quot;&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;p&gt; ... &lt;/p&gt;\n                     &lt;div class=&quot;sub-entry entry&quot;&gt;\n                        &lt;div class=&quot;entry__header&quot;&gt;\n                           &lt;div class=&quot;interesting-container&quot;&gt;\n                              &lt;span class=&quot;also-interesting-item&quot;&gt;N&lt;/span&gt;\n                           &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;entry__body&quot;&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                           &lt;p&gt; ... &lt;/p&gt;\n                        &lt;/div&gt;\n                     &lt;/div&gt;\n                  &lt;/div&gt;\n               &lt;/div&gt;\n            &lt;/body&gt;\n         &lt;/html&gt;\n      &quot;&quot;&quot;\n\n      val document = Jsoup.parse(html)\n      val entry = document.selectFirst(&quot;.entry&quot;)!!\n      val interestingItems = entry.select(&quot;&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item&quot;)\n      val actual = interestingItems.joinToString(&quot;&quot;) { it.text() }\n\n      assertEquals(&quot;YY&quot;, actual)\n   }\n}\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-en\">bug</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.intellij.lang.annotations.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.jsoup.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.*</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.Assert.*</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">JsoupLearningTests</span> {\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_1</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Fails.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_2</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Passes.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_3</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Passes.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n\n   @Test\n   <span class=\"pl-k\">fun</span> <span class=\"pl-en\">direct_descendant_bug_4</span>() { <span class=\"pl-c\"><span class=\"pl-c\">//</span> Fails.</span>\n      @Language(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HTML<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> html <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">         &lt;!DOCTYPE html&gt;</span>\n<span class=\"pl-s\">         &lt;html lang=\"en\"&gt;</span>\n<span class=\"pl-s\">            &lt;head&gt;</span>\n<span class=\"pl-s\">               &lt;meta charset=\"utf-8\"/&gt;</span>\n<span class=\"pl-s\">            &lt;/head&gt;</span>\n<span class=\"pl-s\">            &lt;body&gt;</span>\n<span class=\"pl-s\">               &lt;div class=\"entry\"&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                        &lt;span class=\"also-interesting-item\"&gt;Y&lt;/span&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                     &lt;div class=\"sub-entry entry\"&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__header\"&gt;</span>\n<span class=\"pl-s\">                           &lt;div class=\"interesting-container\"&gt;</span>\n<span class=\"pl-s\">                              &lt;span class=\"also-interesting-item\"&gt;N&lt;/span&gt;</span>\n<span class=\"pl-s\">                           &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                        &lt;div class=\"entry__body\"&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                           &lt;p&gt; ... &lt;/p&gt;</span>\n<span class=\"pl-s\">                        &lt;/div&gt;</span>\n<span class=\"pl-s\">                     &lt;/div&gt;</span>\n<span class=\"pl-s\">                  &lt;/div&gt;</span>\n<span class=\"pl-s\">               &lt;/div&gt;</span>\n<span class=\"pl-s\">            &lt;/body&gt;</span>\n<span class=\"pl-s\">         &lt;/html&gt;</span>\n<span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>\n\n      <span class=\"pl-k\">val</span> document <span class=\"pl-k\">=</span> <span class=\"pl-en\">Jsoup</span>.parse(html)\n      <span class=\"pl-k\">val</span> entry <span class=\"pl-k\">=</span> document.selectFirst(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.entry<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">!!</span>\n      <span class=\"pl-k\">val</span> interestingItems <span class=\"pl-k\">=</span> entry.select(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&gt; .entry__header &gt; .interesting-container &gt; .interesting-item, &gt; .entry__header &gt; .interesting-container &gt; .also-interesting-item<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">val</span> actual <span class=\"pl-k\">=</span> interestingItems.joinToString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>) { it.text() }\n\n      assertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>YY<span class=\"pl-pds\">\"</span></span>, actual)\n   }\n}</pre></div>\n<p dir=\"auto\">Not sure if it's a bug or a feature: in comparison, JS's <code class=\"notranslate\">.querySelectorAll(&gt; .direct)</code> throws about an invalid selector.</p>","resourcePath":"/jhy/jsoup/issues/1707","createdAt":"2022-01-18T16:46:33Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Add a new method for querying the n th matching elements / fix #1104","url":"https://github.com/jhy/jsoup/pull/1759","resourcePath":"/jhy/jsoup/pull/1759","createdAt":"2022-04-24T17:35:31Z","number":1759,"mergeCommit":null,"potentialMergeCommit":{"oid":"f2d956493c0707f199cf81e8de97c9f2a6dd5281","message":"Merge fcb12c7e97fcbacd8bfe8499e8d4bc848a97ec46 into 12175ab43e639289c387d4af4a3741a477416f45","commitUrl":"https://github.com/jhy/jsoup/commit/f2d956493c0707f199cf81e8de97c9f2a6dd5281","parents":{"nodes":[{"oid":"12175ab43e639289c387d4af4a3741a477416f45","message":"Track source position from original to cleaned elements."},{"oid":"fcb12c7e97fcbacd8bfe8499e8d4bc848a97ec46","message":"Add a new method for querying the n th matching elements / fix #1104"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/nodes/Element.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs42r7o42gAoZmNiMTJjN2U5N2ZjYmFjZDhiZmU4NDk5ZThkNGJjODQ4YTk3ZWM0Ng","url":"https://github.com/jhy/jsoup/pull/1759/commits/fcb12c7e97fcbacd8bfe8499e8d4bc848a97ec46"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1104,"url":"https://github.com/jhy/jsoup/issues/1104","title":"why \":nth-of-type(n)\" doesn't support ?","bodyHTML":"<p dir=\"auto\">HTML contents :<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/11542748/43265742-4502a0c2-9107-11e8-9962-ad5c01dd5da6.png\"><img src=\"https://user-images.githubusercontent.com/11542748/43265742-4502a0c2-9107-11e8-9962-ad5c01dd5da6.png\" alt=\"jsoup\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Here, I need to select \"dl\" tag with class=summary but it is present more than one time. I applied \"dl:nth-of-type(1)[class=summary]\" but it is selecting all dl tags with class value as summary.<br>\nIs there any other way to select a specific one out of similar elemnets ?<br>\nThanks</p>","resourcePath":"/jhy/jsoup/issues/1104","createdAt":"2018-07-26T13:30:41Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Implement buffer recycling for CharacterReader","url":"https://github.com/jhy/jsoup/pull/1800","resourcePath":"/jhy/jsoup/pull/1800","createdAt":"2022-07-01T02:28:47Z","number":1800,"mergeCommit":null,"potentialMergeCommit":{"oid":"d1e6f392f943d2e42644c1760b49ff505b28a90d","message":"Merge d09a1069790832e53171bb7d1c8a18f8ddcbfeab into 12175ab43e639289c387d4af4a3741a477416f45","commitUrl":"https://github.com/jhy/jsoup/commit/d1e6f392f943d2e42644c1760b49ff505b28a90d","parents":{"nodes":[{"oid":"12175ab43e639289c387d4af4a3741a477416f45","message":"Track source position from original to cleaned elements."},{"oid":"d09a1069790832e53171bb7d1c8a18f8ddcbfeab","message":"ISSUE-1773 Tokeniser: recycle string builders too"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"pom.xml"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/jsoup/helper/BufferRecycler.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/jsoup/helper/StringBuilderRecycler.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/CharacterReader.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/Tokeniser.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/jsoup/parser/TreeBuilder.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/jsoup/benchmarks/JMHBenchmark.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAAbAPs46rY0r2gAoZDA5YTEwNjk3OTA4MzJlNTMxNzFiYjdkMWM4YTE4ZjhkZGNiZmVhYg","url":"https://github.com/jhy/jsoup/pull/1800/commits/d09a1069790832e53171bb7d1c8a18f8ddcbfeab"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1773,"url":"https://github.com/jhy/jsoup/issues/1773","title":"CharacterReader always allocate a 32 KB buffer that can even exceed document size","bodyHTML":"<p dir=\"auto\">This might be overkill and we might be able to decrease the size of this buffer for small strings to be parsed.</p>\n<p dir=\"auto\">This should thus reduce memory allocation.</p>\n<p dir=\"auto\">Here is a small async profiler memory flame graph showing this:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6928740/168553253-ec6faee4-f4fd-4608-8480-6e2e60219581.png\"><img src=\"https://user-images.githubusercontent.com/6928740/168553253-ec6faee4-f4fd-4608-8480-6e2e60219581.png\" alt=\"Screenshot from 2022-05-16 15-36-50\" style=\"max-width: 100%;\"></a></p>","resourcePath":"/jhy/jsoup/issues/1773","createdAt":"2022-05-16T08:39:55Z","labels":{"edges":[]}}}]}}}}]