[{"repository":{"pullRequest":{"title":"Support for multiple identities while having an unreliable principal","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/61","resourcePath":"/Hakky54/sslcontext-kickstart/pull/61","createdAt":"2021-02-10T09:18:23Z","number":61,"mergeCommit":{"oid":"fde222c66da29c5efd81fb5d55b1e6721bea39a2","message":"Support for multiple identities while having an unreliable principal (#61)\n\n* Added initial implementation for routing preferred client certificate for ssl handshake\r\n\r\n* Extracted validations into separate util classes\r\n\r\n* Removed disabled integration tests\r\n\r\n* Added unit tests\r\n\r\n* Added documentation","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/fde222c66da29c5efd81fb5d55b1e6721bea39a2","parents":{"nodes":[{"oid":"130b6c23b6cc56599a62b3211337d0c79e576556","message":"fix: sslcontext-kickstart-for-netty/pom.xml to reduce vulnerabilities (#60)\n\nThe following vulnerabilities are fixed with an upgrade:\r\n- https://snyk.io/vuln/SNYK-JAVA-IONETTY-1070799\r\n\r\nCo-authored-by: snyk-bot <snyk-bot@snyk.io>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-one/identity.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-one/truststore.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-two/identity.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-two/truststore.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-one/identity.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-one/truststore.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-two/identity.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-two/truststore.jks"}},{"node":{"changeType":"DELETED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/prod.idrix.eu-identity.jks"}},{"node":{"changeType":"DELETED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/prod.idrix.eu-truststore.jks"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTcwOTUwMTU5OjNjMjM1YThlN2IxMjdmY2UwODE5NWVhZDMzYTEyOGFmMWM0ZWExZmM=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/61/commits/3c235a8e7b127fce08195ead33a128af1c4ea1fc"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":58,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/58","title":"Support for using multiple identity materials and trust materials not working","bodyHTML":"<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">First of all, a big thanks for this project.<br>\nIt is well written, well documented, and very helpful!</p>\n<p dir=\"auto\">I am opening an issue regarding the \"Support for using multiple identity materials and trust materials\" as I believe it might not be behaving correctly.</p>\n<p dir=\"auto\">In order to illustrate my example, I am going to simplify to two different services (instead of a large number)</p>\n<p dir=\"auto\">First service I need to talk to: OrderService. It is a service where one will place orders. (I order a video game, I order a bicycle)</p>\n<p dir=\"auto\">Second service I need to take to, DeliveryService. It is a service where one will deliver something to someone. It can work a standalone, I deliver this contract to this person, often used in conjunction of OrderService, I deliver the video game I just ordered to someone.</p>\n<p dir=\"auto\">The two companies owning the services are competing company, they will enforce client to have it their own keystores. No way possible to go to one company and say: If I bring you the certificate I use to talk to the other service, can you trust it as well? No no.</p>\n<p dir=\"auto\">In order to perform such, I am using this library, where I beforehand verified.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), &quot;talkToOrderService&quot;.toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), &quot;trustStorePassPhrase&quot;.toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\"><pre class=\"notranslate\"><code> SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), \"talkToOrderService\".toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), \"trustStorePassPhrase\".toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\n</code></pre></div>\n<p dir=\"auto\">This is working fine to talk to order service</p>\n<p dir=\"auto\">But also, I verified,</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), &quot;talkToDeliveryService&quot;.toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), &quot;trustStorePassPhrase&quot;.toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\"><pre class=\"notranslate\"><code> SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), \"talkToDeliveryService\".toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), \"trustStorePassPhrase\".toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\n</code></pre></div>\n<p dir=\"auto\">This is working fine to talk to delivery service (mock the step to talk to order service)</p>\n<p dir=\"auto\">Now, chaining the two calls, first talk to order service, then to delivery service.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), &quot;talkToOrderService&quot;.toCharArray())\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), &quot;talkToDeliveryService&quot;.toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), &quot;trustStorePassPhrase&quot;.toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\"><pre class=\"notranslate\"><code> SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), \"talkToOrderService\".toCharArray())\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), \"talkToDeliveryService\".toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), \"trustStorePassPhrase\".toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\n</code></pre></div>\n<p dir=\"auto\">This still yields <code class=\"notranslate\">javax.net.ssl.SSLHandshakeException: Received fatal alert: unknown_ca; nested exception is io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: Received fatal alert: unknown_ca</code></p>\n<p dir=\"auto\">Could you please help?</p>\n<p dir=\"auto\">Thank you</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/58","createdAt":"2021-02-07T08:52:00Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Changed logging api from slf4j to dynamic logging api","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/90","resourcePath":"/Hakky54/sslcontext-kickstart/pull/90","createdAt":"2021-06-11T12:56:53Z","number":90,"mergeCommit":{"oid":"902b04fdcd8181700a47a813e3cea67d7c13dbea","message":"Changed logging api from slf4j to dynamic logging api (#90)\n\n* Changed logging api to dynamic logging api\r\n\r\n* Used fixed version of yaslf4j\r\n\r\n* Fixed unit tests","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/902b04fdcd8181700a47a813e3cea67d7c13dbea","parents":{"nodes":[{"oid":"478a33aa3aee2a570f243985fa1b48f4d66e7535","message":"Changed license url to https"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/pom.xml"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/keymanager/KeyManagerFactorySpiWrapper.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManager.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/TrustManagerFactorySpiWrapper.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManager.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManagerShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/HotSwappableX509ExtendedTrustManagerIT.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjY4MTE4Mjk5OjZlNjNlMTM4OTZlZjcxZWVmMGI1OGVmZjI0ZjExNjBhM2I3Zjk4MDQ=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/90/commits/6e63e13896ef71eef0b58eff24f1160a3b7f9804"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":20,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/20","title":"Remove slf4j to achieve zero-dependency policy","bodyHTML":"<p dir=\"auto\">Your library has only one dependency (slf4j) that can be replaced by the one provided by the jdk.<br>\nThat would result in a zero-dependency policy such as described <a href=\"https://blog.jooq.org/2016/08/11/all-libraries-should-follow-a-zero-dependency-policy/\" rel=\"nofollow\">there</a> (tl;dr avoiding dependency hell)</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/20","createdAt":"2020-08-31T12:32:04Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Support for loading truststore without additional password","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/15","resourcePath":"/Hakky54/sslcontext-kickstart/pull/15","createdAt":"2020-08-27T05:56:26Z","number":15,"mergeCommit":{"oid":"9868a9a2138649d91994cb046257fb5492a59576","message":"Added additional method which does not require a password","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/9868a9a2138649d91994cb046257fb5492a59576","parents":{"nodes":[{"oid":"6ba8466314925b283bdaef0198b7585050157fea","message":"Renamed files"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc0NDY2OTI1OmEwMzM3YTAyZjJlNGI4M2JhNWViMzVjZTg4NTJjMjRjYmI5OTIxYTI=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/15/commits/a0337a02f2e4b83ba5eb35ce8852c24cbb9921a2"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":14,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/14","title":"Keystore password is unnecessary","bodyHTML":"<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">First of all, thanks for the handy library. I have a suggestion to drop the keystore password as it is redundant (client would have already a Keystore at hand) in the api that takes KeyStore as the first argument.</p>\n<p dir=\"auto\">For example, this is how I use your library.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder sslFactoryBuilder = SSLFactory.builder()\n                                                         .withDefaultTrustMaterial();\n        if ((trustStoreResource != null) &amp;&amp; (trustStorePassword != null)) {\n            KeyStore trustStore = KeyStore.getInstance(&quot;PKCS12&quot;);\n            trustStore.load(trustStoreResource.getInputStream(),\n                            trustStorePassword.toCharArray());\n            sslFactoryBuilder.withTrustMaterial(\n                trustStore, trustStorePassword.toCharArray());\n        }\"><pre class=\"notranslate\"><code>SSLFactory.Builder sslFactoryBuilder = SSLFactory.builder()\n                                                         .withDefaultTrustMaterial();\n        if ((trustStoreResource != null) &amp;&amp; (trustStorePassword != null)) {\n            KeyStore trustStore = KeyStore.getInstance(\"PKCS12\");\n            trustStore.load(trustStoreResource.getInputStream(),\n                            trustStorePassword.toCharArray());\n            sslFactoryBuilder.withTrustMaterial(\n                trustStore, trustStorePassword.toCharArray());\n        }\n</code></pre></div>\n<p dir=\"auto\">And as you can see, <em>sslFactoryBuilder.withTrustMaterial(trustStore, <strong>trustStorePassword.toCharArray()</strong>);</em>, password is not required there.</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/14","createdAt":"2020-08-26T09:20:24Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Feature/add support for loading identity and trust material without password","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/12","resourcePath":"/Hakky54/sslcontext-kickstart/pull/12","createdAt":"2020-07-26T22:16:41Z","number":12,"mergeCommit":{"oid":"fec0be9d2012948ca2a7e3d5bb19930ef2635b44","message":"Removed password validation","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/fec0be9d2012948ca2a7e3d5bb19930ef2635b44","parents":{"nodes":[{"oid":"c9e51e301f648c57b0f2d41124ccc30db0819571","message":"Added non password protected keystores"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/identity-without-password.jks"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/truststore-without-password.jks"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDU2ODEzMzM3OjNhMmEzYzA5ZTk2M2JkNzcyOGU4ZDQ2NTk2NDY2Zjk4NWMwNmQ2ODI=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/12/commits/3a2a3c09e963bd7728e8d46596466f985c06d682"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":11,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/11","title":"SSLFactory withTrustMaterial with null (empty password)","bodyHTML":"<p dir=\"auto\">Hello.</p>\n<p dir=\"auto\">I'm trying to load my own TrustMaterial which i have in my own JKS keystore.<br>\nBut I see you have a validations in all the overloaded methods <strong>withTrustMaterial</strong> that the password can not be NULL or empty char[].<br>\nDo i really need to add a password to my keystore? Right now my JKS has no password at all.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withTrustMaterial(&quot;keystore/custom-keystore.jks&quot;, null)\n        .build();\"><pre class=\"notranslate\"><code>SSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withTrustMaterial(\"keystore/custom-keystore.jks\", null)\n        .build();\n</code></pre></div>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/11","createdAt":"2020-07-26T20:12:39Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Support for loading pem files","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/17","resourcePath":"/Hakky54/sslcontext-kickstart/pull/17","createdAt":"2020-08-30T22:04:23Z","number":17,"mergeCommit":{"oid":"4cdd1216e8d23e8d37ccd8abd3176184101f84ef","message":"Support for loading pem files (#17)\n\n* Added additional examples\r\n\r\n* Renamed files\r\n\r\n* Added initial code snippet for loading pem files\r\n\r\n* Renamed some variables\r\n\r\n* Added additional pem files\r\n\r\n* Removed duplicates\r\n\r\n* Fixed loading identity\r\n\r\n* Added support for loading key and certificate separately as identity material\r\n\r\n* Added some javadoc\r\n\r\n* Added support for loading identity material as input stream\r\n\r\n* Removed redundant null validation\r\n\r\n* Rotated identity method parameters\r\n\r\n* Wrapped checked exception withing a runtime io exception","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/4cdd1216e8d23e8d37ccd8abd3176184101f84ef","parents":{"nodes":[{"oid":"f2f67c6f15e43374b167614a71d4b3272c888715","message":"Bumped LogCaptor"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/util/PemUtils.java"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/util/PemUtilsShould.java"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/encrypted-identity.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/github-certificate.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/multiple-certificates.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/rsa-encrypted-identity.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/splitted-unencrypted-identity-containing-certificate.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/splitted-unencrypted-identity-containing-private-key.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/stackexchange.pem"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/resources/pems-for-unit-tests/unencrypted-identity.pem"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc1OTY5NzAxOjRkMjZkODdhMTViNmM0NTdhMGU4ZDFlMzU1ZTE3NDJmZjhkOGI5YTk=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/17/commits/4d26d87a15b6c457a0e8d1e355e1742ff8d8b9a9"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":16,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/16","title":"Support PEM-encoded standalone RSA private keys and certificates as produced by OpenSSL tools","bodyHTML":"<p dir=\"auto\">It would be useful that this library supported to load PEM-encoded RSA private keys with corresponding PEM-encoded certificate as generated by OpenSSL and other tools in the wild, to bridge the gap between \"java world\" tools (keytool and its not standard jks format) and basically everything else.</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/16","createdAt":"2020-08-29T22:16:40Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Support for custom list of ciphers and protocols","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/23","resourcePath":"/Hakky54/sslcontext-kickstart/pull/23","createdAt":"2020-09-25T14:17:26Z","number":23,"mergeCommit":{"oid":"5289eb48e9b196c3e1d18ce5b5dc3af274483184","message":"Support for custom list of ciphers and protocols (#23)\n\n* Added support for custom list of ciphers and protocols\r\n\r\n* Fixed javadoc\r\n\r\n* Fixed javadoc\r\n\r\n* Disabled javadoc lint\r\n\r\n* Fixed unit test\r\n\r\n* Cleanup constructor\r\n\r\n* Adjusted javadoc\r\n\r\n* Wrapped ciphers and protocols in a SSLParameters object\r\n\r\n* Removed setting custom provider and marked protocol as deprecated and to be removed\r\n\r\n* fixed unit test\r\n\r\n* Removed unused import","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/5289eb48e9b196c3e1d18ce5b5dc3af274483184","parents":{"nodes":[{"oid":"01c6b3f510bfdffd0cd20e931ea8cef97b3410de","message":"[maven-release-plugin] prepare for next development iteration"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"pom.xml"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-apache/src/main/java/nl/altindag/sslcontext/util/ApacheSslContextUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-apache/src/test/java/nl/altindag/sslcontext/util/ApacheSslContextUtilsShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-jetty/src/main/java/nl/altindag/sslcontext/util/JettySslContextUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-jetty/src/test/java/nl/altindag/sslcontext/util/JettySslContextUtilsShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-netty/src/main/java/nl/altindag/sslcontext/util/NettySslContextUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-netty/src/test/java/nl/altindag/sslcontext/util/NettySslContextUtilsShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDkzMTA4MTg2OjhkYmI3OTJiZDc4ZDU3ZjhlOGYxNGZhMzc4ZTc3MjBmNTQxYjBlNmU=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/23/commits/8dbb792bd78d57f8e8f14fa378e7720f541b0e6e"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":22,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/22","title":"Set Enabled Protocols","bodyHTML":"<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I could not find a way to set enabled protocols in the sslcontext. This would be useful, if the client want to reject server which supports only old version (say TLSv1.0).</p>\n<p dir=\"auto\">for example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\npublic SSLFactory.Builder withAllowedProtocols(String[] allowedProtocols) {\n      this.allowedProtocols = allowedProtocols;\n      return this;\n}\nprivate void createSSLContext(KeyManager[] keyManagers, TrustManager[] trustManagers) {\n        try {\n            this.sslContext = SSLContext.getInstance(this.protocol);\n            this.sslContext.init(keyManagers, trustManagers, this.secureRandom);\n            //Add following line\n            this.sslContext.getDefaultSSLParameters().setProtocols(this.allowedProtocols);\n        } catch (KeyManagementException | NoSuchAlgorithmException var4) {\n            throw new GenericSSLContextException(var4);\n        }\n    }\"><pre class=\"notranslate\"><code>\npublic SSLFactory.Builder withAllowedProtocols(String[] allowedProtocols) {\n      this.allowedProtocols = allowedProtocols;\n      return this;\n}\nprivate void createSSLContext(KeyManager[] keyManagers, TrustManager[] trustManagers) {\n        try {\n            this.sslContext = SSLContext.getInstance(this.protocol);\n            this.sslContext.init(keyManagers, trustManagers, this.secureRandom);\n            //Add following line\n            this.sslContext.getDefaultSSLParameters().setProtocols(this.allowedProtocols);\n        } catch (KeyManagementException | NoSuchAlgorithmException var4) {\n            throw new GenericSSLContextException(var4);\n        }\n    }\n</code></pre></div>\n<p dir=\"auto\">Regards<br>\nWinster</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/22","createdAt":"2020-09-14T07:54:03Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Rename packages and utility classes","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/32","resourcePath":"/Hakky54/sslcontext-kickstart/pull/32","createdAt":"2020-12-01T07:53:27Z","number":32,"mergeCommit":{"oid":"61c223e3127d21ae680deb28ed35515c4987bca4","message":"Rename packages and utility classes (#32)\n\n* Renamed package\r\n\r\n* Renamed utility classes\r\n\r\n* Updated references","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/61c223e3127d21ae680deb28ed35515c4987bca4","parents":{"nodes":[{"oid":"3dbdce449b6294ce92101670f37d554333253822","message":"Bumped dependency"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/socket/CompositeSSLSocketFactoryShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManagerShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/KeyStoreTestUtils.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManagerShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/X509TrustManagerWrapperShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/IOUtilsShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyManagerUtilsShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"}},{"node":{"changeType":"RENAMED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMwMDk5MzYwOmM0YTI0MTQ2MmM1NWFhMDY4NDg0ZDRiZWRjNDNlMzk1YjliOTM0ZmU=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/32/commits/c4a241462c55aa068484d4bedc43e395b9b934fe"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":24,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/24","title":"Rename sslcontext package to a generic name","bodyHTML":"<p dir=\"auto\">Initially SSLFactory was named SSLContextHelper and it was the only class within the package. Therefor it made sense to name the package <code class=\"notranslate\">nl.altindag.sslcontext.*</code> As the library grows and contains other functionalities such as KeyStoreUtils, TrustManagerUtils, KeyManagerUtils, CompositeX509ExtendedKeyManager, CompositeX509ExtendedTrustManager, PemUtils, JettySslContextUtils, NettySslContextUtils, ApacheSslContextUtils it would make more sense to group them in a more generic name such as <code class=\"notranslate\">nl.altindag.ssl.*</code></p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/24","createdAt":"2020-09-27T09:48:01Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Added support for system trust material","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/21","resourcePath":"/Hakky54/sslcontext-kickstart/pull/21","createdAt":"2020-08-31T13:28:25Z","number":21,"mergeCommit":{"oid":"a0da758f105625f919931794db714b38613ae46c","message":"Added support for system trust material (#21)\n\n* Added support for system keystore\r\n\r\n* Removed unused constant\r\n\r\n* Only adding support for windows and mac","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/a0da758f105625f919931794db714b38613ae46c","parents":{"nodes":[{"oid":"9d9904de340108d43ded421d7cd36a63681d9723","message":"[maven-release-plugin] prepare for next development iteration"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/util/KeyStoreUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/util/TrustManagerUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/util/KeyStoreUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc2Mjk5MjI4OjdmMDlmNTFkYzYwY2Q0MTJhMTkxOGU1NmQ4NDdkNjQ0OGZjYjk0Y2Y=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/21/commits/7f09f51dc60cd412a1918e56d847d6448fcb94cf"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":19,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/19","title":"Simplify use of system truststore","bodyHTML":"<p dir=\"auto\">Under Windows and MacOS, it is possible to use the system truststore in addition to regular keystores.<br>\nWith the current library, it can be achieved by a code like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder result = SSLFactory\n                .builder()\n                .withDefaultTrustMaterial();\nif (isWindows()) {\n  KeyStore root = KeyStore.getInstance(&quot;Windows-ROOT&quot;);\n  root.load(null, null);\n  result.withTrustMaterial(root, new char[0]);\n  KeyStore my = KeyStore.getInstance(&quot;Windows-MY&quot;);\n  my.load(null, null);\n  result.withTrustMaterial(my, new char[0]);\n} else if (isMacos()) {\n  KeyStore keychain = KeyStore.getInstance(&quot;KeychainStore&quot;);\n  keychain.load(null, null);\n  result.withTrustMaterial(keychain, new char[0]);\n}\"><pre><span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-c1\">SSLFactory</span>\n                .<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withDefaultTrustMaterial</span>();\n<span class=\"pl-k\">if</span> (<span class=\"pl-en\">isWindows</span>()) {\n  <span class=\"pl-smi\">KeyStore</span> <span class=\"pl-s1\">root</span> = <span class=\"pl-s1\">KeyStore</span>.<span class=\"pl-en\">getInstance</span>(<span class=\"pl-s\">\"Windows-ROOT\"</span>);\n  <span class=\"pl-s1\">root</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n  <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">root</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">char</span>[<span class=\"pl-c1\">0</span>]);\n  <span class=\"pl-smi\">KeyStore</span> <span class=\"pl-s1\">my</span> = <span class=\"pl-s1\">KeyStore</span>.<span class=\"pl-en\">getInstance</span>(<span class=\"pl-s\">\"Windows-MY\"</span>);\n  <span class=\"pl-s1\">my</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n  <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">my</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">char</span>[<span class=\"pl-c1\">0</span>]);\n} <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isMacos</span>()) {\n  <span class=\"pl-smi\">KeyStore</span> <span class=\"pl-s1\">keychain</span> = <span class=\"pl-s1\">KeyStore</span>.<span class=\"pl-en\">getInstance</span>(<span class=\"pl-s\">\"KeychainStore\"</span>);\n  <span class=\"pl-s1\">keychain</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n  <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">keychain</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">char</span>[<span class=\"pl-c1\">0</span>]);\n}</pre></div>\n<p dir=\"auto\">I would prefer to have something like:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder result = SSLFactory\n                .builder()\n                .withDefaultTrustMaterial()\n                .withSystemTrustMaterial();\"><pre><span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-c1\">SSLFactory</span>\n                .<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withDefaultTrustMaterial</span>()\n                .<span class=\"pl-en\">withSystemTrustMaterial</span>();</pre></div>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/19","createdAt":"2020-08-31T12:11:55Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Disabled logging UnsafeHostNameVerifier and UnsafeX509ExtendedTrustManager","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/122","resourcePath":"/Hakky54/sslcontext-kickstart/pull/122","createdAt":"2021-10-07T10:31:53Z","number":122,"mergeCommit":{"oid":"e1d9740e37af3ecc2db3489744a19b143cdd508c","message":"Merge pull request #122 from Hakky54/feature/disable-logging-unsafe-trust-manager-and-hostname-verifier\n\nDisabled logging UnsafeHostNameVerifier and UnsafeX509ExtendedTrustManager","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/e1d9740e37af3ecc2db3489744a19b143cdd508c","parents":{"nodes":[{"oid":"9775b98981527834d912e2174bbd3589a9c3362f","message":"Added additional route"},{"oid":"3173d3b2f388538923f20f725c6e562dc1f3b5b3","message":"Disabled logging of UnsafeHostNameVerifier and UnsafeX509ExtendedTrustManager"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/UnsafeHostNameVerifier.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManager.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/hostnameverifier/UnsafeHostnameVerifierShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/HotSwappableX509ExtendedTrustManagerIT.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManagerShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc4s4pMf2gAoMzE3M2QzYjJmMzg4NTM4OTIzZjIwZjcyNWM2ZTU2MmRjMWYzYjViMw","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/122/commits/3173d3b2f388538923f20f725c6e562dc1f3b5b3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":121,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/121","title":"Remove/Disable logging in unsafe HostnameVerifier and TrustManager","bodyHTML":"<p dir=\"auto\">the logging in the unsafe variants of HostnameVerifier and TrustManager spam logs. There should be a way to disable this or at least log it to DEBUG.</p>\n<p dir=\"auto\">I see no reason why i would like to know that a self signed certificate is trusted. that's exactly what i want to do else i wouldn't use this specific verifier.</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/121","createdAt":"2021-10-06T12:02:57Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Add support for routing multiple server identities","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/131","resourcePath":"/Hakky54/sslcontext-kickstart/pull/131","createdAt":"2021-11-30T13:18:00Z","number":131,"mergeCommit":{"oid":"7e5a0ee3a366426b990f50fdc5558c6ea100b5c2","message":"Add support for routing multiple server identities (#131)\n\n* Added option to route server identities to hosts\r\n\r\n* Marked client identity route as deprecated. Combined server and client identity route\r\n\r\n* Simplified server alias extraction\r\n\r\n* Removed duplicate code\r\n\r\n* Removed duplicate code\r\n\r\n* simplified getPreferredServerAlias\r\n\r\n* Removed duplicate code from choose client alias\r\n\r\n* Fixed javadoc\r\n\r\n* Added unit test\r\n\r\n* Updated documentation","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/7e5a0ee3a366426b990f50fdc5558c6ea100b5c2","parents":{"nodes":[{"oid":"2d54930d83a37739d3908a7d986a79982e4170a0","message":"Bump version.junit from 5.8.1 to 5.8.2 (#133)\n\nBumps `version.junit` from 5.8.1 to 5.8.2.\r\n\r\nUpdates `junit-jupiter-api` from 5.8.1 to 5.8.2\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.1...r5.8.2)\r\n\r\nUpdates `junit-jupiter-engine` from 5.8.1 to 5.8.2\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.1...r5.8.2)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.junit.jupiter:junit-jupiter-api\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.junit.jupiter:junit-jupiter-engine\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"README.md"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/keymanager/CompositeX509ExtendedKeyManager.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyManagerUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/keymanager/CompositeX509ExtendedKeyManagerShould.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyManagerUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc4vMCEW2gAoZTU4ZTg3NjhhNGU2MWNjZGI3OGU4OTliNDc3Zjg5ZjA0Y2JiOTJiZg","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/131/commits/e58e8768a4e61ccdb78e899b477f89f04cbb92bf"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":130,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/130","title":"If multiple certificates are configured, the browser cannot obtain the correct certificate after the host address is entered","bodyHTML":"<p dir=\"auto\"><code class=\"notranslate\">Hello, I have configured two certificates through your library, the domain name of one certificate is www.gateway.com.cn, and the domain name of the other certificate is www.ingress.com.cn. My code is written like this</code></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Bean\n    public WebServerFactoryCustomizer&lt;NettyReactiveWebServerFactory&gt; sslServerConsumer() {\n        return factory -&gt; {\n            factory.addServerCustomizers(httpServer -&gt; httpServer.secure(sslContextSpec -&gt; {\n                try {\n                    X509ExtendedKeyManager x509ExtendedKeyManager = PemUtils.loadIdentityMaterial(\n                            getResource(&quot;classpath:ssl/default/server.pem&quot;),\n                            getResource(&quot;classpath:ssl/default/server-key.pem&quot;));\n                    X509ExtendedTrustManager x509ExtendedTrustManager = PemUtils.loadTrustMaterial(getResource(&quot;classpath:ssl/default/ca.pem&quot;));\n                    SSLFactory.Builder builder = SSLFactory.builder()\n                            .withIdentityMaterial(x509ExtendedKeyManager)\n                            .withTrustMaterial(x509ExtendedTrustManager);\n                    loadOtherCertificate(builder);\n                    builder.withProtocols(&quot;TLSv1.2&quot;);\n                    SSLFactory sslFactory = builder.build();\n                    System.out.println(&quot;ssl init success&quot;);\n                    X509ExtendedKeyManager keyManager = sslFactory.getKeyManager()\n                            .orElseThrow(NullPointerException::new);\n                    SslContextBuilder sslContextBuilder = SslContextBuilder.forServer(composeKeyManager((CompositeX509ExtendedKeyManager) keyManager))\n                            .ciphers(sslFactory.getCiphers(), SupportedCipherSuiteFilter.INSTANCE)\n                            .protocols(sslFactory.getProtocols())\n                            .clientAuth(getClientAuth(sslFactory.getSslParameters()));\n                    sslFactory.getTrustManager().ifPresent(sslContextBuilder::trustManager);\n                    sslContextSpec.sslContext(sslContextBuilder);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }));\n        };\n    }\n\n    private KeyManager composeKeyManager(CompositeX509ExtendedKeyManager keyManager) {\n        return new CustomKeyManager(keyManager.getKeyManagers());\n    }\n\n    private void loadOtherCertificate(SSLFactory.Builder builder) throws IOException {\n        X509ExtendedKeyManager x509ExtendedKeyManager = PemUtils.loadIdentityMaterial(\n                getResource(&quot;classpath:ssl/ingress/server.pem&quot;),\n                getResource(&quot;classpath:ssl/ingress/server-key.pem&quot;));\n        X509ExtendedTrustManager x509ExtendedTrustManager = PemUtils.loadTrustMaterial(\n                getResource(&quot;classpath:ssl/ingress/ca.pem&quot;));\n        builder.withIdentityMaterial(x509ExtendedKeyManager)\n                .withTrustMaterial(x509ExtendedTrustManager);\n    }\n\n    private static ClientAuth getClientAuth(SSLParameters sslParameters) {\n        if (sslParameters.getNeedClientAuth()) {\n            return ClientAuth.REQUIRE;\n        } else if (sslParameters.getWantClientAuth()) {\n            return ClientAuth.OPTIONAL;\n        } else {\n            return ClientAuth.NONE;\n        }\n    }\n\n    private InputStream getResource(String path) throws IOException {\n        Resource resource = ResourceUtils.getResource(path);\n        return resource.getInputStream();\n    }\"><pre><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">WebServerFactoryCustomizer</span>&lt;<span class=\"pl-smi\">NettyReactiveWebServerFactory</span>&gt; <span class=\"pl-s1\">sslServerConsumer</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">factory</span> -&gt; {\n            <span class=\"pl-s1\">factory</span>.<span class=\"pl-en\">addServerCustomizers</span>(<span class=\"pl-s1\">httpServer</span> -&gt; <span class=\"pl-s1\">httpServer</span>.<span class=\"pl-en\">secure</span>(<span class=\"pl-s1\">sslContextSpec</span> -&gt; {\n                <span class=\"pl-k\">try</span> {\n                    <span class=\"pl-smi\">X509ExtendedKeyManager</span> <span class=\"pl-s1\">x509ExtendedKeyManager</span> = <span class=\"pl-s1\">PemUtils</span>.<span class=\"pl-en\">loadIdentityMaterial</span>(\n                            <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/default/server.pem\"</span>),\n                            <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/default/server-key.pem\"</span>));\n                    <span class=\"pl-smi\">X509ExtendedTrustManager</span> <span class=\"pl-s1\">x509ExtendedTrustManager</span> = <span class=\"pl-s1\">PemUtils</span>.<span class=\"pl-en\">loadTrustMaterial</span>(<span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/default/ca.pem\"</span>));\n                    <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">builder</span> = <span class=\"pl-c1\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n                            .<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">x509ExtendedKeyManager</span>)\n                            .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">x509ExtendedTrustManager</span>);\n                    <span class=\"pl-en\">loadOtherCertificate</span>(<span class=\"pl-s1\">builder</span>);\n                    <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">withProtocols</span>(<span class=\"pl-s\">\"TLSv1.2\"</span>);\n                    <span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">build</span>();\n                    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"ssl init success\"</span>);\n                    <span class=\"pl-smi\">X509ExtendedKeyManager</span> <span class=\"pl-s1\">keyManager</span> = <span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getKeyManager</span>()\n                            .<span class=\"pl-en\">orElseThrow</span>(<span class=\"pl-s1\">NullPointerException</span>::<span class=\"pl-k\">new</span>);\n                    <span class=\"pl-smi\">SslContextBuilder</span> <span class=\"pl-s1\">sslContextBuilder</span> = <span class=\"pl-s1\">SslContextBuilder</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-en\">composeKeyManager</span>((<span class=\"pl-smi\">CompositeX509ExtendedKeyManager</span>) <span class=\"pl-s1\">keyManager</span>))\n                            .<span class=\"pl-en\">ciphers</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getCiphers</span>(), <span class=\"pl-smi\">SupportedCipherSuiteFilter</span>.<span class=\"pl-c1\">INSTANCE</span>)\n                            .<span class=\"pl-en\">protocols</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getProtocols</span>())\n                            .<span class=\"pl-en\">clientAuth</span>(<span class=\"pl-en\">getClientAuth</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslParameters</span>()));\n                    <span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getTrustManager</span>().<span class=\"pl-en\">ifPresent</span>(<span class=\"pl-s1\">sslContextBuilder</span>::<span class=\"pl-s1\">trustManager</span>);\n                    <span class=\"pl-s1\">sslContextSpec</span>.<span class=\"pl-en\">sslContext</span>(<span class=\"pl-s1\">sslContextBuilder</span>);\n                } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> <span class=\"pl-s1\">e</span>) {\n                    <span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n                }\n            }));\n        };\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">KeyManager</span> <span class=\"pl-s1\">composeKeyManager</span>(<span class=\"pl-smi\">CompositeX509ExtendedKeyManager</span> <span class=\"pl-s1\">keyManager</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CustomKeyManager</span>(<span class=\"pl-s1\">keyManager</span>.<span class=\"pl-en\">getKeyManagers</span>());\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">loadOtherCertificate</span>(<span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">builder</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-c1\">IOException</span> {\n        <span class=\"pl-smi\">X509ExtendedKeyManager</span> <span class=\"pl-s1\">x509ExtendedKeyManager</span> = <span class=\"pl-s1\">PemUtils</span>.<span class=\"pl-en\">loadIdentityMaterial</span>(\n                <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/ingress/server.pem\"</span>),\n                <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/ingress/server-key.pem\"</span>));\n        <span class=\"pl-smi\">X509ExtendedTrustManager</span> <span class=\"pl-s1\">x509ExtendedTrustManager</span> = <span class=\"pl-s1\">PemUtils</span>.<span class=\"pl-en\">loadTrustMaterial</span>(\n                <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/ingress/ca.pem\"</span>));\n        <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">x509ExtendedKeyManager</span>)\n                .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">x509ExtendedTrustManager</span>);\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">ClientAuth</span> <span class=\"pl-s1\">getClientAuth</span>(<span class=\"pl-smi\">SSLParameters</span> <span class=\"pl-s1\">sslParameters</span>) {\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">sslParameters</span>.<span class=\"pl-en\">getNeedClientAuth</span>()) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ClientAuth</span>.<span class=\"pl-c1\">REQUIRE</span>;\n        } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">sslParameters</span>.<span class=\"pl-en\">getWantClientAuth</span>()) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ClientAuth</span>.<span class=\"pl-c1\">OPTIONAL</span>;\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ClientAuth</span>.<span class=\"pl-c1\">NONE</span>;\n        }\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">InputStream</span> <span class=\"pl-s1\">getResource</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">path</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-c1\">IOException</span> {\n        <span class=\"pl-smi\">Resource</span> <span class=\"pl-s1\">resource</span> = <span class=\"pl-s1\">ResourceUtils</span>.<span class=\"pl-en\">getResource</span>(<span class=\"pl-s1\">path</span>);\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">resource</span>.<span class=\"pl-en\">getInputStream</span>();\n    }</pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">When I input www.ingress.com.cn on the browser, the console printed www.gateway.com.cn, there is no other way to match the correct certificate, and the certificate displayed on my browser is www.gateway.com.cn, can you help me</code></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/42345796/143981896-eead48b3-10f3-4853-859d-46735fb2747b.png\"><img src=\"https://user-images.githubusercontent.com/42345796/143981896-eead48b3-10f3-4853-859d-46735fb2747b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/130","createdAt":"2021-11-30T03:42:01Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"ISSUE-113 Misleading NullPointerException when reading an encrypted P…","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/114","resourcePath":"/Hakky54/sslcontext-kickstart/pull/114","createdAt":"2021-08-29T04:35:36Z","number":114,"mergeCommit":{"oid":"f81b3d6b3e34b4b6ffb639dd39ad4ee14bbf1b8a","message":"Merge pull request #114 from chibenwa/ISSUE-113\n\nISSUE-113 Misleading NullPointerException when reading an encrypted P…","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/f81b3d6b3e34b4b6ffb639dd39ad4ee14bbf1b8a","parents":{"nodes":[{"oid":"20839a3cec0fd770e4b10ccaad83cf16722ebe6a","message":"Added separated hostname verifiers"},{"oid":"7030129e60ce2d3ba6faa5a1e7f37c17a6d8d715","message":"fixup! ISSUE-113 Misleading NullPointerException when reading an encrypted PEM key and none supplied"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/util/PemUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-pem/src/test/java/nl/altindag/ssl/util/PemUtilsShould.java"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/ValidationUtils.java"}},{"node":{"changeType":"ADDED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/ValidationUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIxODg2MDgyOjcwMzAxMjllNjBjZTJkM2JhNmZhYTVhMWU3ZjM3YzE3YTZkOGQ3MTU=","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/114/commits/7030129e60ce2d3ba6faa5a1e7f37c17a6d8d715"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":113,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/113","title":"Misleading NullPointerException when reading an encrypted PEM key and none supplied","bodyHTML":"<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">When an encrypted PEM private key is used without supplying a password, a null pointer exception is being returned.</p>\n<p dir=\"auto\">There is not way for the library user (an probably my end users too) to know the reason of this failure is that a password is required.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        &quot;certs.crt&quot;,\n                        &quot;encrypted.private.key&quot;,\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(&quot;TLS&quot;);\n            context.init(kmf.getKeyManagers(), null, null);\"><pre class=\"notranslate\"><code>            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        \"certs.crt\",\n                        \"encrypted.private.key\",\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(\"TLS\");\n            context.init(kmf.getKeyManagers(), null, null);\n</code></pre></div>\n<p dir=\"auto\">Results in :</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\"><pre class=\"notranslate\"><code>java.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">I expect a dedicated exception with an easy to understand message...</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java 11 (OpenJDK 11.0.11)</li>\n<li>Maven 3.6.3</li>\n<li>Ubuntu</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong></p>\n<p dir=\"auto\">I could end up using this library in a contribution to Apache James to not just support keystores but also PEM files.</p>\n<p dir=\"auto\">The ease of use is appealing though I need users to understand by themselves their mistakes before reaching the community (including I) and says stuff like \"your soft is not working there is a NPE\" without understanding the mistake is theirs...</p>\n<p dir=\"auto\">BTW I could fire a patch if my above proposal is deemed acceptable.</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/113","createdAt":"2021-08-28T12:58:24Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"fix #166. return the lowercase when generate alias.","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/167","resourcePath":"/Hakky54/sslcontext-kickstart/pull/167","createdAt":"2022-04-09T15:12:09Z","number":167,"mergeCommit":{"oid":"cf1bb50f8e2e3e9b605b1b61fc7ddd45d83c7f2c","message":"fix #166. return the lowercase when generate alias. (#167)","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/cf1bb50f8e2e3e9b605b1b61fc7ddd45d83c7f2c","parents":{"nodes":[{"oid":"5f31caee58ff401d45a185aed741256b6b6adc17","message":"Improved extracting server certificates"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/CertificateUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc418LuY2gAoMjEzZDIxYmJmZWE2NzczYzZjNDA1OTJhNGNhZmFkNWVkOTcyMDBhYw","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/167/commits/213d21bbfea6773c6c40592a4cafad5ed97200ac"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":166,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/166","title":"the alias of CertificateEntry","bodyHTML":"<p dir=\"auto\"><strong>Describe the bug</strong><br>\nHello, I am going to create an SSLContext with the following code, but the resulting SSLContext does not appear to be complete and its trustedCerts is empty.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    SSLFactory sslFactory = SSLFactory.builder()\n            .withTrustMaterial(CertificateUtils.loadCertificate(&quot;ca.crt&quot;))\n            .build();\n    SSLContext sslContext = sslFactory.getSslContext();\"><pre class=\"notranslate\"><code>    SSLFactory sslFactory = SSLFactory.builder()\n            .withTrustMaterial(CertificateUtils.loadCertificate(\"ca.crt\"))\n            .build();\n    SSLContext sslContext = sslFactory.getSslContext();\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162576830-7d25ba46-3dd8-459b-87bf-71e9d088f063.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162576830-7d25ba46-3dd8-459b-87bf-71e9d088f063.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">the content of ca.crt</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"-----BEGIN CERTIFICATE-----\nMIIFWTCCA0GgAwIBAgIUW4b6bPPPyRAm0DrDKKJJ8YlSqOkwDQYJKoZIhvcNAQEL\nBQAwPDE6MDgGA1UEAxMxRWxhc3RpY3NlYXJjaCBzZWN1cml0eSBhdXRvLWNvbmZp\nZ3VyYXRpb24gSFRUUCBDQTAeFw0yMjA0MDUxMjQ1MzVaFw0yNTA0MDQxMjQ1MzVa\nMDwxOjA4BgNVBAMTMUVsYXN0aWNzZWFyY2ggc2VjdXJpdHkgYXV0by1jb25maWd1\ncmF0aW9uIEhUVFAgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDB\nq3aR//NaqXBUqI0AVHuVWJmFMLYwpi/DQLUYifwOlGx4iAb6ePuiA8b7tXAGPn0z\nTWFQ82t0DZf/1nXoRmNJO8ardAVWcL7z+VDUY7Hab08GJzRRP/V5b7VL+J+WBQOG\nauN0cal3jM14k3FeZApyoL+XqmJ36MSY3WtAPfF3ySH1ltcMguXqN79k3Bxw0mGq\nAJt+z4q8Lq2e8vsMKKpSO1vZ0grvffj6MBni2stfZ4ifA6Kubh/yePShKsG/N8nY\nK6iJYjwLuVUQ1Eaw6X3s78c+eESTlzZiM6I7qTR1JzW5Fuyz/ZPbDcI1zg+p9H4g\nNRaX76Fv9XG/XehLeYxNoTBLytY2d9kdEmW9MIGCqaROabDdxygxcJ5l3aqkBTiA\ntq42vguuiQvpLndfGIEA4qh5AFyo+iqP1226+1onHfeXtbtyqjpHIV6RZa8RqNLg\nynmf96NzzHQq1CfKp5CgQB/l3yaAtFxguNyhKftHia518iTjcUpn9f3gmSzDlZy2\nKgzZMaw8GwdtT+qac3XCVI7vwjY21uEHbCEklh8ZycAt28Dc0h747MqG9A3xdMDV\nlf8iBtGjuxQNJSsOBRY6Up8ajEWeYvEqpKDHVHYxc78qdjGCzltgGIvjzah389mH\nUC458l4Ey4Lns4C7NVAteHva9L71CE/zDTwJ3nECqwIDAQABo1MwUTAdBgNVHQ4E\nFgQUphpsq/WD1QUsRkr9EQaGinawo9owHwYDVR0jBBgwFoAUphpsq/WD1QUsRkr9\nEQaGinawo9owDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAlg8X\nPnpSKIkt+a9imOFcddUgoNSCgwAyBuGdnUKTjuDnV2630O7cRky4Ly8gI3hxuV3j\nI0JHatPA4Xw8m/8rAkgoega4zCQ89L7w8g1b54NnvnMOQIKs4aQ7TsYQUgyGxj6j\nhhs1uLEBgF/uCJR1INZbiw4tjGTJssRSGMUsn7Mto0+3UL3AHqbmQY4IavRDEd2s\nzpyGN1acwh9jl50pcKjgM/UYhNgWvGQgOF7MP8+4BWXBn9O7ufdUt4n08yPFP5hn\nsOKrScnTCPIVn3uExcYDLDEuRDsQXfDvD03Bm6aFPC+qwr+W7k8WZPc7UW3vLzTg\nTPtvnFwTunD3Bzv14b+2BOQH+caOKVyjBn73HzXQ6Xp8KM6ef3+6RZTeomHhqAwr\nTG2vVsLzDhZiNjOE1Le3UeT4eAz7psgg+piouaXkY5FnVmMlNqWGkXfmvtMC8JzG\nuWGUtSV2plImhQMgfrF4wMhntiNQcHa0Fge0k4I4ajt/HD5Al4yMYCMzx7ocbZLg\nbTSDn+PuRt1NBZYC/Icz6L3CaSAVCMIEw145G/ytyu9annHs+hXSx+1ji3MHkF/g\nyE65FKuMXoHLhCdN9MoKFEDr6eLlY7l9HWbcfQGpePoX4L/g1nGMVQmssCChkH5r\nh5BvtLZEjAtAP6q1Al0phYV6eYQvLE8Dzbw0RQ0=\n-----END CERTIFICATE-----\n\"><pre class=\"notranslate\"><code>-----BEGIN CERTIFICATE-----\nMIIFWTCCA0GgAwIBAgIUW4b6bPPPyRAm0DrDKKJJ8YlSqOkwDQYJKoZIhvcNAQEL\nBQAwPDE6MDgGA1UEAxMxRWxhc3RpY3NlYXJjaCBzZWN1cml0eSBhdXRvLWNvbmZp\nZ3VyYXRpb24gSFRUUCBDQTAeFw0yMjA0MDUxMjQ1MzVaFw0yNTA0MDQxMjQ1MzVa\nMDwxOjA4BgNVBAMTMUVsYXN0aWNzZWFyY2ggc2VjdXJpdHkgYXV0by1jb25maWd1\ncmF0aW9uIEhUVFAgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDB\nq3aR//NaqXBUqI0AVHuVWJmFMLYwpi/DQLUYifwOlGx4iAb6ePuiA8b7tXAGPn0z\nTWFQ82t0DZf/1nXoRmNJO8ardAVWcL7z+VDUY7Hab08GJzRRP/V5b7VL+J+WBQOG\nauN0cal3jM14k3FeZApyoL+XqmJ36MSY3WtAPfF3ySH1ltcMguXqN79k3Bxw0mGq\nAJt+z4q8Lq2e8vsMKKpSO1vZ0grvffj6MBni2stfZ4ifA6Kubh/yePShKsG/N8nY\nK6iJYjwLuVUQ1Eaw6X3s78c+eESTlzZiM6I7qTR1JzW5Fuyz/ZPbDcI1zg+p9H4g\nNRaX76Fv9XG/XehLeYxNoTBLytY2d9kdEmW9MIGCqaROabDdxygxcJ5l3aqkBTiA\ntq42vguuiQvpLndfGIEA4qh5AFyo+iqP1226+1onHfeXtbtyqjpHIV6RZa8RqNLg\nynmf96NzzHQq1CfKp5CgQB/l3yaAtFxguNyhKftHia518iTjcUpn9f3gmSzDlZy2\nKgzZMaw8GwdtT+qac3XCVI7vwjY21uEHbCEklh8ZycAt28Dc0h747MqG9A3xdMDV\nlf8iBtGjuxQNJSsOBRY6Up8ajEWeYvEqpKDHVHYxc78qdjGCzltgGIvjzah389mH\nUC458l4Ey4Lns4C7NVAteHva9L71CE/zDTwJ3nECqwIDAQABo1MwUTAdBgNVHQ4E\nFgQUphpsq/WD1QUsRkr9EQaGinawo9owHwYDVR0jBBgwFoAUphpsq/WD1QUsRkr9\nEQaGinawo9owDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAlg8X\nPnpSKIkt+a9imOFcddUgoNSCgwAyBuGdnUKTjuDnV2630O7cRky4Ly8gI3hxuV3j\nI0JHatPA4Xw8m/8rAkgoega4zCQ89L7w8g1b54NnvnMOQIKs4aQ7TsYQUgyGxj6j\nhhs1uLEBgF/uCJR1INZbiw4tjGTJssRSGMUsn7Mto0+3UL3AHqbmQY4IavRDEd2s\nzpyGN1acwh9jl50pcKjgM/UYhNgWvGQgOF7MP8+4BWXBn9O7ufdUt4n08yPFP5hn\nsOKrScnTCPIVn3uExcYDLDEuRDsQXfDvD03Bm6aFPC+qwr+W7k8WZPc7UW3vLzTg\nTPtvnFwTunD3Bzv14b+2BOQH+caOKVyjBn73HzXQ6Xp8KM6ef3+6RZTeomHhqAwr\nTG2vVsLzDhZiNjOE1Le3UeT4eAz7psgg+piouaXkY5FnVmMlNqWGkXfmvtMC8JzG\nuWGUtSV2plImhQMgfrF4wMhntiNQcHa0Fge0k4I4ajt/HD5Al4yMYCMzx7ocbZLg\nbTSDn+PuRt1NBZYC/Icz6L3CaSAVCMIEw145G/ytyu9annHs+hXSx+1ji3MHkF/g\nyE65FKuMXoHLhCdN9MoKFEDr6eLlY7l9HWbcfQGpePoX4L/g1nGMVQmssCChkH5r\nh5BvtLZEjAtAP6q1Al0phYV6eYQvLE8Dzbw0RQ0=\n-----END CERTIFICATE-----\n\n</code></pre></div>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 1.8.0_202</li>\n<li>sslcontext-kickstart Version 7.3.0</li>\n<li>OS: Windows</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nI found out the cause of the problem, when create <code class=\"notranslate\">X509TrustManagerImpl</code>, its trustedCerts is already empty.<br>\n<code class=\"notranslate\">sun.security.ssl.X509TrustManagerImpl</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162578048-305fc97f-35df-478d-9435-5a862a44c77d.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578048-305fc97f-35df-478d-9435-5a862a44c77d.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">sun.security.validator.KeyStores.getTrustedCerts(KeyStore var0)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162578133-bcf42382-d41c-4ce1-8e55-82ab47e4029f.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578133-bcf42382-d41c-4ce1-8e55-82ab47e4029f.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">java.security.KeyStore.isCertificateEntry(String alias)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162578150-dee124a1-9604-4abe-adba-e99ea1e4e593.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578150-dee124a1-9604-4abe-adba-e99ea1e4e593.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">sun.security.pkcs12.PKCS12KeyStore.engineIsCertificateEntry(String var1)</code><br>\nthe entries keys has the capital letters, but the parameter <code class=\"notranslate\">var1</code> is lowercase letters<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162578285-e0fb121b-7e7d-4489-90cb-65824e5e2c92.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578285-e0fb121b-7e7d-4489-90cb-65824e5e2c92.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Can you consider changing alias to lowercase in the <code class=\"notranslate\">nl.altindag.ssl.util.KeyStoreUtils.createTrustStore(List&lt;T&gt; certificates)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162578511-a3e4cdd8-d670-4e57-a84e-dfe297d24178.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578511-a3e4cdd8-d670-4e57-a84e-dfe297d24178.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\nor <code class=\"notranslate\">nl.altindag.ssl.util.CertificateUtils.generateAlias(Certificate certificate)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/162578648-63ef2dc9-59c5-4203-bdb0-791952a5eb06.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578648-63ef2dc9-59c5-4203-bdb0-791952a5eb06.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/166","createdAt":"2022-04-09T14:35:40Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix parsing PEM on Android v28 and above","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/140","resourcePath":"/Hakky54/sslcontext-kickstart/pull/140","createdAt":"2022-01-31T10:33:58Z","number":140,"mergeCommit":{"oid":"94357bce4d429b7f53b2a4b975e09e10d2164125","message":"Fix parsing PEM on Android v28 and above (#140)","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/94357bce4d429b7f53b2a4b975e09e10d2164125","parents":{"nodes":[{"oid":"03500521c9ce3f900212e40b66c2f7a6371ac211","message":"Bumped dependencies"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/decryptor/PemDecryptor.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/decryptor/Pkcs8Decryptor.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/util/PemUtils.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc4x1BrZ2gAoY2NlYjBhMDI4OTIwNjYyZmJjNWVkYzI3OGY4OGY5ZWYyZmQxZjUzOQ","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/140/commits/cceb0a028920662fbc5edc278f88f9ef2fd1f539"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":139,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/139","title":"\"The BC provider no longer provides an implementation for KeyFactory.RSA.\"","bodyHTML":"<p dir=\"auto\"><strong>Describe the bug</strong><br>\nOn Android &gt;= Android 9/P (API 28) I get the following error in logcat:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"FATAL EXCEPTION: DefaultDispatcher-worker-1\n    Process: myapp, PID: 28762\n    nl.altindag.ssl.exception.PrivateKeyParseException: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:454)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0)\n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2)\n        at java.util.Optional.map(Optional.java:211)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224)\n        ...\n     Caused by: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:48)\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:452)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0) \n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2) \n        at java.util.Optional.map(Optional.java:211) \n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421) \n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334) \n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306) \n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232) \n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224) \n        ...\n     Caused by: java.security.NoSuchAlgorithmException: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:386)\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:336)\n        at java.security.KeyFactory.getInstance(KeyFactory.java:235)\n        at org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyFactory(Unknown Source:2)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getKeyFactory(Unknown Source:20)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:4)\"><pre class=\"notranslate\"><code>FATAL EXCEPTION: DefaultDispatcher-worker-1\n    Process: myapp, PID: 28762\n    nl.altindag.ssl.exception.PrivateKeyParseException: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:454)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0)\n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2)\n        at java.util.Optional.map(Optional.java:211)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224)\n        ...\n     Caused by: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:48)\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:452)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0) \n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2) \n        at java.util.Optional.map(Optional.java:211) \n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421) \n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334) \n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306) \n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232) \n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224) \n        ...\n     Caused by: java.security.NoSuchAlgorithmException: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:386)\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:336)\n        at java.security.KeyFactory.getInstance(KeyFactory.java:235)\n        at org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyFactory(Unknown Source:2)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getKeyFactory(Unknown Source:20)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:4)\n</code></pre></div>\n<p dir=\"auto\">The error links to this site: <a href=\"https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\" rel=\"nofollow\">https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html</a></p>\n<p dir=\"auto\">This is my code, how I use this library:</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// load private client cert\nval cert = javaClass.getResourceAsStream(&quot;/credentials/myCert.pem&quot;)\nval key = javaClass.getResourceAsStream(&quot;/credentials/myKey.pem&quot;)\nif (cert == null || key == null)\n    throw Exception(&quot;Private certificate or key missing.&quot;)\nval keyManager = PemUtils.loadIdentityMaterial(cert, key)\n\n// activate client ssl in fuel\nval sslFactory = SSLFactory.builder()\n    .withIdentityMaterial(keyManager)\n    .build()\nFuelManager.instance.socketFactory = sslFactory.sslSocketFactory\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> load private client cert</span>\n<span class=\"pl-k\">val</span> cert <span class=\"pl-k\">=</span> javaClass.getResourceAsStream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/credentials/myCert.pem<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> key <span class=\"pl-k\">=</span> javaClass.getResourceAsStream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/credentials/myKey.pem<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">if</span> (cert <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> key <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>)\n    <span class=\"pl-k\">throw</span> <span class=\"pl-en\">Exception</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Private certificate or key missing.<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> keyManager <span class=\"pl-k\">=</span> <span class=\"pl-en\">PemUtils</span>.loadIdentityMaterial(cert, key)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> activate client ssl in fuel</span>\n<span class=\"pl-k\">val</span> sslFactory <span class=\"pl-k\">=</span> <span class=\"pl-en\">SSLFactory</span>.builder()\n    .withIdentityMaterial(keyManager)\n    .build()\n<span class=\"pl-en\">FuelManager</span>.instance.socketFactory <span class=\"pl-k\">=</span> sslFactory.sslSocketFactory</pre></div>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Android &gt;= Android 9/P (API 28)</li>\n<li>io.github.hakky54:sslcontext-kickstart-for-pem:7.2.0</li>\n<li>I tested several emulators with different Android versions, and it works on devices &lt; API 28, and doesn't work on devices &gt;= API 28</li>\n</ul>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/139","createdAt":"2022-01-31T02:14:28Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Bug-Fix - continue validation counter party while having empty trust managers","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/182","resourcePath":"/Hakky54/sslcontext-kickstart/pull/182","createdAt":"2022-05-10T22:44:36Z","number":182,"mergeCommit":{"oid":"603fa41584c602a29039a3f6021173ccf62dd979","message":"Bug-Fix - continue validation counter party while having empty trust managers (#182)\n\n* Using only trust managers which have trusted certificates\r\n\r\n* Fixed test","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/603fa41584c602a29039a3f6021173ccf62dd979","parents":{"nodes":[{"oid":"99dbe00fcff5f0fd73458eede9aed1f63ec5622c","message":"Bump version.netty-handler from 4.1.76.Final to 4.1.77.Final (#180)\n\nBumps `version.netty-handler` from 4.1.76.Final to 4.1.77.Final.\r\n\r\nUpdates `netty-handler` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-resolver-dns` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-transport-native-epoll` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-codec-http2` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-transport-native-unix-common` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-resolver-dns-native-macos` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-buffer` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-codec` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-common` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-transport` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: io.netty:netty-handler\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-resolver-dns\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport-native-epoll\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-codec-http2\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport-native-unix-common\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-resolver-dns-native-macos\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-buffer\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-codec\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-common\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CombinableX509TrustManager.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc43m7oY2gAoYmI3NmZkMzQ2Yjc1N2E5NzNlNjNkYjBkYWY5NGM0ZWFiNTJkODdmMA","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/182/commits/bb76fd346b757a973e63db0daf94c4eab52d87f0"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":181,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/181","title":"CombinableX509TrustManager can't completed all trustManager's check","bodyHTML":"<p dir=\"auto\"><strong>Describe the bug</strong><br>\nHi, i found that CombinableX509TrustManager can't completed all trustManager's check, when some trustManager's trustdCerts is empty.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ElasticsearchTest {\n    @Test\n    public void test_connect_elasticsearch_server() throws IOException {\n        SSLFactory sslFactory = SSLFactory.builder()\n                .withSystemTrustMaterial()\n                .withTrustMaterial(CertificateUtils.loadCertificate(&quot;http_ca.crt&quot;))\n                .build();\n        BasicCredentialsProvider basicCredentialsProvider = new BasicCredentialsProvider();\n        basicCredentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(&quot;elastic&quot;, &quot;es123456&quot;));\n\n        RestClient restClient = RestClient.builder(new HttpHost(&quot;192.168.169.2&quot;, 39200, &quot;https&quot;))\n                .setHttpClientConfigCallback(httpAsyncClientBuilder -&gt; httpAsyncClientBuilder\n                        .setDefaultCredentialsProvider(basicCredentialsProvider)\n                        .setSSLContext(sslFactory.getSslContext())\n                        .setSSLHostnameVerifier(sslFactory.getHostnameVerifier())\n                )\n                .build();\n        RestClientTransport restClientTransport = new RestClientTransport(restClient, new JacksonJsonpMapper());\n        ElasticsearchClient elasticsearchClient = new ElasticsearchClient(restClientTransport);\n        IndicesResponse indices = elasticsearchClient.cat().indices();\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ElasticsearchTest</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test_connect_elasticsearch_server</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-c1\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n                .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">CertificateUtils</span>.<span class=\"pl-en\">loadCertificate</span>(<span class=\"pl-s\">\"http_ca.crt\"</span>))\n                .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">BasicCredentialsProvider</span> <span class=\"pl-s1\">basicCredentialsProvider</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BasicCredentialsProvider</span>();\n        <span class=\"pl-s1\">basicCredentialsProvider</span>.<span class=\"pl-en\">setCredentials</span>(<span class=\"pl-smi\">AuthScope</span>.<span class=\"pl-c1\">ANY</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UsernamePasswordCredentials</span>(<span class=\"pl-s\">\"elastic\"</span>, <span class=\"pl-s\">\"es123456\"</span>));\n\n        <span class=\"pl-smi\">RestClient</span> <span class=\"pl-s1\">restClient</span> = <span class=\"pl-s1\">RestClient</span>.<span class=\"pl-en\">builder</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpHost</span>(<span class=\"pl-s\">\"192.168.169.2\"</span>, <span class=\"pl-c1\">39200</span>, <span class=\"pl-s\">\"https\"</span>))\n                .<span class=\"pl-en\">setHttpClientConfigCallback</span>(<span class=\"pl-s1\">httpAsyncClientBuilder</span> -&gt; <span class=\"pl-s1\">httpAsyncClientBuilder</span>\n                        .<span class=\"pl-en\">setDefaultCredentialsProvider</span>(<span class=\"pl-s1\">basicCredentialsProvider</span>)\n                        .<span class=\"pl-en\">setSSLContext</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>())\n                        .<span class=\"pl-en\">setSSLHostnameVerifier</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getHostnameVerifier</span>())\n                )\n                .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">RestClientTransport</span> <span class=\"pl-s1\">restClientTransport</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RestClientTransport</span>(<span class=\"pl-s1\">restClient</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JacksonJsonpMapper</span>());\n        <span class=\"pl-smi\">ElasticsearchClient</span> <span class=\"pl-s1\">elasticsearchClient</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ElasticsearchClient</span>(<span class=\"pl-s1\">restClientTransport</span>);\n        <span class=\"pl-smi\">IndicesResponse</span> <span class=\"pl-s1\">indices</span> = <span class=\"pl-s1\">elasticsearchClient</span>.<span class=\"pl-en\">cat</span>().<span class=\"pl-en\">indices</span>();\n    }\n}</pre></div>\n<p dir=\"auto\">in withSystemTrustMaterial(), it would load Windows-ROOT keystore and Windows-MY keystore, but now my Windows-MY keystore certicate is empty.<br>\nin withTrustMaterial(CertificateUtils.loadCertificate(\"http_ca.crt\")), it would load the elasticsearch's certicate.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/167653717-e786ea91-e646-4e20-b1ac-9d96966ec06c.png\"><img src=\"https://user-images.githubusercontent.com/24501621/167653717-e786ea91-e646-4e20-b1ac-9d96966ec06c.png\" alt=\"trustmanagers\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">the error is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.&lt;init&gt;(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.&lt;init&gt;(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\"><pre class=\"notranslate\"><code>Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.&lt;init&gt;(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.&lt;init&gt;(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\n</code></pre></div>\n<p dir=\"auto\">I found in CombinableX509TrustManager will check all the TrustManager whether to support the current certificate chain. As a result of my second TrustManage from <code class=\"notranslate\">Windows-MY</code> trustCerts is empty, so when executing <code class=\"notranslate\">callBackConsumer.checkTrusted(trustManager);</code> method throws <code class=\"notranslate\">InvalidAlgorithmParameterException</code>, but my third TrustManager actually can trust the current certificate.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/24501621/167658297-bf6c3dc8-b8be-4ce8-ae21-7980beca928b.png\"><img src=\"https://user-images.githubusercontent.com/24501621/167658297-bf6c3dc8-b8be-4ce8-ae21-7980beca928b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Whether all exceptions can be caught in <code class=\"notranslate\">CombinableX509TrustManager.checkTrusted</code> so that all TrustManagers have a chance to be executed, or whether <code class=\"notranslate\">callBackConsumer.checkTrusted(trustManager);</code> is not executed when the <code class=\"notranslate\">trustCerts</code> of the <code class=\"notranslate\">trustManager</code> is empty.</p>\n<p dir=\"auto\">Although I could have avoided this problem in my example by removing <code class=\"notranslate\">.withSystemTrustMaterial()</code>, I think it's still possible that someone could load multiple TrustManagers at the same time, and the trustCerts of one of them might be empty.</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 1.8.0_321</li>\n<li>sslcontext-kickstart Version 7.4.2</li>\n<li>OS: Windows</li>\n</ul>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/181","createdAt":"2022-05-10T15:15:56Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Do not use CombineableTrustManager if UnsafeTrustManager is enabled","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/197","resourcePath":"/Hakky54/sslcontext-kickstart/pull/197","createdAt":"2022-07-07T05:46:05Z","number":197,"mergeCommit":{"oid":"5effabcf4399cb187cfbdc56ec15072b5e345222","message":"Do not use CombineableTrustManager if UnsafeTrustManager is enabled (#197)\n\n* Use UnsafeTrustManager as base trustmanager if enabled\r\n\r\n* Applied sonar recommendation","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/5effabcf4399cb187cfbdc56ec15072b5e345222","parents":{"nodes":[{"oid":"4c152e9339eb8c48fd24062e1215a5c22a0949a0","message":"Bump jetty-reactive-httpclient from 1.1.11 to 1.1.12 (#195)\n\nBumps [jetty-reactive-httpclient](https://github.com/jetty-project/jetty-reactive-httpclient) from 1.1.11 to 1.1.12.\r\n- [Release notes](https://github.com/jetty-project/jetty-reactive-httpclient/releases)\r\n- [Commits](https://github.com/jetty-project/jetty-reactive-httpclient/compare/1.1.11...1.1.12)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.jetty:jetty-reactive-httpclient\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CombinableX509TrustManager.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc46_dCA2gAoNDI3NDFlMWE1ZTM0MjE3ZmEzOGI3ZTExZTI0ZDlmMDE3NWUzNWJlMQ","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/197/commits/42741e1a5e34217fa38b7e11e24d9f0175e35be1"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":196,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/196","title":"Version 7.4.3 fails to accept all certificates","bodyHTML":"<p dir=\"auto\"><strong>Describe the bug</strong><br>\nIt seems that changes in version 7.4.3 skips accept-all truststore configured using<br>\n<code class=\"notranslate\">builder.withUnsafeTrustMaterial()</code> or <code class=\"notranslate\">builder.withTrustingAllCertificatesWithoutValidation()</code></p>\n<p dir=\"auto\">This is because UnsafeX509ExtendedTrustManager has 0 accepted X509Certificate<br>\ntherefore it is skipped during checking in CombinableX509TrustManager</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder builder = SSLFactory.builder().withDefaultTrustMaterial();\nbuilder.withUnsafeTrustMaterial();\nSSLFactory factory = builder.build();\n\nSSLContext sslContext = factory.getSslContext();\nSSLContext.setDefault(sslContext);\"><pre class=\"notranslate\"><code>SSLFactory.Builder builder = SSLFactory.builder().withDefaultTrustMaterial();\nbuilder.withUnsafeTrustMaterial();\nSSLFactory factory = builder.build();\n\nSSLContext sslContext = factory.getSslContext();\nSSLContext.setDefault(sslContext);\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nValidation of the TLS certificate should pass and connection should be established</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 11.0</li>\n<li>Gradle</li>\n<li>OS MacOS</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nThe test passes with 7.3.0 and 7.4.2</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/196","createdAt":"2022-07-04T14:51:36Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Adopt using system property based ssl configuration","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/165","resourcePath":"/Hakky54/sslcontext-kickstart/pull/165","createdAt":"2022-04-06T17:39:19Z","number":165,"mergeCommit":{"oid":"3fc5b0c7d7ccd9a5cca6fc0e195e40bb4dee266e","message":"Adopt using system property based ssl configuration (#165)\n\n* Added simplified ssl configuration based on system properties\r\n\r\n* Fixed sonar warnings\r\n\r\n* Added null validation\r\n\r\n* Fixed imports\r\n\r\n* Simplified extracting protocols\r\n\r\n* Added ciphers and updated documentation\r\n\r\n* Added ciphers and updated documentation\r\n\r\n* Removed duplicate code\r\n\r\n* Renamed methods, added additional validations and refactored a bit\r\n\r\n* Fixed documentation","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/3fc5b0c7d7ccd9a5cca6fc0e195e40bb4dee266e","parents":{"nodes":[{"oid":"9459c928aa3dde89f3adc2ab5fabed93639b4d55","message":"Improved test coverage"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"README.md"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/StringUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc41wBmL2gAoOGM5NzYzYzdlYTg3Y2E4NTdlMzc3ZDUyMWQyNTc1ODYwZThiOTg4ZQ","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/165/commits/8c9763c7ea87ca857e377d521d2575860e8b988e"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":161,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/161","title":"`SSLFactory.Builder.withDefaultIdentityMaterial` method","bodyHTML":"<p dir=\"auto\">When custom sslContext is created there is no easy way to load \"default\" keyManager<br>\n, although <code class=\"notranslate\">withDefaultTrustMaterial</code> allows it do so for trustManager.</p>\n<p dir=\"auto\">It would be nice to have <code class=\"notranslate\">withDefaultIdentityMaterial</code> method that would utilize default keyManager (<code class=\"notranslate\">javax.net.ssl.keyStore</code>)</p>\n<p dir=\"auto\">Documentation suggests to use</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\".withIdentityMaterial(Paths.get(System.getProperty(&quot;javax.net.ssl.keyStore&quot;)), System.getProperty(&quot;javax.net.ssl.keyStorePassword&quot;).toCharArray(), \nSystem.getProperty(&quot;javax.net.ssl.keyStoreType&quot;))\"><pre>.<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">Paths</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStore\"</span>)), <span class=\"pl-s1\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStorePassword\"</span>).<span class=\"pl-en\">toCharArray</span>(), \n<span class=\"pl-s1\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStoreType\"</span>))</pre></div>\n<p dir=\"auto\">which probably does the trick, but does not handle the cases when properties are not set. Helper method would do null checks and remove boilerplate code from users of SSLFactory.</p>\n<p dir=\"auto\">And Maybe there is a way to get a reference to internal keyManage. I haven't found one.</p>","resourcePath":"/Hakky54/sslcontext-kickstart/issues/161","createdAt":"2022-04-02T10:45:16Z","labels":{"edges":[{"node":{"name":"enhancement"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Support for loading android trusted certificates","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/203","resourcePath":"/Hakky54/sslcontext-kickstart/pull/203","createdAt":"2022-08-02T14:58:48Z","number":203,"mergeCommit":{"oid":"04d6c0331fae0c783eab3a4d59bc381b75cd9131","message":"Added AndroidCAStore to fetch when calling system key stores (#203)","commitUrl":"https://github.com/Hakky54/sslcontext-kickstart/commit/04d6c0331fae0c783eab3a4d59bc381b75cd9131","parents":{"nodes":[{"oid":"1e0d28ae54dd9c0158454ed8939e38b656041218","message":"Bump version.junit from 5.8.2 to 5.9.0 (#202)\n\nBumps `version.junit` from 5.8.2 to 5.9.0.\r\n\r\nUpdates `junit-jupiter-api` from 5.8.2 to 5.9.0\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.2...r5.9.0)\r\n\r\nUpdates `junit-jupiter-engine` from 5.8.2 to 5.9.0\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.2...r5.9.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.junit.jupiter:junit-jupiter-api\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-minor\r\n- dependency-name: org.junit.jupiter:junit-jupiter-engine\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"}},{"node":{"changeType":"MODIFIED","path":"sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADODcGqFc48gzKq2gAoZDIwNjBmOTE2YjViNDJmMzE2M2I2OGZmZjdjMTBhMzY5YjhmY2Q0NQ","url":"https://github.com/Hakky54/sslcontext-kickstart/pull/203/commits/d2060f916b5b42f3163b68fff7c10a369b8fcd45"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":194,"url":"https://github.com/Hakky54/sslcontext-kickstart/issues/194","title":"Support for Android keystore","bodyHTML":"","resourcePath":"/Hakky54/sslcontext-kickstart/issues/194","createdAt":"2022-06-24T14:33:32Z","labels":{"edges":[{"node":{"name":"no-activity"}}]}}}]}}}}]