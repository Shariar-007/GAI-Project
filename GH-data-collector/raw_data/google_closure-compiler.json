[
    {
        "repository": {
            "pullRequest": {
                "title": "Prevent inlining for \"super\" captures in RewriteAsyncFunctions",
                "url": "https://github.com/google/closure-compiler/pull/3047",
                "resourcePath": "/google/closure-compiler/pull/3047",
                "createdAt": "2018-08-07T12:32:58Z",
                "number": 3047,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/RewriteAsyncFunctions.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/RewriteAsyncFunctionsTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjA2NjgyMTM0OmFkZjFjZDg5MmVmYzA4MWNlNTg3ZjE3YjQzNGE3YTJmM2Q0MjkzZjg=",
                                "url": "https://github.com/google/closure-compiler/pull/3047/commits/adf1cd892efc081ce587f17b434a7a2f3d4293f8"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3015,
                                "url": "https://github.com/google/closure-compiler/issues/3015",
                                "title": "Super inside an async method does not produce valid ES2015 output",
                                "bodyHTML": "<p dir=\"auto\">Using a language out of <code class=\"notranslate\">ECMASCRIPT_2015</code>, the following code produces invalid output.</p>\n<p dir=\"auto\"><em>Original:</em></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class Foo {\n  async bar() {\n    console.log('bar');\n  }\n}\n\nclass Baz extends Foo {\n  async bar() {\n    await Promise.resolve();\n    super.bar();\n  }\n}\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Foo</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">async</span> <span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'bar'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Baz</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">Foo</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">async</span> <span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">super</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Compiled with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -jar compiler.jar -O=SIMPLE --language_out=ECMASCRIPT_2015 \\\n    --renaming=false --formatting=PRETTY_PRINT --js test.js\"><pre class=\"notranslate\"><code>java -jar compiler.jar -O=SIMPLE --language_out=ECMASCRIPT_2015 \\\n    --renaming=false --formatting=PRETTY_PRINT --js test.js\n</code></pre></div>\n<p dir=\"auto\"><em>Produces:</em></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Generator polyfills ...\nclass Foo {\n  bar() {\n    return $jscomp.asyncExecutePromiseGeneratorFunction(function*() {\n      console.log(&quot;bar&quot;);\n    });\n  }\n}\nclass Baz extends Foo {\n  bar() {\n    const $jscomp$async$this = this;\n    return $jscomp.asyncExecutePromiseGeneratorFunction(function*() {\n      yield Promise.resolve();\n      super.bar.call($jscomp$async$this); // super is not a valid keyword here\n    });\n  }\n}\"><pre><span class=\"pl-c\">// Generator polyfills ...</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Foo</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">$jscomp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">asyncExecutePromiseGeneratorFunction</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span><span class=\"pl-c1\">*</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"bar\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Baz</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">Foo</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">$jscomp$async$this</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">$jscomp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">asyncExecutePromiseGeneratorFunction</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span><span class=\"pl-c1\">*</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-k\">yield</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n      <span class=\"pl-smi\">super</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">bar</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">call</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$jscomp$async$this</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// super is not a valid keyword here</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>",
                                "resourcePath": "/google/closure-compiler/issues/3015",
                                "createdAt": "2018-07-08T23:30:07Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Support multiline ES6 import statements",
                "url": "https://github.com/google/closure-compiler/pull/3026",
                "resourcePath": "/google/closure-compiler/pull/3026",
                "createdAt": "2018-07-19T02:28:09Z",
                "number": 3026,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/deps/JsFileParser.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/deps/JsFileParserTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjAyNDI4OTU2OjBmYTM2MGJjNzM2MjU1OGRkNjgzZjM4YTQxMjc5NTZkNzIwYjZlZTY=",
                                "url": "https://github.com/google/closure-compiler/pull/3026/commits/0fa360bc7362558dd683f38a4127956d720b6ee6"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3025,
                                "url": "https://github.com/google/closure-compiler/issues/3025",
                                "title": "Support multiline ES6 `export ... from` syntax",
                                "bodyHTML": "<h3 dir=\"auto\">Description of problem</h3>\n<p dir=\"auto\">When parsing ES6 code of the form <code class=\"notranslate\">export ... from</code>, the compiler fails to generate the correct <code class=\"notranslate\">goog.require</code> statement.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Given the following files:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//greet.js\nexport default function greet(m) {\n    document.write(&quot;\\nHello, &quot; + m);\n};\"><pre><span class=\"pl-c\">//greet.js</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">greet</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">m</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">write</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"\\nHello, \"</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">m</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//hello.js\nexport {\n    default as helloGreet\n} from &quot;./greet&quot;;\"><pre><span class=\"pl-c\">//hello.js</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">default</span> <span class=\"pl-k\">as</span> <span class=\"pl-s1\">helloGreet</span>\n<span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">\"./greet\"</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Execute:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -jar $JAR -O BUNDLE --formatting PRETTY_PRINT --module_resolution NODE --js_output_file=/dev/stdout -W VERBOSE --debug --dependency_mode STRICT --entry_point hello.js greet.js hello.js | grep -A 11 -E 'greet|hello'\"><pre class=\"notranslate\"><code>java -jar $JAR -O BUNDLE --formatting PRETTY_PRINT --module_resolution NODE --js_output_file=/dev/stdout -W VERBOSE --debug --dependency_mode STRICT --entry_point hello.js greet.js hello.js | grep -A 11 -E 'greet|hello'\n</code></pre></div>\n<h3 dir=\"auto\">Expected outcome</h3>\n<p dir=\"auto\">Closure compiler should detect <code class=\"notranslate\">greet.js</code> as a dependency of <code class=\"notranslate\">hello.js</code> and output them both under strict dependency mode.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//greet.js\n$jscomp.registerAndLoadModule(function($$require, $$exports, $$module) {\n  &quot;use strict&quot;;\n  Object.defineProperties($$exports, {&quot;default&quot;:{enumerable:true, get:function() {\n    return greet;\n  }}});\n  function greet(m) {\n    document.write(&quot;\\nHello, &quot; + m);\n  }\n}, &quot;greet.js&quot;, []);\n\n//hello.js\n$jscomp.registerAndLoadModule(function($$require, $$exports, $$module) {\n  &quot;use strict&quot;;\n  Object.defineProperties($$exports, {helloGreet:{enumerable:true, get:function() {\n    return module$greet[&quot;default&quot;];\n  }}});\n  var module$greet = $$require(&quot;greet.js&quot;);\n}, &quot;hello.js&quot;, [&quot;greet.js&quot;]);\n\"><pre><span class=\"pl-c\">//greet.js</span>\n<span class=\"pl-s1\">$jscomp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerAndLoadModule</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$$require</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">$$exports</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">$$module</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s\">\"use strict\"</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">defineProperties</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$$exports</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-s\">\"default\"</span>:<span class=\"pl-kos\">{</span><span class=\"pl-c1\">enumerable</span>:<span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">get</span>:<span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">greet</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">function</span> <span class=\"pl-en\">greet</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">m</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">document</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">write</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"\\nHello, \"</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">m</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"greet.js\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">//hello.js</span>\n<span class=\"pl-s1\">$jscomp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerAndLoadModule</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$$require</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">$$exports</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">$$module</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s\">\"use strict\"</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">defineProperties</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$$exports</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">helloGreet</span>:<span class=\"pl-kos\">{</span><span class=\"pl-c1\">enumerable</span>:<span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">get</span>:<span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">module$greet</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"default\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">var</span> <span class=\"pl-s1\">module$greet</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">$$require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"greet.js\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"hello.js\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"greet.js\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">Actual outcome</h3>\n<p dir=\"auto\"><a href=\"/src/com/google/javascript/jscomp/deps/JsFileParser.java\"><code class=\"notranslate\">JsFileParser</code></a> fails compute the list of requires.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//hello.js\n$jscomp.registerAndLoadModule(function($$require, $$exports, $$module) {\n  &quot;use strict&quot;;\n  Object.defineProperties($$exports, {helloGreet:{enumerable:true, get:function() {\n    return module$greet[&quot;default&quot;];\n  }}});\n  var module$greet = $$require(&quot;greet.js&quot;);\n}, &quot;hello.js&quot;, [&quot;greet.js&quot;]);\n\"><pre><span class=\"pl-c\">//hello.js</span>\n<span class=\"pl-s1\">$jscomp</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">registerAndLoadModule</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$$require</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">$$exports</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">$$module</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s\">\"use strict\"</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-v\">Object</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">defineProperties</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">$$exports</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">helloGreet</span>:<span class=\"pl-kos\">{</span><span class=\"pl-c1\">enumerable</span>:<span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-en\">get</span>:<span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">module$greet</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">\"default\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">var</span> <span class=\"pl-s1\">module$greet</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">$$require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"greet.js\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"hello.js\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"greet.js\"</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">Workaround/patches</h3>\n<p dir=\"auto\">Condensing the export to a single line works around the issue but may be infeasible for third party libs (e.g. from NPM).</p>\n<p dir=\"auto\">Avoiding <code class=\"notranslate\">JsFileParser</code> also fixes the problem:</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"diff --git a/src/com/google/javascript/jscomp/CompilerInput.java b/src/com/google/javascript/jscomp/CompilerInput.java\nindex 62609562b..4e4d3e3dc 100644\n--- a/src/com/google/javascript/jscomp/CompilerInput.java\n+++ b/src/com/google/javascript/jscomp/CompilerInput.java\n@@ -285,7 +285,7 @@ public class CompilerInput extends DependencyInfo.Base implements SourceAst {\n \n     // If the code is a JsAst, then it was originally JS code, and is compatible with the\n     // regex-based parsing of JsFileParser.\n-    if (ast instanceof JsAst &amp;&amp; JsFileParser.isSupported()) {\n+    if (false &amp;&amp; ast instanceof JsAst &amp;&amp; JsFileParser.isSupported()) {\n       // Look at the source code.\n       // Note: it's OK to use getName() instead of\n       // getPathRelativeToClosureBase() here because we're not using\"><pre><span class=\"pl-c1\">diff --git a/src/com/google/javascript/jscomp/CompilerInput.java b/src/com/google/javascript/jscomp/CompilerInput.java</span>\nindex 62609562b..4e4d3e3dc 100644\n<span class=\"pl-md\">--- a/src/com/google/javascript/jscomp/CompilerInput.java</span>\n<span class=\"pl-mi1\">+++ b/src/com/google/javascript/jscomp/CompilerInput.java</span>\n<span class=\"pl-mdr\">@@ -285,7 +285,7 @@</span> public class CompilerInput extends DependencyInfo.Base implements SourceAst {\n \n     // If the code is a JsAst, then it was originally JS code, and is compatible with the\n     // regex-based parsing of JsFileParser.\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    if (ast instanceof JsAst &amp;&amp; JsFileParser.isSupported()) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    if (false &amp;&amp; ast instanceof JsAst &amp;&amp; JsFileParser.isSupported()) {</span>\n       // Look at the source code.\n       // Note: it's OK to use getName() instead of\n       // getPathRelativeToClosureBase() here because we're not using</pre></div>\n<h3 dir=\"auto\">Analysis</h3>\n<p dir=\"auto\">Due to the line parsing nature of <code class=\"notranslate\">JsFileParser</code>, it fails to look ahead when faced with a line that starts with export (or import) but doesn't contain a semicolon. In fact, under shortcut mode, it appears to halt the parser.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3025",
                                "createdAt": "2018-07-19T01:27:22Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Ignore cases where destructuring patterns are empty.",
                "url": "https://github.com/google/closure-compiler/pull/3107",
                "resourcePath": "/google/closure-compiler/pull/3107",
                "createdAt": "2018-10-13T01:28:53Z",
                "number": 3107,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/RescopeGlobalSymbols.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjIyNjE5MTY1Ojg5NWIyNzU5ODc0N2FjZTdjMzM2YzI4NjMzOTdlZTY2NDU5NTU5MjI=",
                                "url": "https://github.com/google/closure-compiler/pull/3107/commits/895b27598747ace7c336c2863397ee6645955922"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3106,
                                "url": "https://github.com/google/closure-compiler/issues/3106",
                                "title": "ES6 Out: Rescope Global Symbols Crash ",
                                "bodyHTML": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ERROR in closure-compiler: java.lang.RuntimeException: INTERNAL COMPILER ERROR.\nPlease report this problem.\n\nIndex: 0, Size: 0\n  Node(CONST): /Users/chad/git/platform-ux/projects/dashboard/node_modules/$banno/polymer/polymer-element.js:1:0\nconst { ElementMixin } = __webpack_require__(49);\n  Parent(SCRIPT): /Users/chad/git/platform-ux/projects/dashboard/node_modules/$banno/polymer/polymer-element.js:1:0\nconst { ElementMixin } = __webpack_require__(49);\n\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\tat com.google.javascript.jscomp.RescopeGlobalSymbols$RewriteScopeCallback.visitNameDeclaration(RescopeGlobalSymbols.java:379)\n\tat com.google.javascript.jscomp.RescopeGlobalSymbols$RewriteScopeCallback.shouldTraverse(RescopeGlobalSymbols.java:364)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:830)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseChildren(NodeTraversal.java:959)\n\tat com.google.javascript.jscomp.NodeTraversal.handleScript(NodeTraversal.java:797)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:822)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseChildren(NodeTraversal.java:959)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:843)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:331)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:341)\n\tat com.google.javascript.jscomp.RescopeGlobalSymbols.process(RescopeGlobalSymbols.java:179)\n\tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:308)\n\tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:230)\n\tat com.google.javascript.jscomp.Compiler.performOptimizations(Compiler.java:2452)\n\tat com.google.javascript.jscomp.Compiler$3.call(Compiler.java:832)\n\tat com.google.javascript.jscomp.Compiler$3.call(Compiler.java:828)\n\tat com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:102)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\t... 23 more\"><pre class=\"notranslate\"><code>ERROR in closure-compiler: java.lang.RuntimeException: INTERNAL COMPILER ERROR.\nPlease report this problem.\n\nIndex: 0, Size: 0\n  Node(CONST): /Users/chad/git/platform-ux/projects/dashboard/node_modules/$banno/polymer/polymer-element.js:1:0\nconst { ElementMixin } = __webpack_require__(49);\n  Parent(SCRIPT): /Users/chad/git/platform-ux/projects/dashboard/node_modules/$banno/polymer/polymer-element.js:1:0\nconst { ElementMixin } = __webpack_require__(49);\n\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\n\tat java.util.ArrayList.get(ArrayList.java:433)\n\tat com.google.javascript.jscomp.RescopeGlobalSymbols$RewriteScopeCallback.visitNameDeclaration(RescopeGlobalSymbols.java:379)\n\tat com.google.javascript.jscomp.RescopeGlobalSymbols$RewriteScopeCallback.shouldTraverse(RescopeGlobalSymbols.java:364)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:830)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseChildren(NodeTraversal.java:959)\n\tat com.google.javascript.jscomp.NodeTraversal.handleScript(NodeTraversal.java:797)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:822)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseChildren(NodeTraversal.java:959)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:843)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:331)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:341)\n\tat com.google.javascript.jscomp.RescopeGlobalSymbols.process(RescopeGlobalSymbols.java:179)\n\tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:308)\n\tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:230)\n\tat com.google.javascript.jscomp.Compiler.performOptimizations(Compiler.java:2452)\n\tat com.google.javascript.jscomp.Compiler$3.call(Compiler.java:832)\n\tat com.google.javascript.jscomp.Compiler$3.call(Compiler.java:828)\n\tat com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:102)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\n\t... 23 more\n</code></pre></div>\n<p dir=\"auto\">Stepping through the code, the nodes go:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"CONST\n   DESTRUCTURING_LHS\n      OBJECT_PATTERN // this node has no children\"><pre class=\"notranslate\"><code>CONST\n   DESTRUCTURING_LHS\n      OBJECT_PATTERN // this node has no children\n</code></pre></div>\n<p dir=\"auto\">I haven't figured out <em>why</em> the destructured pattern has no children.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3106",
                                "createdAt": "2018-10-12T14:28:54Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "bug" } },
                                        { "node": { "name": "ES6" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Ensure that the error constants in MediaError are correctly annotated",
                "url": "https://github.com/google/closure-compiler/pull/3290",
                "resourcePath": "/google/closure-compiler/pull/3290",
                "createdAt": "2019-03-23T09:24:27Z",
                "number": 3290,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/html5.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjYzODIxMTM4OjgzNTVlODA4YzQ2ZDFkOGE5Y2E4OTk0OTU0OTE5ZTQ5ZGVlZjU2ZTk=",
                                "url": "https://github.com/google/closure-compiler/pull/3290/commits/8355e808c46d1d8a9ca8994954919e49deef56e9"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 71,
                                "url": "https://github.com/google/elemental2/issues/71",
                                "title": "MediaError static fields uses Doubles and does not have defined constants",
                                "bodyHTML": "<p dir=\"auto\">We cannot switch on MediaError as it has doubles for the static fields, instead of ints.</p>\n<p dir=\"auto\">Also the actual values are not assigned as constants, which also means it cannot be used in a switch statement.</p>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaError\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaError</a></p>",
                                "resourcePath": "/google/elemental2/issues/71",
                                "createdAt": "2018-12-04T21:50:12Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        {
                                            "node": {
                                                "name": "good first issue"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Only mark a module as CommonJS when an export statement is encountered",
                "url": "https://github.com/google/closure-compiler/pull/3332",
                "resourcePath": "/google/closure-compiler/pull/3332",
                "createdAt": "2019-04-13T12:18:22Z",
                "number": 3332,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/GatherModuleMetadata.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjcwMjIyNTUwOjg2ZDczMmFiNWZmNGYzYjA3ODE4MGJhNDcwYmNlMGNhOWQxZjNiNGI=",
                                "url": "https://github.com/google/closure-compiler/pull/3332/commits/86d732ab5ff4f3b078180ba470bce0ca9d1f3b4b"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3324,
                                "url": "https://github.com/google/closure-compiler/issues/3324",
                                "title": "Error: Modules now detected as both CommonJS and ES6",
                                "bodyHTML": "<p dir=\"auto\">As of the latest release, my projects are getting multiple errors such as:</p>\n<p dir=\"auto\"><code class=\"notranslate\">A file cannot be both a CommonJS module and an ES6 module.</code></p>\n<p dir=\"auto\">git bisect points to <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/closure-compiler/commit/0393c80ca01b6b861376dad7f91043a38bb37dc0/hovercard\" href=\"https://github.com/google/closure-compiler/commit/0393c80ca01b6b861376dad7f91043a38bb37dc0\"><tt>0393c80</tt></a></p>",
                                "resourcePath": "/google/closure-compiler/issues/3324",
                                "createdAt": "2019-04-09T12:09:51Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "triage-done" } },
                                        {
                                            "node": {
                                                "name": "internal-issue-created"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Update Window.prototype.scrollTo extern to accept dictionary options",
                "url": "https://github.com/google/closure-compiler/pull/3373",
                "resourcePath": "/google/closure-compiler/pull/3373",
                "createdAt": "2019-05-11T10:24:16Z",
                "number": 3373,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_css.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc3OTcxMjIyOjhjMzc4NmUzMTQ1OTkzOWZjZGRlYzQyMDU4OTc2NzAzYzM2N2E3MzY=",
                                "url": "https://github.com/google/closure-compiler/pull/3373/commits/8c3786e31459939fcddec42058976703c367a736"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3371,
                                "url": "https://github.com/google/closure-compiler/issues/3371",
                                "title": "Update window.scroll signature to accept an options object",
                                "bodyHTML": "<p dir=\"auto\">There is an alternative way of using <code class=\"notranslate\">window.scroll</code> (and <code class=\"notranslate\">window.scrollTo</code>) that allows to pass an object instead of the x and y coordinates.</p>\n<p dir=\"auto\">See the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/scroll\" rel=\"nofollow\">MDN docs</a> for reference.</p>\n<p dir=\"auto\">A change in the externs is needed around these lines:</p>\n<p dir=\"auto\"><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/closure-compiler/blob/964833f1af60a733cc6821f6c0737ac18fba9339/externs/browser/w3c_css.js#L2099-L2113\">closure-compiler/externs/browser/w3c_css.js</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 2099 to 2113\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/closure-compiler/commit/964833f1af60a733cc6821f6c0737ac18fba9339\">964833f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2099\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2099\"></td>\n          <td id=\"LC2099\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/**</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2100\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2100\"></td>\n          <td id=\"LC2100\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> {<span class=\"pl-smi\">number</span>} x</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2101\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2101\"></td>\n          <td id=\"LC2101\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> {<span class=\"pl-smi\">number</span>} y</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2102\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2102\"></td>\n          <td id=\"LC2102\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@see</span> http://www.w3.org/TR/cssom-view/#dom-window-scroll</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2103\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2103\"></td>\n          <td id=\"LC2103\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@return</span> {<span class=\"pl-smi\">undefined</span>}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2104\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2104\"></td>\n          <td id=\"LC2104\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2105\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2105\"></td>\n          <td id=\"LC2105\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-v\">Window</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">scroll</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">y</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2106\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2106\"></td>\n          <td id=\"LC2106\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2107\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2107\"></td>\n          <td id=\"LC2107\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/**</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2108\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2108\"></td>\n          <td id=\"LC2108\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> {<span class=\"pl-smi\">number</span>} x</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2109\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2109\"></td>\n          <td id=\"LC2109\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@param</span> {<span class=\"pl-smi\">number</span>} y</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2110\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2110\"></td>\n          <td id=\"LC2110\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@see</span> http://www.w3.org/TR/cssom-view/#dom-window-scrollto</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2111\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2111\"></td>\n          <td id=\"LC2111\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> * <span class=\"pl-k\">@return</span> {<span class=\"pl-smi\">undefined</span>}</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2112\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2112\"></td>\n          <td id=\"LC2112\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"> */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2113\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2113\"></td>\n          <td id=\"LC2113\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-v\">Window</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">scrollTo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">y</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">I'd be happy to help with a PR, if given some assistance in writing the externs correctly.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3371",
                                "createdAt": "2019-05-10T05:04:37Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "triage-done" } },
                                        {
                                            "node": {
                                                "name": "internal-issue-created"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix printing of comma operators in object literals.",
                "url": "https://github.com/google/closure-compiler/pull/3359",
                "resourcePath": "/google/closure-compiler/pull/3359",
                "createdAt": "2019-05-03T15:50:02Z",
                "number": 3359,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CodeGenerator.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/CodePrinterTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc1NzYxNDg0OmJkM2ExZTcxMTgwNjBkYzE1YTNhNzhkMWNjZTQxOTJlZTkzZjc1N2M=",
                                "url": "https://github.com/google/closure-compiler/pull/3359/commits/bd3a1e7118060dc15a3a78d1cce4192ee93f757c"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3358,
                                "url": "https://github.com/google/closure-compiler/issues/3358",
                                "title": "Comma operator is not correctly wrapped in () in object literals (computed keys and values)",
                                "bodyHTML": "<p dir=\"auto\">Comma operators in the computed keys or in the values of an object literal are not correctly printed back to JavaScript source. They miss appropriate surrounding parentheses, causing <code class=\"notranslate\">ParseError</code>s. This happens even in whitespace-only mode.</p>\n<p dir=\"auto\">Reproduction:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// ==ClosureCompiler==\n// @compilation_level WHITESPACE_ONLY\n// @output_file_name default.js\n// @language_out ECMASCRIPT_2015\n// @formatting pretty_print\n// ==/ClosureCompiler==\n\nfunction foo() {\n  let array = [];\n  const x = {\n    [(array.push(1), &quot;foo&quot;)]: (array.push(2), 3),\n    [(array.push(3), &quot;bar&quot;)]: (array.push(4), &quot;foobar&quot;)\n  };\n  console.log(array);\n  console.log(x);\n}\n\nfoo(); foo();\"><pre><span class=\"pl-c\">// ==ClosureCompiler==</span>\n<span class=\"pl-c\">// <span class=\"pl-k\">@compilation_level</span> WHITESPACE_ONLY</span>\n<span class=\"pl-c\">// <span class=\"pl-k\">@output_file_name</span> default.js</span>\n<span class=\"pl-c\">// <span class=\"pl-k\">@language_out</span> ECMASCRIPT_2015</span>\n<span class=\"pl-c\">// <span class=\"pl-k\">@formatting</span> pretty_print</span>\n<span class=\"pl-c\">// ==/ClosureCompiler==</span>\n\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">array</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">x</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-kos\">[</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"foo\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">[</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"bar\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span>: <span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"foobar\"</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">is compiled with the above options as:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"'use strict';\nfunction foo() {\n  let array = [];\n  const x = {[array.push(1), &quot;foo&quot;]:array.push(2), 3, [array.push(3), &quot;bar&quot;]:array.push(4), &quot;foobar&quot;};\n  console.log(array);\n  console.log(x);\n}\nfoo();\nfoo();\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">array</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">x</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"foo\"</span><span class=\"pl-kos\">]</span>:<span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"bar\"</span><span class=\"pl-kos\">]</span>:<span class=\"pl-s1\">array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">\"foobar\"</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">array</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">foo</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\"><a href=\"https://closure-compiler.appspot.com/home#code%3D%252F%252F%2520%253D%253DClosureCompiler%253D%253D%250A%252F%252F%2520%2540compilation_level%2520WHITESPACE_ONLY%250A%252F%252F%2520%2540output_file_name%2520default.js%250A%252F%252F%2520%2540language_out%2520ECMASCRIPT_2015%250A%252F%252F%2520%2540formatting%2520pretty_print%250A%252F%252F%2520%253D%253D%252FClosureCompiler%253D%253D%250A%250Afunction%2520foo()%2520%257B%250A%2520%2520let%2520array%2520%253D%2520%255B%255D%253B%250A%2520%2520const%2520x%2520%253D%2520%257B%250A%2520%2520%2520%2520%255B(array.push(1)%252C%2520%2522foo%2522)%255D%253A%2520(array.push(2)%252C%25203)%252C%250A%2520%2520%2520%2520%255B(array.push(3)%252C%2520%2522bar%2522)%255D%253A%2520(array.push(4)%252C%2520%2522foobar%2522)%250A%2520%2520%257D%253B%250A%2520%2520console.log(array)%253B%250A%2520%2520console.log(x)%253B%250A%257D%250A%250Afoo()%253B%2520foo()%253B%250A\" rel=\"nofollow\">Appspot link</a></p>\n<p dir=\"auto\">Note the following problems:</p>\n<ul dir=\"auto\">\n<li>In a computed key: <code class=\"notranslate\">[array.push(1), \"foo\"]</code> should be <code class=\"notranslate\">[(array.push(1), \"foo\")]</code></li>\n<li>In a value: <code class=\"notranslate\">array.push(2), 3</code> should be <code class=\"notranslate\">(array.push(2), 3)</code></li>\n</ul>\n<p dir=\"auto\">The problem can be reproduced</p>\n<ul dir=\"auto\">\n<li>with or without pretty-printing,</li>\n<li>in WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS and ADVANCED_OPTIMIZATIONS,</li>\n<li>tested with version v20190415</li>\n</ul>",
                                "resourcePath": "/google/closure-compiler/issues/3358",
                                "createdAt": "2019-05-03T11:16:48Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "triage-done" } },
                                        {
                                            "node": {
                                                "name": "internal-issue-created"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Move Node.prototype.insertAdjacentElement from ie_dom.js to html5.js",
                "url": "https://github.com/google/closure-compiler/pull/3383",
                "resourcePath": "/google/closure-compiler/pull/3383",
                "createdAt": "2019-05-14T23:38:01Z",
                "number": 3383,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/html5.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/ie_dom.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc4ODg4MDY2OjljNmMyY2JmNGIxOWNhZTY0N2MwOTEyOTczNzMyYjM5ODNiNWRiMzc=",
                                "url": "https://github.com/google/closure-compiler/pull/3383/commits/9c6c2cbf4b19cae647c0912973732b3983b5db37"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 2715,
                                "url": "https://github.com/google/closure-compiler/issues/2715",
                                "title": "Element externs missing insertAdjacentElement/Text",
                                "bodyHTML": "<p dir=\"auto\">insert-adjacent is supported by all evergreen browsers, and should be included in the browser externs (needed for a j2cl project)</p>\n<p dir=\"auto\"><a href=\"https://caniuse.com/#feat=insert-adjacent\" rel=\"nofollow\">https://caniuse.com/#feat=insert-adjacent</a></p>\n<p dir=\"auto\">If project owners are okay with inclusion, I can submit a pull request (not sure which dom file to best put it in).</p>\n<p dir=\"auto\">It would technically be nice to have outerHTML as well, but I'll ask for one thing at a time ^_^</p>",
                                "resourcePath": "/google/closure-compiler/issues/2715",
                                "createdAt": "2017-11-13T10:00:03Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Move Element.prototype.id to w3c_dom1.js",
                "url": "https://github.com/google/closure-compiler/pull/3394",
                "resourcePath": "/google/closure-compiler/pull/3394",
                "createdAt": "2019-05-21T06:58:15Z",
                "number": 3394,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "contrib/externs/svg.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/gecko_dom.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_dom1.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_dom2.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjgwNjQ2NjYzOjc5M2IxNGQyODIxOTk3MzY4MzJhY2Q1ZGUzNTUzNzE1NTQ2ZGNkMmM=",
                                "url": "https://github.com/google/closure-compiler/pull/3394/commits/793b14d282199736832acd5de3553715546dcd2c"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 38,
                                "url": "https://github.com/google/elemental2/issues/38",
                                "title": "Element.id incorrectly declared in HTMLElement",
                                "bodyHTML": "<p dir=\"auto\">Version: 1.0.0-RC1</p>\n<p dir=\"auto\"><code class=\"notranslate\">HTMLElement</code> should inherit <code class=\"notranslate\">id</code> from <code class=\"notranslate\">Element</code>. In Closure externs, <code class=\"notranslate\">Element.id</code> is found at <a href=\"https://github.com/google/closure-compiler/blob/15e8c339cb9d6d88ca16181c529f809b233f077f/externs/browser/gecko_dom.js#L749-L756\">gecko_dom.js:756</a>, <code class=\"notranslate\">HTMLElement.id</code> is found at <a href=\"https://github.com/google/closure-compiler/blob/15e8c339cb9d6d88ca16181c529f809b233f077f/externs/browser/w3c_dom2.js#L411-L416\">w3c_dom2.js:416</a>.</p>\n<p dir=\"auto\">Comments in gecko_dom suggest that <code class=\"notranslate\">id</code> is defined on <code class=\"notranslate\">HTMLElement</code> and <code class=\"notranslate\">SVGElement</code> separately, but this is <a href=\"https://dom.spec.whatwg.org/index.html#interface-element\" rel=\"nofollow\">no longer true</a>.</p>",
                                "resourcePath": "/google/elemental2/issues/38",
                                "createdAt": "2018-02-14T08:42:49Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        {
                                            "node": {
                                                "name": "Extern files cleanup"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "[FIX] Element.hasPointerCapture is not supported",
                "url": "https://github.com/google/closure-compiler/pull/3446",
                "resourcePath": "/google/closure-compiler/pull/3446",
                "createdAt": "2019-07-30T09:05:18Z",
                "number": 3446,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_pointer_events.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzAyNDAwMTgyOmIzZmMxOWE4MDhlOWRkZjNlNGZmMjBlM2JkNDU5NGRiYmQ2N2E0ZGM=",
                                "url": "https://github.com/google/closure-compiler/pull/3446/commits/b3fc19a808e9ddf3e4ff20e3bd4594dbbd67a4dc"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3445,
                                "url": "https://github.com/google/closure-compiler/issues/3445",
                                "title": "Element.hasPointerCapture is not supported",
                                "bodyHTML": "<p dir=\"auto\">The function <code class=\"notranslate\">Element.hasPointerCapture()</code> is currently not supported.</p>\n<p dir=\"auto\">Relevant links:<br>\n<a href=\"https://www.w3.org/TR/pointerevents/#dom-element-haspointercapture\" rel=\"nofollow\">https://www.w3.org/TR/pointerevents/#dom-element-haspointercapture</a><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/hasPointerCapture\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Element/hasPointerCapture</a></p>",
                                "resourcePath": "/google/closure-compiler/issues/3445",
                                "createdAt": "2019-07-30T09:01:18Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Stop issuing global this warning for function with this type annotation",
                "url": "https://github.com/google/closure-compiler/pull/3402",
                "resourcePath": "/google/closure-compiler/pull/3402",
                "createdAt": "2019-05-24T06:50:47Z",
                "number": 3402,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CheckGlobalThis.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/CheckGlobalThisTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjgxODg4MzgyOjgwMThlMzllNjk0NWM1YjNjODE4MDdiNGJkODE4NjZhMjFhMmNlOWU=",
                                "url": "https://github.com/google/closure-compiler/pull/3402/commits/8018e39e6945c5b3c81807b4bd81866a21a2ce9e"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3343,
                                "url": "https://github.com/google/closure-compiler/issues/3343",
                                "title": "dangerous use of the global this object when function's type was annotated",
                                "bodyHTML": "<p dir=\"auto\">I'm trying to make the function to have <code class=\"notranslate\">this</code> by defining it in its type.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/**\n * @type {function(this:{hello:string})}\n */\nfunction test() {\n  console.log(this.hello)\n}\n\ntest.call({ hello: 'world' })\"><pre><span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@type</span> {function(this:{hello:string})}</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hello</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">call</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">hello</span>: <span class=\"pl-s\">'world'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">However, I get an error. Is this meant to happen despite me giving the hint as to what <code class=\"notranslate\">this</code> is going to be ?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"t/this.js:5: WARNING - dangerous use of the global this object\n  console.log(this.hello)\n              ^^^^\n\n0 error(s), 1 warning(s), 100.0% typed\"><pre class=\"notranslate\"><code>t/this.js:5: WARNING - dangerous use of the global this object\n  console.log(this.hello)\n              ^^^^\n\n0 error(s), 1 warning(s), 100.0% typed\n</code></pre></div>\n<p dir=\"auto\">Basically my function must adhere to an interface but can have a custom <code class=\"notranslate\">this</code>. When i define it like</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/**\n * @this {{hello:string}}\n * @type {_functionInterface}\n */\nfunction test() {\n  console.log(this.hello)\n}\"><pre><span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@this</span> {{hello:string}}</span>\n<span class=\"pl-c\"> * <span class=\"pl-k\">@type</span> {_functionInterface}</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">hello</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">I get another error because the annotations are incompatible (can't use 2 together). Just have to suppress the <code class=\"notranslate\">globalThis</code> for now.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3343",
                                "createdAt": "2019-04-20T06:51:27Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        { "node": { "name": "triage-done" } },
                                        {
                                            "node": {
                                                "name": "internal-issue-created"
                                            }
                                        },
                                        {
                                            "node": {
                                                "name": "good first issue"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Allow recursive union type definitions",
                "url": "https://github.com/google/closure-compiler/pull/3431",
                "resourcePath": "/google/closure-compiler/pull/3431",
                "createdAt": "2019-07-14T13:37:21Z",
                "number": 3431,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom-main-shaded.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom-main-unshaded.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom-main.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/TypeInference.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/rhino/jstype/ModificationVisitor.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/rhino/jstype/TemplatizedType.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/rhino/jstype/UnionType.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/TypeCheckTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjk3Mzk2NzkyOjJkZDE4MGY0ZjU5Y2M2N2ZmYzI2NGNiNzgyNjhmMmMzZGQyZDBhMDQ=",
                                "url": "https://github.com/google/closure-compiler/pull/3431/commits/2dd180f4f59cc67ffc264cb78268f2c3dd2d0a04"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3027,
                                "url": "https://github.com/google/closure-compiler/issues/3027",
                                "title": "Stack overflow when using recursive type in combination with Array.prototype.map",
                                "bodyHTML": "<p dir=\"auto\">I get a stack overflow error when using a recursive type with Array.prototype.map.</p>\n<p dir=\"auto\">If I replace the .map call with a loop that builds up the args in the <code class=\"notranslate\">makeJsFunctionCall</code> function below, then the error goes away.</p>\n<p dir=\"auto\">Tested locally and with appspot.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @output_file_name default.js\n// ==/ClosureCompiler==\n\n/**\n * @typedef {(string|number|boolean|null)}\n**/\nvar JsonPrimitiveType;\n\n/**\n * @typedef {Object&lt;string,JsonType&gt;!}\n**/\nvar JsonObjectType;\n\n/**\n * @typedef {Array&lt;JsonType&gt;!}\n**/\nvar JsonArrayType;\n\n/**\n * @typedef {(JsonPrimitiveType|JsonObjectType|JsonArrayType)}\n**/\nvar JsonType;\n\n/**\n * @param {string} func\n * @param {Array&lt;JsonType&gt;!} args\n * @return {string}\n**/\nfunction makeJsFunctionCall (func, args) {\n\tvar inner = args.map(function (x) { return JSON.stringify(x); });\n\treturn func + &quot;(&quot; + inner.join(&quot;, &quot;) + &quot;)&quot;;\n}\"><pre class=\"notranslate\"><code>// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @output_file_name default.js\n// ==/ClosureCompiler==\n\n/**\n * @typedef {(string|number|boolean|null)}\n**/\nvar JsonPrimitiveType;\n\n/**\n * @typedef {Object&lt;string,JsonType&gt;!}\n**/\nvar JsonObjectType;\n\n/**\n * @typedef {Array&lt;JsonType&gt;!}\n**/\nvar JsonArrayType;\n\n/**\n * @typedef {(JsonPrimitiveType|JsonObjectType|JsonArrayType)}\n**/\nvar JsonType;\n\n/**\n * @param {string} func\n * @param {Array&lt;JsonType&gt;!} args\n * @return {string}\n**/\nfunction makeJsFunctionCall (func, args) {\n\tvar inner = args.map(function (x) { return JSON.stringify(x); });\n\treturn func + \"(\" + inner.join(\", \") + \")\";\n}\n</code></pre></div>\n<p dir=\"auto\">It produces this error:</p>\n<p dir=\"auto\">23: java.lang.StackOverflowError<br>\nat com.google.javascript.rhino.jstype.UnknownType.isSubtype(UnknownType.java:121)<br>\nat com.google.javascript.rhino.jstype.UnknownType.isSubtype(UnknownType.java:115)<br>\nat com.google.javascript.rhino.jstype.JSType.isSubtypeOf(JSType.java:1748)<br>\nat com.google.javascript.jscomp.TypeInference.maybeResolveTemplatedType(TypeInference.java:1483)<br>\nat com.google.javascript.jscomp.TypeInference.maybeResolveTemplatedType(TypeInference.java:1432)<br>\nat com.google.javascript.jscomp.TypeInference.maybeResolveTemplatedType(TypeInference.java:1492)<br>\n... many lines removed ...</p>",
                                "resourcePath": "/google/closure-compiler/issues/3027",
                                "createdAt": "2018-07-19T21:20:07Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Move the standardized focus management APIs to html5.js",
                "url": "https://github.com/google/closure-compiler/pull/3393",
                "resourcePath": "/google/closure-compiler/pull/3393",
                "createdAt": "2019-05-21T06:47:46Z",
                "number": 3393,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/gecko_dom.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/html5.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/ie_dom.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjgwNjQzODg1OjVjMGMwMTJjNjdhZDBjYmRlODVmZjkyZGRlOTRhZTQ2MTAyM2ZlYTU=",
                                "url": "https://github.com/google/closure-compiler/pull/3393/commits/5c0c012c67ad0cbde85ff92dde94ae461023fea5"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 40,
                                "url": "https://github.com/google/elemental2/issues/40",
                                "title": "activeElement is missing from Document",
                                "bodyHTML": "<p dir=\"auto\">Elemental2 version : 1.0.0-RC1<br>\nThe document object provide by DomGloabl does not have the activeElement property<br>\nas a workaround i extended the HTMLDocument type and added the property and it worked out</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@JsType(isNative = true, namespace = JsPackage.GLOBAL)\npublic class MyDocument extends HTMLDocument {\n    public Element activeElement;\n}\"><pre class=\"notranslate\"><code>@JsType(isNative = true, namespace = JsPackage.GLOBAL)\npublic class MyDocument extends HTMLDocument {\n    public Element activeElement;\n}\n</code></pre></div>\n<p dir=\"auto\">checking this out on MDN it says it is supported by most of modern browsers.</p>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement</a></p>",
                                "resourcePath": "/google/elemental2/issues/40",
                                "createdAt": "2018-03-07T10:49:23Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Switches CommonJS modules to use the module metadata map",
                "url": "https://github.com/google/closure-compiler/pull/3417",
                "resourcePath": "/google/closure-compiler/pull/3417",
                "createdAt": "2019-06-10T11:01:58Z",
                "number": 3417,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/AbstractCompiler.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/Compiler.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "RENAMED",
                                "path": "test/com/google/javascript/jscomp/ModuleRewriteIntegrationTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjg2NjMyMDM0OmUwNWE4YmU0MjczNTVhZGFiOWEyOTNiOGUyNjE4NGYzMjliZjUwMWY=",
                                "url": "https://github.com/google/closure-compiler/pull/3417/commits/e05a8be427355adab9a293b8e26184f329bf501f"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3360,
                                "url": "https://github.com/google/closure-compiler/issues/3360",
                                "title": "CommonJS compatibility does not work as expected",
                                "bodyHTML": "<p dir=\"auto\">The compiler puts each commonJs module into <code class=\"notranslate\">default</code> property of the imported object.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// ecma\nimport commonJs from './common-js'\n\nconsole.log('requiring a common js from ecma:')\nconsole.log(commonJs)\"><pre><span class=\"pl-c\">// ecma</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">commonJs</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./common-js'</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'requiring a common js from ecma:'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">commonJs</span><span class=\"pl-kos\">)</span></pre></div>\n<table role=\"table\">\n<tbody><tr><th>CommonJS From ECMA</th><th>CommonJS From CommonJS</th></tr>\n<tr><td>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// common-js.js\nconst commonJs2 = require('./common-js2')\n\nmodule.exports = () =&gt; {\n  console.log('default common js export')\n}\nmodule.exports['named'] = () =&gt; {\n  console.log('named common js export')\n}\n\nconsole.log('requiring a ' +\n'common js from common js:')\nconsole.log(commonJs2)\"><pre><span class=\"pl-c\">// common-js.js</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">commonJs2</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./common-js2'</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'default common js export'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'named'</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'named common js export'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'requiring a '</span> <span class=\"pl-c1\">+</span>\n<span class=\"pl-s\">'common js from common js:'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">commonJs2</span><span class=\"pl-kos\">)</span></pre></div>\n</td><td>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// common-js2.js\nmodule.exports = () =&gt; {\n  console.log('default common js ' \n+ 'export2')\n}\nmodule.exports['named'] = () =&gt; {\n  console.log('named common js ' \n+ 'export2')\n}\"><pre><span class=\"pl-c\">// common-js2.js</span>\n<span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exports</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'default common js '</span> \n<span class=\"pl-c1\">+</span> <span class=\"pl-s\">'export2'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'named'</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'named common js '</span> \n<span class=\"pl-c1\">+</span> <span class=\"pl-s\">'export2'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>\n</td></tr></tbody></table>\n<p dir=\"auto\">Run the compiler</p>\n<div class=\"highlight highlight-source-fsharp notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -jar /Users/zavr/node_modules/google-closure-compiler-java/compiler.jar \\\n--compilation_level ADVANCED --language_out ECMASCRIPT_2017 --formatting PRETTY_PRINT \\\n--process_common_js_modules --entry_point \\\nexample/commonjs/index.js --module_resolution NODE --js \\\nexample/commonjs/index.js example/commonjs/common-js.js example/commonjs/common-js2.js\"><pre>java <span class=\"pl-k\">-</span>jar <span class=\"pl-k\">/</span>Users<span class=\"pl-k\">/</span>zavr<span class=\"pl-k\">/</span>node<span class=\"pl-k\">_</span>modules<span class=\"pl-k\">/</span>google<span class=\"pl-k\">-</span>closure<span class=\"pl-k\">-</span>compiler<span class=\"pl-k\">-</span>java<span class=\"pl-k\">/</span>compiler.jar \\\n<span class=\"pl-k\">--</span>compilation<span class=\"pl-k\">_</span>level ADVANCED <span class=\"pl-k\">--</span>language<span class=\"pl-k\">_</span>out ECMASCRIPT<span class=\"pl-k\">_</span>2017 <span class=\"pl-k\">--</span>formatting PRETTY<span class=\"pl-k\">_</span>PRINT \\\n<span class=\"pl-k\">--</span>process<span class=\"pl-k\">_</span>common<span class=\"pl-k\">_</span>js<span class=\"pl-k\">_</span>modules <span class=\"pl-k\">--</span>entry<span class=\"pl-k\">_</span>point \\\nexample<span class=\"pl-k\">/</span>commonjs<span class=\"pl-k\">/</span>index.js <span class=\"pl-k\">--</span>module<span class=\"pl-k\">_</span>resolution NODE <span class=\"pl-k\">--</span>js \\\nexample<span class=\"pl-k\">/</span>commonjs<span class=\"pl-k\">/</span>index.js example<span class=\"pl-k\">/</span>commonjs<span class=\"pl-k\">/</span>common<span class=\"pl-k\">-</span>js.js example<span class=\"pl-k\">/</span>commonjs<span class=\"pl-k\">/</span>common<span class=\"pl-k\">-</span>js2.js</pre></div>\n<p dir=\"auto\">Get the output</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"'use strict';\nvar a = () =&gt; {\n  console.log(&quot;default common js export2&quot;);\n};\na.named = () =&gt; {\n  console.log(&quot;named common js export2&quot;);\n};\nvar b = {default:() =&gt; {\n  console.log(&quot;default common js export&quot;);\n}};\nb.default.named = () =&gt; {\n  console.log(&quot;named common js export&quot;);\n};\nconsole.log(&quot;requiring a common js from common js:&quot;);\nconsole.log(a);\nconsole.log(&quot;requiring a common js from ecma:&quot;);\nconsole.log(b);\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">var</span> <span class=\"pl-en\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"default common js export2\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">named</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"named common js export2\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">var</span> <span class=\"pl-s1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-en\">default</span>:<span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"default common js export\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">b</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">default</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">named</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"named common js export\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"requiring a common js from common js:\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">a</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"requiring a common js from ecma:\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">b</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Execute the output</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"requiring a common js from common js:\n{ [Function: a] named: [Function] }\nrequiring a common js from ecma:\n{ default: { [Function: default] named: [Function] } }\"><pre><span class=\"pl-s1\">requiring</span> <span class=\"pl-s1\">a</span> <span class=\"pl-s1\">common</span> <span class=\"pl-s1\">js</span> <span class=\"pl-k\">from</span> <span class=\"pl-s1\">common</span> js:\n<span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-v\">Function</span>: <span class=\"pl-s1\">a</span><span class=\"pl-kos\">]</span> <span class=\"pl-s1\">named</span>: <span class=\"pl-kos\">[</span><span class=\"pl-v\">Function</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span>\nrequiring <span class=\"pl-s1\">a</span> <span class=\"pl-s1\">common</span> <span class=\"pl-s1\">js</span> <span class=\"pl-k\">from</span> <span class=\"pl-s1\">ecma</span>:\n<span class=\"pl-kos\">{</span> default: <span class=\"pl-kos\">{</span> <span class=\"pl-kos\">[</span><span class=\"pl-v\">Function</span><span class=\"pl-kos\"></span>: <span class=\"pl-s1\">default</span><span class=\"pl-kos\">]</span> <span class=\"pl-s1\">named</span>: <span class=\"pl-kos\">[</span><span class=\"pl-v\">Function</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span> <span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">This does not make sense. I shouldn't write <code class=\"notranslate\">.default</code> as confirmed here <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"427403926\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/closure-compiler/issues/3308\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/closure-compiler/issues/3308/hovercard\" href=\"https://github.com/google/closure-compiler/issues/3308\">#3308</a>. When it comes to Babel-compiled modules, it's a nightmare. Babel exports { default: code } itself, so the currently closure-compatible code becomes</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import erte from '@a-la/fixture-babel'\n\nconsole.log(erte.default.default())\nconsole.log(erte.default.c())\nconsole.log(erte.default.b())\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">erte</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'@a-la/fixture-babel'</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">erte</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">default</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">default</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">erte</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">default</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">c</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">erte</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">default</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">b</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">And if you actually try to execute in with babel, you get</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"console.log(_.default.default.default());\n                              ^\n\nTypeError: Cannot read property 'default' of undefined\"><pre class=\"notranslate\"><code>console.log(_.default.default.default());\n                              ^\n\nTypeError: Cannot read property 'default' of undefined\n</code></pre></div>\n<p dir=\"auto\">Developers developers developers developers<br>\nBabel Babel Babel Babel<br>\nDefault Default Default Default</p>",
                                "resourcePath": "/google/closure-compiler/issues/3360",
                                "createdAt": "2019-05-03T23:31:07Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "triage-done" } },
                                        {
                                            "node": {
                                                "name": "internal-issue-created"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove the non-standard parameter opt_distance from History.prototype.back",
                "url": "https://github.com/google/closure-compiler/pull/3419",
                "resourcePath": "/google/closure-compiler/pull/3419",
                "createdAt": "2019-06-12T10:12:52Z",
                "number": 3419,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/html5.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjg3NDM3NjQxOmNkYWI4MjUyOGIwNTI3MWYxZGY1M2Q1OTkxYmQ3OTg5MzI1ZTU3ZWE=",
                                "url": "https://github.com/google/closure-compiler/pull/3419/commits/cdab82528b05271f1df53d5991bd7989325e57ea"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3418,
                                "url": "https://github.com/google/closure-compiler/issues/3418",
                                "title": "opt_distance parameter in function definition for History.prototype.back",
                                "bodyHTML": "<p dir=\"auto\">In pull request <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"431811482\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/closure-compiler/issues/3330\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/closure-compiler/pull/3330/hovercard\" href=\"https://github.com/google/closure-compiler/pull/3330\">#3330</a>, the <code class=\"notranslate\">opt_distance</code> parameter was included in the function definition for <code class=\"notranslate\">History.prototype.back</code></p>\n<p dir=\"auto\"><a href=\"https://github.com/google/closure-compiler/blob/v20190528/externs/browser/html5.js#L3154\">https://github.com/google/closure-compiler/blob/v20190528/externs/browser/html5.js#L3154</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/**\n * Goes back one step in the joint session history.\n * If there is no previous page, does nothing.\n *\n * @return {undefined}\n */\nHistory.prototype.back = function(opt_distance) {};\"><pre class=\"notranslate\"><code>/**\n * Goes back one step in the joint session history.\n * If there is no previous page, does nothing.\n *\n * @return {undefined}\n */\nHistory.prototype.back = function(opt_distance) {};\n</code></pre></div>\n<p dir=\"auto\">This causes the following warning when calling <code class=\"notranslate\">History.prototype.back</code> with zero arguments</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING - [JSC_WRONG_ARGUMENT_COUNT]\nFunction History.prototype.back: called with 0 argument(s).\nFunction requires at least 1 argument(s) and no more than 1 argument(s).\"><pre class=\"notranslate\"><code>WARNING - [JSC_WRONG_ARGUMENT_COUNT]\nFunction History.prototype.back: called with 0 argument(s).\nFunction requires at least 1 argument(s) and no more than 1 argument(s).\n</code></pre></div>",
                                "resourcePath": "/google/closure-compiler/issues/3418",
                                "createdAt": "2019-06-12T09:03:05Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "internal-issue-created"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix Travis build by decreasing amount logging data",
                "url": "https://github.com/google/closure-compiler/pull/3569",
                "resourcePath": "/google/closure-compiler/pull/3569",
                "createdAt": "2020-03-10T19:23:23Z",
                "number": 3569,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".travis.yml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mzg2MzIwMTY5OjIxZGVkN2FjMzFmYTRlODljMmY0ODkyM2Q1NDBiNmMwYWVlOWM4MGE=",
                                "url": "https://github.com/google/closure-compiler/pull/3569/commits/21ded7ac31fa4e89c2f48923d540b6c0aee9c80a"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3568,
                                "url": "https://github.com/google/closure-compiler/issues/3568",
                                "title": "Travis CI build failing",
                                "bodyHTML": "<p dir=\"auto\">The last two builds have failed with \"The job exceeded the maximum log length, and has been terminated.\".</p>\n<p dir=\"auto\"><a href=\"https://travis-ci.org/google/closure-compiler/builds/658950872?utm_medium=notification&amp;utm_source=github_status\" rel=\"nofollow\">Build #4641</a><br>\n<a href=\"https://travis-ci.org/google/closure-compiler/builds/659342534?utm_source=github_status&amp;utm_medium=notification\" rel=\"nofollow\">Build #4642</a></p>",
                                "resourcePath": "/google/closure-compiler/issues/3568",
                                "createdAt": "2020-03-07T02:23:52Z",
                                "labels": {
                                    "edges": [{ "node": { "name": "P1" } }]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Move webassembly.js from \"contrib\" to \"browser\"",
                "url": "https://github.com/google/closure-compiler/pull/3564",
                "resourcePath": "/google/closure-compiler/pull/3564",
                "createdAt": "2020-02-28T13:07:57Z",
                "number": 3564,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "RENAMED",
                                "path": "externs/browser/webassembly.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzgxMzgxMzIwOmQ3YTgxMTcwMjUwMDRjZGE2NzQ3NjRmZjg3MTczNDUzNzZlYjdmMTE=",
                                "url": "https://github.com/google/closure-compiler/pull/3564/commits/d7a8117025004cda674764ff8717345376eb7f11"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3552,
                                "url": "https://github.com/google/closure-compiler/issues/3552",
                                "title": "WebAssembly externs likely incorrectly located in \"contrib\"",
                                "bodyHTML": "<p dir=\"auto\">As noted in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"236351845\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/closure-compiler/issues/2533\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/closure-compiler/issues/2533/hovercard\" href=\"https://github.com/google/closure-compiler/issues/2533\">#2533</a> by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RReverser/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RReverser\">@RReverser</a>:</p>\n<blockquote>\n<p dir=\"auto\">An up-to-date Closure Compiler is complaining about variable WebAssembly being undeclared.<br>\nIs it because externs are in contrib/externs/... as opposed to externs/browser/... where they were added initially in a PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"236363212\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/closure-compiler/issues/2534\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/closure-compiler/pull/2534/hovercard\" href=\"https://github.com/google/closure-compiler/pull/2534\">#2534</a>? All the other APIs in contrib/externs/... seem to be for 3rd-party libs, whereas WebAssembly is a stable API available in all browsers, seems weird that it's not colocated with other standard APIs.</p>\n</blockquote>",
                                "resourcePath": "/google/closure-compiler/issues/3552",
                                "createdAt": "2020-02-16T09:54:52Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Add optimization to replace `Array.of` with an array literal",
                "url": "https://github.com/google/closure-compiler/pull/3573",
                "resourcePath": "/google/closure-compiler/pull/3573",
                "createdAt": "2020-03-25T16:19:12Z",
                "number": 3573,
                "mergeCommit": {
                    "oid": "cb8e475631093ddac713817e378b3536bfc88fe1",
                    "message": "Merge pull request #3573 from bugreportuser:add-optimization-to-replace-array-of-with-literal\n\nPiperOrigin-RevId: 307854304",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/cb8e475631093ddac713817e378b3536bfc88fe1",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "19b5d5442d4ed8c6b54c1b6cefa3773fff621048",
                                "message": "Adding trailing comma property to object literal node\n\nPiperOrigin-RevId: 307701367"
                            },
                            {
                                "oid": "a781ce8a3492b8deab233b1876b164d3bd20639d",
                                "message": "Add enableNormalize"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/IntegrationTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/PeepholeReplaceKnownMethodsTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzkzNjg2NjE5OmE3ODFjZThhMzQ5MmI4ZGVhYjIzM2IxODc2YjE2NGQzYmQyMDYzOWQ=",
                                "url": "https://github.com/google/closure-compiler/pull/3573/commits/a781ce8a3492b8deab233b1876b164d3bd20639d"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3566,
                                "url": "https://github.com/google/closure-compiler/issues/3566",
                                "title": "Array.of can be optimized",
                                "bodyHTML": "<p dir=\"auto\">The compiler should always be able to optimize <code class=\"notranslate\">Array.of</code> to <code class=\"notranslate\">[]</code> when <code class=\"notranslate\">language_out</code> is ES6. Is this something that can be added?</p>\n<p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function arrayOf(...values) {\n    return Array.of(...values);\n}\nconsole.log(arrayOf(1, 2, 3));\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-en\">arrayOf</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">values</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-v\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">of</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">values</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">arrayOf</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">3</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ closure-compiler --language_out ES6 --compilation_level ADVANCED array_of.js\"><pre class=\"notranslate\"><code>$ closure-compiler --language_out ES6 --compilation_level ADVANCED array_of.js\n</code></pre></div>\n<p dir=\"auto\">Output (v20200224):</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"'use strict';console.log(Array.of(...[1,2,3]));\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span><span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">of</span><span class=\"pl-kos\">(</span>...<span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Expected output:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"'use strict';console.log([1,2,3]);\"><pre><span class=\"pl-s\">'use strict'</span><span class=\"pl-kos\">;</span><span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span><span class=\"pl-c1\">3</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>",
                                "resourcePath": "/google/closure-compiler/issues/3566",
                                "createdAt": "2020-02-29T22:06:29Z",
                                "labels": {
                                    "edges": [{ "node": { "name": "feat" } }]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Add missing optional arguments to `Path2D` constructor in extern definition",
                "url": "https://github.com/google/closure-compiler/pull/3603",
                "resourcePath": "/google/closure-compiler/pull/3603",
                "createdAt": "2020-05-26T23:47:28Z",
                "number": 3603,
                "mergeCommit": {
                    "oid": "1dccc1adcad799a1688d7f3ae45eea865d9e54fe",
                    "message": "Merge pull request #3603 from timdawborn:issue-3598-path2d-extern-improvements\n\nPiperOrigin-RevId: 313487992",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/1dccc1adcad799a1688d7f3ae45eea865d9e54fe",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "698546f9335258e04f35efa7cfc835e0c74df080",
                                "message": "Merge pull request #3602 from Vertispan:documentrange-interface\n\nPiperOrigin-RevId: 313476603"
                            },
                            {
                                "oid": "d4f400fa2dbf75e0794b0a371b5ddb1f34202bc4",
                                "message": "Add missing optional arguments to `Path2D` constructor in extern definition."
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/html5.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDIzNTIyMjAwOmQ0ZjQwMGZhMmRiZjc1ZTA3OTRiMGEzNzFiNWRkYjFmMzQyMDJiYzQ=",
                                "url": "https://github.com/google/closure-compiler/pull/3603/commits/d4f400fa2dbf75e0794b0a371b5ddb1f34202bc4"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3598,
                                "url": "https://github.com/google/closure-compiler/issues/3598",
                                "title": "Path2D externs definition is missing optional constructor arguments",
                                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">Path2D</code> constructor has an optional argument that is either a string or another <code class=\"notranslate\">Path2D</code> object: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Path2D/Path2D\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Path2D/Path2D</a></p>\n<p dir=\"auto\">The externs are currently missing this <a href=\"https://github.com/google/closure-compiler/blob/master/externs/browser/html5.js#L264\">https://github.com/google/closure-compiler/blob/master/externs/browser/html5.js#L264</a></p>\n<p dir=\"auto\">Version: any version of Closure.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3598",
                                "createdAt": "2020-05-22T06:21:45Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Adding WebStorage to the list of default browser externs.",
                "url": "https://github.com/google/closure-compiler/pull/3632",
                "resourcePath": "/google/closure-compiler/pull/3632",
                "createdAt": "2020-07-08T07:27:29Z",
                "number": 3632,
                "mergeCommit": {
                    "oid": "eb2eff8bc55185fdc209561609a052536c4ac108",
                    "message": "Merge pull request #3632 from q2p:master\n\nPiperOrigin-RevId: 322628928",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/eb2eff8bc55185fdc209561609a052536c4ac108",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "55011b242a06808765068979375fc24cb07c6ff9",
                                "message": "Consider optional chain start property for node equivalence\n\nPiperOrigin-RevId: 322615195"
                            },
                            {
                                "oid": "5af97eb87e0a6823887616d8ff868994eeca4b02",
                                "message": "Added webstorage.js to the list of default browser externs"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/gecko_dom.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_dom1.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/webstorage.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/DefaultExterns.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDQ2MDUwNzgwOjVhZjk3ZWI4N2UwYTY4MjM4ODc2MTZkOGZmODY4OTk0ZWVjYTRiMDI=",
                                "url": "https://github.com/google/closure-compiler/pull/3632/commits/5af97eb87e0a6823887616d8ff868994eeca4b02"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 2480,
                                "url": "https://github.com/google/closure-compiler/issues/2480",
                                "title": "Proxy & localStorage no longer working in v20170423",
                                "bodyHTML": "<p dir=\"auto\">last time I ran my project through Closure everything <a href=\"https://gitlab.com/gumiko/contagion/builds/13466101\" rel=\"nofollow\">went fine</a> (with version v20170218). But now today with version v20170423 <a href=\"https://gitlab.com/gumiko/contagion/builds/15747793\" rel=\"nofollow\">it gets errors</a>, with <strong>absolutely nothing changed in the file</strong>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"app.js:260: ERROR - variable current_player is undeclared\n    current_player = +player;\n    ^^^^^^^^^^^^^^\n\napp.js:280: ERROR - variable localStorage is undeclared\n    localStorage.setItem(&quot;savestate&quot;, JSON.stringify(savestate));\n    ^^^^^^^^^^^^\n\napp.js:312: ERROR - variable Proxy is undeclared\nconst undo_history = new Proxy(_move_history[0], {\n                         ^^^^^\n\napp.js:451: ERROR - variable right_click_tile is undeclared\n    if (right_click_tile !== null)\n        ^^^^^^^^^^^^^^^^\"><pre class=\"notranslate\"><code>app.js:260: ERROR - variable current_player is undeclared\n    current_player = +player;\n    ^^^^^^^^^^^^^^\n\napp.js:280: ERROR - variable localStorage is undeclared\n    localStorage.setItem(\"savestate\", JSON.stringify(savestate));\n    ^^^^^^^^^^^^\n\napp.js:312: ERROR - variable Proxy is undeclared\nconst undo_history = new Proxy(_move_history[0], {\n                         ^^^^^\n\napp.js:451: ERROR - variable right_click_tile is undeclared\n    if (right_click_tile !== null)\n        ^^^^^^^^^^^^^^^^\n</code></pre></div>\n<p dir=\"auto\">but in the <a href=\"https://closure-compiler.appspot.com\" rel=\"nofollow\">web interface</a> it does not get any error.</p>\n<p dir=\"auto\">I run my file with those settings:</p>\n<ul dir=\"auto\">\n<li>compilation_level <code class=\"notranslate\">ADVANCED_OPTIMIZATIONS</code></li>\n<li>language_in <code class=\"notranslate\">ES7</code></li>\n<li>language_out <code class=\"notranslate\">ES5_STRICT</code></li>\n</ul>\n<p dir=\"auto\">Source: <a href=\"https://gitlab.com/gumiko/contagion/blob/master/app.js\" rel=\"nofollow\">https://gitlab.com/gumiko/contagion/blob/master/app.js</a></p>\n<p dir=\"auto\">My build script gets Closure from <a href=\"http://dl.google.com/closure-compiler/compiler-latest.zip\" rel=\"nofollow\">http://dl.google.com/closure-compiler/compiler-latest.zip</a></p>",
                                "resourcePath": "/google/closure-compiler/issues/2480",
                                "createdAt": "2017-05-06T17:56:55Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "feat: add full Unicode support for Javascript identifiers",
                "url": "https://github.com/google/closure-compiler/pull/3647",
                "resourcePath": "/google/closure-compiler/pull/3647",
                "createdAt": "2020-07-21T02:30:38Z",
                "number": 3647,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".gitignore"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/parsing/parser/Scanner.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "src/com/google/javascript/jscomp/parsing/parser/util/UnicodeMatch.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/deps/ClosureBundlerTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "travis_util/test_npm.sh"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDU0MDQyOTg5OjZkOWYwNGU1MWVmMzA4ODFhMjFkYjJjNTQ3MWVjMzQzNjZmNDU2MDQ=",
                                "url": "https://github.com/google/closure-compiler/pull/3647/commits/6d9f04e51ef30881a21db2c5471ec34366f45604"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3639,
                                "url": "https://github.com/google/closure-compiler/issues/3639",
                                "title": "Parser error on \"combining character\" (U+0307)",
                                "bodyHTML": "<h3 dir=\"auto\">There seems to be an issue with parsing composite character sequences.</h3>\n<p dir=\"auto\">Composite character <code class=\"notranslate\">İ</code> consist of the base character and combining character sequence (U+0049)(U+0307)<br>\nUsing this character causing the compiler to fail with the parser error.</p>\n<h3 dir=\"auto\">Example code</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var bar = {\nİ: &quot;foo&quot;\n};\"><pre class=\"notranslate\"><code>var bar = {\nİ: \"foo\"\n};\n</code></pre></div>\n<h3 dir=\"auto\">Compiler error</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"input0:2: ERROR - [JSC_PARSE_ERROR] Parse error. Character '̇' (U+0307) is not a valid identifier start char\n  2| İ: &quot;foo&quot;\n      ^\n\n1 error(s), 0 warning(s)\"><pre class=\"notranslate\"><code>input0:2: ERROR - [JSC_PARSE_ERROR] Parse error. Character '̇' (U+0307) is not a valid identifier start char\n  2| İ: \"foo\"\n      ^\n\n1 error(s), 0 warning(s)\n</code></pre></div>\n<h3 dir=\"auto\">Demo</h3>\n<p dir=\"auto\"><a href=\"https://closure-compiler-debugger.appspot.com/#input0%3Dvar%2520bar%2520%253D%2520%257B%250AI%25CC%2587%253A%2520%2522foo%2522%250A%257D%253B%26input1%26conformanceConfig%26externs%26refasterjs-template%26includeDefaultExterns%3Dtrue%26ENABLE_ALL_DIAGNOSTIC_GROUPS%3Dtrue%26CHECK_TYPES%3Dtrue%26CHECK_SYMBOLS%3Dtrue%26MISSING_PROPERTIES%3Dtrue%26TRANSPILE%3Dtrue%26CLOSURE_PASS%3Dtrue%26PRESERVE_TYPE_ANNOTATIONS%3Dtrue%26PRETTY_PRINT%3Dtrue\" rel=\"nofollow\">Example</a></p>",
                                "resourcePath": "/google/closure-compiler/issues/3639",
                                "createdAt": "2020-07-14T15:21:36Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        { "node": { "name": "P3" } },
                                        {
                                            "node": {
                                                "name": "good first issue"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Added support for UnicodeCombiningMark, fixes #3639.",
                "url": "https://github.com/google/closure-compiler/pull/3645",
                "resourcePath": "/google/closure-compiler/pull/3645",
                "createdAt": "2020-07-19T23:17:23Z",
                "number": 3645,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3639,
                                "url": "https://github.com/google/closure-compiler/issues/3639",
                                "title": "Parser error on \"combining character\" (U+0307)",
                                "bodyHTML": "<h3 dir=\"auto\">There seems to be an issue with parsing composite character sequences.</h3>\n<p dir=\"auto\">Composite character <code class=\"notranslate\">İ</code> consist of the base character and combining character sequence (U+0049)(U+0307)<br>\nUsing this character causing the compiler to fail with the parser error.</p>\n<h3 dir=\"auto\">Example code</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var bar = {\nİ: &quot;foo&quot;\n};\"><pre class=\"notranslate\"><code>var bar = {\nİ: \"foo\"\n};\n</code></pre></div>\n<h3 dir=\"auto\">Compiler error</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"input0:2: ERROR - [JSC_PARSE_ERROR] Parse error. Character '̇' (U+0307) is not a valid identifier start char\n  2| İ: &quot;foo&quot;\n      ^\n\n1 error(s), 0 warning(s)\"><pre class=\"notranslate\"><code>input0:2: ERROR - [JSC_PARSE_ERROR] Parse error. Character '̇' (U+0307) is not a valid identifier start char\n  2| İ: \"foo\"\n      ^\n\n1 error(s), 0 warning(s)\n</code></pre></div>\n<h3 dir=\"auto\">Demo</h3>\n<p dir=\"auto\"><a href=\"https://closure-compiler-debugger.appspot.com/#input0%3Dvar%2520bar%2520%253D%2520%257B%250AI%25CC%2587%253A%2520%2522foo%2522%250A%257D%253B%26input1%26conformanceConfig%26externs%26refasterjs-template%26includeDefaultExterns%3Dtrue%26ENABLE_ALL_DIAGNOSTIC_GROUPS%3Dtrue%26CHECK_TYPES%3Dtrue%26CHECK_SYMBOLS%3Dtrue%26MISSING_PROPERTIES%3Dtrue%26TRANSPILE%3Dtrue%26CLOSURE_PASS%3Dtrue%26PRESERVE_TYPE_ANNOTATIONS%3Dtrue%26PRETTY_PRINT%3Dtrue\" rel=\"nofollow\">Example</a></p>",
                                "resourcePath": "/google/closure-compiler/issues/3639",
                                "createdAt": "2020-07-14T15:21:36Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        { "node": { "name": "P3" } },
                                        {
                                            "node": {
                                                "name": "good first issue"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Add CodeMirror extern to contrib",
                "url": "https://github.com/google/closure-compiler/pull/3755",
                "resourcePath": "/google/closure-compiler/pull/3755",
                "createdAt": "2021-01-15T22:35:50Z",
                "number": 3755,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "contrib/externs/codemirror-5.59.1.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU2MDAxODU3OjE1ZDJlMDRkZGY2YzExMzY4MzczN2QyNjYyMWViYWZiMWNjMmQ5N2Y=",
                                "url": "https://github.com/google/closure-compiler/pull/3755/commits/15d2e04ddf6c113683737d26621ebafb1cc2d97f"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3754,
                                "url": "https://github.com/google/closure-compiler/issues/3754",
                                "title": "New extern for CodeMirror",
                                "bodyHTML": "<p dir=\"auto\">I've manually written an extern file for CodeMirror, can it be added to the wiki? Thanks in advance :)</p>\n<p dir=\"auto\"><a href=\"https://gist.github.com/PeterTillema/8e037add8416c891f72560b8ba153fb3\">https://gist.github.com/PeterTillema/8e037add8416c891f72560b8ba153fb3</a></p>",
                                "resourcePath": "/google/closure-compiler/issues/3754",
                                "createdAt": "2021-01-15T22:28:22Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "feat: update `package.json`, `runtime_tests` to use Bazel build",
                "url": "https://github.com/google/closure-compiler/pull/3746",
                "resourcePath": "/google/closure-compiler/pull/3746",
                "createdAt": "2020-12-30T07:17:03Z",
                "number": 3746,
                "mergeCommit": {
                    "oid": "c73af80614406a6f08d2510029af985c24897421",
                    "message": "Update package.json, runtime_tests to use Bazel build (#3746)\n\n* Update package.json, runtime tests for Bazel\r\n\r\nSwitched `npm run` calls to `yarn --silent` except for `runtime_tests:run` script\r\n\r\n* Upgraded NPM deps\r\n\r\n* Added missing test module\r\n\r\n* Added `yarn compiler` convenience script\r\n\r\n* Renamed script to `compile`\r\n\r\n* Update test scripts\r\n\r\n* Rewrite `yarn` calls to `npm` for interop",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/c73af80614406a6f08d2510029af985c24897421",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "9353bf9923d4951af6c4a73cef48f35bcf7f9f6e",
                                "message": "Small code corrections and readability improvements\n\nPiperOrigin-RevId: 350374948"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "package.json"
                            }
                        },
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "test/com/google/javascript/jscomp/runtime_tests/module_tests/module_test_resources/+subdir/module_es6.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/runtime_tests/utils/build.sh"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQ2ODI4NDc2OjVjNDdiN2UxMjRhMGM4ODhiNWRhOGEzMjIzYjNkYmIyMjJlNzgxNTI=",
                                "url": "https://github.com/google/closure-compiler/pull/3746/commits/5c47b7e124a0c888b5da8a3223b3dbb222e78152"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3743,
                                "url": "https://github.com/google/closure-compiler/issues/3743",
                                "title": "Open source build instructions unclear",
                                "bodyHTML": "<p dir=\"auto\">I intended to add details to the README regarding the runtime tests and building/testing with NPM/yarn (i.e., via <code class=\"notranslate\">yarn build</code> and <code class=\"notranslate\">yarn test</code>) when I realized I cannot get the Maven build to work anymore, now that <code class=\"notranslate\">pom.xml</code> is no longer in the root directory. Despite my best efforts to repair this (moving POM to <code class=\"notranslate\">pom.xml</code>, adding <code class=\"notranslate\">project.source</code> version to silence \"source version must be &gt; 8\" errors, etc.) so that <code class=\"notranslate\">mvn -DskipTests</code> and so on execute as expected, I cannot the project to compile successfully.</p>\n<p dir=\"auto\">Any help from someone more experienced with Maven would be greatly appreciated. I will send my README PR as soon as this is working again.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3743",
                                "createdAt": "2020-12-28T00:44:16Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Prevent arrow functions from being improperly inlined",
                "url": "https://github.com/google/closure-compiler/pull/3757",
                "resourcePath": "/google/closure-compiler/pull/3757",
                "createdAt": "2021-01-16T02:37:58Z",
                "number": 3757,
                "mergeCommit": {
                    "oid": "9d1415bcc0e8d00525bc3d043855a253a37f5fdc",
                    "message": "Merge pull request #3757 from DavidANeil:davidneil-no-inline-arrows\n\nPiperOrigin-RevId: 353083185",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/9d1415bcc0e8d00525bc3d043855a253a37f5fdc",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "4fe84046ddc35269421943d8005ac1bad0244377",
                                "message": "Fixes RTCPeerConnectionIceEvent externs to make it extend Event.\n\nPiperOrigin-RevId: 353068060"
                            },
                            {
                                "oid": "e3a8f114c4429c05206795d54facf4aa9f774448",
                                "message": "Prevent arrow functions from being improperly inlined\n\nCloses #3756."
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/InlineSimpleMethods.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/InlineSimpleMethodsTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU2MDYzNjEwOmUzYThmMTE0YzQ0MjljMDUyMDY3OTVkNTRmYWNmNGFhOWY3NzQ0NDg=",
                                "url": "https://github.com/google/closure-compiler/pull/3757/commits/e3a8f114c4429c05206795d54facf4aa9f774448"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3756,
                                "url": "https://github.com/google/closure-compiler/issues/3756",
                                "title": "InlineSimpleMethods makes a semantic change in ES2015+",
                                "bodyHTML": "<p dir=\"auto\">Given the following input code:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class Holder {\n    constructor() {\n        this.val = {internal: true};\n        this.context =  {getVal: () =&gt; this.val}\n    }\n}\n\nconsole.log(new Holder().context.getVal().internal);\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-v\">Holder</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">val</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">internal</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n        <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">context</span> <span class=\"pl-c1\">=</span>  <span class=\"pl-kos\">{</span><span class=\"pl-en\">getVal</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">val</span><span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Holder</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getVal</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">internal</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Outputs:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class a {\n  constructor() {\n    this.g = {h:!0};\n    this.i = {j:() =&gt; this.g};\n  }\n}\nconsole.log((new a).i.g.h);\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-s1\">a</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">g</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">h</span>:<span class=\"pl-c1\">!</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">i</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-en\">j</span>:<span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">g</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-s1\">a</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">i</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">g</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">h</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">The <code class=\"notranslate\">InlineSimpleMethods</code> replaces the call of <code class=\"notranslate\">getVal()</code> with <code class=\"notranslate\">val</code>, which is incorrect because the <code class=\"notranslate\">this</code> in the definition of <code class=\"notranslate\">getVal</code> is not <code class=\"notranslate\">context</code>, but rather <code class=\"notranslate\">Holder</code>.<br>\nThis is not a problem in ES5, because the arrow function is already rewritten before running this pass.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3756",
                                "createdAt": "2021-01-16T02:35:21Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Preserve parentheses on spread operator's AssignmentExpression",
                "url": "https://github.com/google/closure-compiler/pull/3737",
                "resourcePath": "/google/closure-compiler/pull/3737",
                "createdAt": "2020-12-05T01:07:34Z",
                "number": 3737,
                "mergeCommit": {
                    "oid": "1a48734d08f2016cd405afec32260a98953cac35",
                    "message": "Merge pull request #3737 from DavidANeil:davidneil-spread-preserve-paren\n\nPiperOrigin-RevId: 346619026",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/1a48734d08f2016cd405afec32260a98953cac35",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "bd7a627d8681143669d978153632c96206fdbdcc",
                                "message": "Apply jscomp_java_library macro to //third_party/java_src/jscomp/java/com/google/debugging/sourcemap\n\nPiperOrigin-RevId: 346618927"
                            },
                            {
                                "oid": "39c185cdae83b8dbbe3e5eb9332bf046dc279daf",
                                "message": "Preserve parentheses on spread operator's AssignmentExpression"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CodeGenerator.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/CodePrinterTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMyODY2NzEzOjM5YzE4NWNkYWU4M2I4ZGJiZTNlNWViOTMzMmJmMDQ2ZGMyNzlkYWY=",
                                "url": "https://github.com/google/closure-compiler/pull/3737/commits/39c185cdae83b8dbbe3e5eb9332bf046dc279daf"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3736,
                                "url": "https://github.com/google/closure-compiler/issues/3736",
                                "title": "Incorrect removal of parentheses",
                                "bodyHTML": "<p dir=\"auto\">Closure Compiler sometimes incorrectly removes semantically important parentheses.</p>\n<p dir=\"auto\"><code class=\"notranslate\">example.js</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function spreadSet() {\n    var _a;\n    return [...(_a = new Set([1]), (_a !== null &amp;&amp; _a !== void 0 ? _a : []))];\n}\nconsole.log(spreadSet());\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-en\">spreadSet</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">var</span> <span class=\"pl-s1\">_a</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">[</span>...<span class=\"pl-kos\">(</span><span class=\"pl-s1\">_a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Set</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">_a</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-c1\">&amp;&amp;</span> <span class=\"pl-s1\">_a</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-k\">void</span> <span class=\"pl-c1\">0</span> ? <span class=\"pl-s1\">_a</span> : <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">spreadSet</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ java -jar closure-compiler-v20201102.jar --compilation_level ADVANCED_OPTIMIZATIONS --formatting PRETTY_PRINT --language_out=ECMASCRIPT_2015 --js_output_file=bug.js example.js &amp;&amp; cat bug.js &amp;&amp; node bug.js\n'use strict';\nconsole.log(function() {\n  var a;\n  return [...a = new Set([1]), null !== a &amp;&amp; void 0 !== a ? a : []];\n}());\n\n[ 1, Set(1) { 1 } ]\"><pre class=\"notranslate\"><code>$ java -jar closure-compiler-v20201102.jar --compilation_level ADVANCED_OPTIMIZATIONS --formatting PRETTY_PRINT --language_out=ECMASCRIPT_2015 --js_output_file=bug.js example.js &amp;&amp; cat bug.js &amp;&amp; node bug.js\n'use strict';\nconsole.log(function() {\n  var a;\n  return [...a = new Set([1]), null !== a &amp;&amp; void 0 !== a ? a : []];\n}());\n\n[ 1, Set(1) { 1 } ]\n</code></pre></div>\n<p dir=\"auto\">Notice the difference to just running the original script directly:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ node example.js\n[ 1 ]\"><pre class=\"notranslate\"><code>$ node example.js\n[ 1 ]\n</code></pre></div>\n<p dir=\"auto\">While the input syntax may seem odd, it is the result of TypeScript+tsickle running on the following ES2020-&gt;ES2017 code:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function spreadSet() {\n    return [...(new Set([1]) ?? [])];\n}\n\nconsole.log(spreadSet());\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-en\">spreadSet</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">[</span>...<span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Set</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">??</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">spreadSet</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">The incorrect behavior can also be observed in this simpler-to-read code, though it does throw a suspicious code warning:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"console.log(...([1], [2])); // 2\"><pre><span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span>...<span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 2</span></pre></div>\n<p dir=\"auto\">Incorrect emit:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"console.log(...[1], [2]); // 1 [ 2 ]\"><pre><span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span>...<span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 1 [ 2 ]</span></pre></div>\n<p dir=\"auto\">When outputting to ES5 the bug is not observed.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3736",
                                "createdAt": "2020-12-04T21:39:13Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "rules.jarjar: shade apache/tools & kohsuke/args4j",
                "url": "https://github.com/google/closure-compiler/pull/3732",
                "resourcePath": "/google/closure-compiler/pull/3732",
                "createdAt": "2020-11-25T13:54:23Z",
                "number": 3732,
                "mergeCommit": {
                    "oid": "208e53fb7b03a73985deb942442f6a07fe83eb92",
                    "message": "Merge pull request #3732 from robfig:pr_shade_ne_deps\n\nPiperOrigin-RevId: 344313306",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/208e53fb7b03a73985deb942442f6a07fe83eb92",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "7597908ec49ea6db2a4ed879efb776a48c4269fd",
                                "message": "Create lint checks for problematic patterns: Enums\n\nCheck that enum values are string/number and that string enums are statically initialized.\n\nPiperOrigin-RevId: 344190111"
                            },
                            {
                                "oid": "83e819c2e798edbccdf047bdd37250c706c1b8e5",
                                "message": "rules.jarjar: shade apache/tools & kohsuke/args4j\n\nFixes #3731"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "rules.jarjar"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTI3NDYxMzUwOjgzZTgxOWMyZTc5OGVkYmNjZGYwNDdiZGQzNzI1MGM3MDZjMWI4ZTU=",
                                "url": "https://github.com/google/closure-compiler/pull/3732/commits/83e819c2e798edbccdf047bdd37250c706c1b8e5"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3731,
                                "url": "https://github.com/google/closure-compiler/issues/3731",
                                "title": "closure-compiler.jar includes unshaded dependencies",
                                "bodyHTML": "<p dir=\"auto\">The latest (v20201102) closure-compiler.jar includes unshaded dependencies, which causes trouble -- they might be used in preference to the version we would prefer to use and cause breakage at runtime.</p>\n<p dir=\"auto\">Browsing the file listing, I see these:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org/kohsuke/args4j\norg/apache/tools\"><pre class=\"notranslate\"><code>org/kohsuke/args4j\norg/apache/tools\n</code></pre></div>\n<p dir=\"auto\">I believe a simple update to <code class=\"notranslate\">rules.jarjar</code> would shade them. I'm happy to send that CR if you agree with my diagnosis.<br>\nThanks</p>",
                                "resourcePath": "/google/closure-compiler/issues/3731",
                                "createdAt": "2020-11-23T15:49:16Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Re-add the collapsibility check mistakenly removed",
                "url": "https://github.com/google/closure-compiler/pull/3806",
                "resourcePath": "/google/closure-compiler/pull/3806",
                "createdAt": "2021-05-05T12:49:32Z",
                "number": 3806,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CollapseProperties.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjMwNTY1NjgyOjY2MjExZWU1MDM1NGFlNTJhOTcwYjk4OTMxOWE4M2U5NzIyOGQwZDU=",
                                "url": "https://github.com/google/closure-compiler/pull/3806/commits/66211ee50354ae52a970b989319a83e97228d0d5"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3805,
                                "url": "https://github.com/google/closure-compiler/issues/3805",
                                "title": "Compiler Crash on Simple Optimizations",
                                "bodyHTML": "<p dir=\"auto\">Using the nightly build from NPM, I'm getting compiler crashes even in simple mode. I'm going to track down which day this started. There shouldn't be an open source release though until this is resolved.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: NAME $jscomp$getGlobal 88:25  [length: 9] [source_file:  [synthetic:util/global] ]\n\tat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.getVarForNameNode(RemoveUnusedCode.java:891)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNameNode(RemoveUnusedCode.java:746)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:571)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseCall(RemoveUnusedCode.java:803)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:498)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseRemovableAssignValue(RemoveUnusedCode.java:1188)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseAssign(RemoveUnusedCode.java:1148)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:473)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.access$1200(RemoveUnusedCode.java:83)\n\tat com.google.javascript.jscomp.RemoveUnusedCode$Continuation.apply(RemoveUnusedCode.java:1806)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseAndRemoveUnusedReferences(RemoveUnusedCode.java:412)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.process(RemoveUnusedCode.java:386)\n\tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:317)\n\tat com.google.javascript.jscomp.PhaseOptimizer$Loop.process(PhaseOptimizer.java:462)\n\tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:232)\n\tat com.google.javascript.jscomp.Compiler.performOptimizations(Compiler.java:2442)\n\tat com.google.javascript.jscomp.Compiler.lambda$stage2Passes$1(Compiler.java:791)\n\tat com.google.javascript.jscomp.CompilerExecutor.lambda$runInCompilerThread$0(CompilerExecutor.java:101)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.lang.Thread.run(Thread.java:834)\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:519)\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\"><pre lang=\"text\" class=\"notranslate\"><code>java.lang.NullPointerException: NAME $jscomp$getGlobal 88:25  [length: 9] [source_file:  [synthetic:util/global] ]\n\tat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.getVarForNameNode(RemoveUnusedCode.java:891)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNameNode(RemoveUnusedCode.java:746)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:571)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseCall(RemoveUnusedCode.java:803)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:498)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseRemovableAssignValue(RemoveUnusedCode.java:1188)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseAssign(RemoveUnusedCode.java:1148)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:473)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.access$1200(RemoveUnusedCode.java:83)\n\tat com.google.javascript.jscomp.RemoveUnusedCode$Continuation.apply(RemoveUnusedCode.java:1806)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseAndRemoveUnusedReferences(RemoveUnusedCode.java:412)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.process(RemoveUnusedCode.java:386)\n\tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:317)\n\tat com.google.javascript.jscomp.PhaseOptimizer$Loop.process(PhaseOptimizer.java:462)\n\tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:232)\n\tat com.google.javascript.jscomp.Compiler.performOptimizations(Compiler.java:2442)\n\tat com.google.javascript.jscomp.Compiler.lambda$stage2Passes$1(Compiler.java:791)\n\tat com.google.javascript.jscomp.CompilerExecutor.lambda$runInCompilerThread$0(CompilerExecutor.java:101)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.lang.Thread.run(Thread.java:834)\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:519)\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\n</code></pre></div>",
                                "resourcePath": "/google/closure-compiler/issues/3805",
                                "createdAt": "2021-05-05T11:30:10Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Update the --json_streams flag to support the field \"source_map\"",
                "url": "https://github.com/google/closure-compiler/pull/3813",
                "resourcePath": "/google/closure-compiler/pull/3813",
                "createdAt": "2021-05-14T20:41:12Z",
                "number": 3813,
                "mergeCommit": {
                    "oid": "0ff83dc36584d04d3f73ca9b24e3e71cbe40c2d7",
                    "message": "Merge pull request #3813 from ChadKillingsworth:json-streams-fix\n\nPiperOrigin-RevId: 377364551",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/0ff83dc36584d04d3f73ca9b24e3e71cbe40c2d7",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "24c1c273745a1b7408c005e4016e0e15aa15eca0",
                                "message": "Fold Math.imul(a, b) when a and b are constant\n\nPiperOrigin-RevId: 377345693"
                            },
                            {
                                "oid": "fc84a5b856ffb62552dd042cff6cd970b9559266",
                                "message": "Update the --json_streams flag to support the field \"source_map\" in addition to \"sourceMap\"\n\nThe output JSON payload did not match the input payload and the documentation matched neither."
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/AbstractCommandLineRunner.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CommandLineRunner.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/CommandLineRunnerTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ0OTcyMzM4OmZjODRhNWI4NTZmZmI2MjU1MmRkMDQyY2ZmNmNkOTcwYjk1NTkyNjY=",
                                "url": "https://github.com/google/closure-compiler/pull/3813/commits/fc84a5b856ffb62552dd042cff6cd970b9559266"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3811,
                                "url": "https://github.com/google/closure-compiler/issues/3811",
                                "title": "--json_streams `source_map` input is asymmetrical from `sourceMap` output",
                                "bodyHTML": "<p dir=\"auto\">Coming from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"863816523\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/closure-compiler/issues/3801\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/closure-compiler/pull/3801/hovercard\" href=\"https://github.com/google/closure-compiler/pull/3801\">#3801</a></p>\n<p dir=\"auto\">The input json on stdIn uses the format: <code class=\"notranslate\">[{sourceMap:\"\"}]</code><br>\nWhereas the output json on stdOut uses: <code class=\"notranslate\">[{source_map:\"\"}]</code><br>\nAnd the documentation says it is: <code class=\"notranslate\">[{srcmap:\"\"}]</code></p>",
                                "resourcePath": "/google/closure-compiler/issues/3811",
                                "createdAt": "2021-05-09T15:43:15Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        {
                                            "node": {
                                                "name": "good first issue"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Automatically inject the extern definition for a dynamic import alias",
                "url": "https://github.com/google/closure-compiler/pull/3830",
                "resourcePath": "/google/closure-compiler/pull/3830",
                "createdAt": "2021-06-05T18:20:07Z",
                "number": 3830,
                "mergeCommit": {
                    "oid": "18e94038b74bbc9a0bcdb853d66724da6db2afc2",
                    "message": "Merge pull request #3830 from ChadKillingsworth:import-alias-inject\n\nPiperOrigin-RevId: 384505306",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/18e94038b74bbc9a0bcdb853d66724da6db2afc2",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "01a6d586f59612410809d6e6d0545d4ad92c241f",
                                "message": "Propagate all source typenames in the debug info of Colors to improve debugability.\n\nPreviously, only a single name was propagated from one of the many JSTypes that may form the definition of a Color. Now, all names, up to string-equality are available.\n\nAdditionally, filenames are no longer propagated, but string representations of anonymous types are.\n\nOn the Color side, these names are collapsed into a single string with special formatting, to avoid API friction around modeling sets of sets. This same friction is part of the reason filenames are no longer present.\n\nPiperOrigin-RevId: 384492951"
                            },
                            {
                                "oid": "597855ba5d21be681d9c3448546acfea9739a4bc",
                                "message": "Switch to Guava Splitter and update to new synthetic externs methods"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CommandLineRunner.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/RewriteDynamicImports.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/RewriteDynamicImportsTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjYyNTQ0ODMxOjU5Nzg1NWJhNWQyMWJlNjgxZDljMzQ0ODU0NmFjZmVhOTczOWE0YmM=",
                                "url": "https://github.com/google/closure-compiler/pull/3830/commits/597855ba5d21be681d9c3448546acfea9739a4bc"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3829,
                                "url": "https://github.com/google/closure-compiler/issues/3829",
                                "title": "Omitting the extern for a dynamic import alias causes a crash",
                                "bodyHTML": "<p dir=\"auto\">If the <code class=\"notranslate\">--dynamic_import_alias</code> flag is used, but a definition for the alias is not provided, the compiler crashes.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: NAME import 2:0  [length: 41] [source_file: filename.js] : Color{id=0, debugInfo=DebugInfo{className=unknown, filename=}, prototypes=[], instanceColors=[], disambiguationSupertypes=[], invalidating=true, propertiesKeepOriginalName=false, constructor=false, ownProperties=[], boxId=null, closureAssert=false, unionElements=[]}\n\tat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.getVarForNameNode(RemoveUnusedCode.java:891)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNameNode(RemoveUnusedCode.java:746)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:571)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseCall(RemoveUnusedCode.java:803)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:498)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.access$1200(RemoveUnusedCode.java:83)\n\tat com.google.javascript.jscomp.RemoveUnusedCode$Continuation.apply(RemoveUnusedCode.java:1806)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseAndRemoveUnusedReferences(RemoveUnusedCode.java:412)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.process(RemoveUnusedCode.java:386)\n\tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:317)\n\tat com.google.javascript.jscomp.PhaseOptimizer$Loop.process(PhaseOptimizer.java:462)\n\tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:232)\n\tat com.google.javascript.jscomp.Compiler.performOptimizations(Compiler.java:2442)\n\tat com.google.javascript.jscomp.Compiler.lambda$stage2Passes$1(Compiler.java:791)\n\tat com.google.javascript.jscomp.CompilerExecutor.lambda$runInCompilerThread$0(CompilerExecutor.java:101)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.lang.Thread.run(Thread.java:834)\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:519)\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\"><pre lang=\"text\" class=\"notranslate\"><code>java.lang.NullPointerException: NAME import 2:0  [length: 41] [source_file: filename.js] : Color{id=0, debugInfo=DebugInfo{className=unknown, filename=}, prototypes=[], instanceColors=[], disambiguationSupertypes=[], invalidating=true, propertiesKeepOriginalName=false, constructor=false, ownProperties=[], boxId=null, closureAssert=false, unionElements=[]}\n\tat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.getVarForNameNode(RemoveUnusedCode.java:891)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNameNode(RemoveUnusedCode.java:746)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:571)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseCall(RemoveUnusedCode.java:803)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:498)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseChildren(RemoveUnusedCode.java:1301)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseNode(RemoveUnusedCode.java:581)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.access$1200(RemoveUnusedCode.java:83)\n\tat com.google.javascript.jscomp.RemoveUnusedCode$Continuation.apply(RemoveUnusedCode.java:1806)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.traverseAndRemoveUnusedReferences(RemoveUnusedCode.java:412)\n\tat com.google.javascript.jscomp.RemoveUnusedCode.process(RemoveUnusedCode.java:386)\n\tat com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:317)\n\tat com.google.javascript.jscomp.PhaseOptimizer$Loop.process(PhaseOptimizer.java:462)\n\tat com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:232)\n\tat com.google.javascript.jscomp.Compiler.performOptimizations(Compiler.java:2442)\n\tat com.google.javascript.jscomp.Compiler.lambda$stage2Passes$1(Compiler.java:791)\n\tat com.google.javascript.jscomp.CompilerExecutor.lambda$runInCompilerThread$0(CompilerExecutor.java:101)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.lang.Thread.run(Thread.java:834)\n\tat com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:519)\n\tat com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:192)\n</code></pre></div>",
                                "resourcePath": "/google/closure-compiler/issues/3829",
                                "createdAt": "2021-06-05T18:15:31Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Skip devirtualization of @nocollapse prototype methods",
                "url": "https://github.com/google/closure-compiler/pull/3966",
                "resourcePath": "/google/closure-compiler/pull/3966",
                "createdAt": "2022-07-02T23:45:06Z",
                "number": 3966,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/CheckJSDoc.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "src/com/google/javascript/jscomp/DevirtualizeMethods.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/CheckJsDocTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/DevirtualizeMethodsTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOAR-NYM46vza42gAoYTcxZjVjZjU5ZTY3ZDVjNDMwMTRlMmUzMWI0ZDc1M2QxYTVlN2JhOQ",
                                "url": "https://github.com/google/closure-compiler/pull/3966/commits/a71f5cf59e67d5c43014e2e31b4d753d1a5e7ba9"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 2420,
                                "url": "https://github.com/google/closure-compiler/issues/2420",
                                "title": "@nocollapse is not honored by DevirtualizePrototypeMethods",
                                "bodyHTML": "<p dir=\"auto\">As discussed <a href=\"http://stackoverflow.com/questions/43187947/preserve-prototypes-in-advanced-mode/\" rel=\"nofollow\">here</a>, compiler seems to not work properly when using <code class=\"notranslate\">@nocollapse</code> JSDoc tag. The compiler is properly not collapsing objects attributes but is sometimes collapsing objects prototypes when using the tag.</p>\n<p dir=\"auto\">Example of code before compilation :</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/** @constructor */\nfunction MyClass() = { // Some code }\n/** @nocollapse */\nMyClass.someAttribute = function(someParam) { // Some code };\n/** @nocollapse */\nMyClass.prototype.someFunc = function() { // Some code calling someOtherFunc };\n/** @nocollapse */\nMyClass.prototype.someOtherFunc = function(someParam) { // Some code };\"><pre><span class=\"pl-c\">/** <span class=\"pl-k\">@constructor</span> */</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-v\">MyClass</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code }</span>\n<span class=\"pl-c\">/** <span class=\"pl-k\">@nocollapse</span> */</span>\n<span class=\"pl-v\">MyClass</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">someAttribute</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">someParam</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code };</span>\n<span class=\"pl-c\">/** <span class=\"pl-k\">@nocollapse</span> */</span>\n<span class=\"pl-v\">MyClass</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">someFunc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code calling someOtherFunc };</span>\n<span class=\"pl-c\">/** <span class=\"pl-k\">@nocollapse</span> */</span>\n<span class=\"pl-v\">MyClass</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">someOtherFunc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">someParam</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code };</span><span class=\"pl-kos\"></span><span class=\"pl-kos\"></span><span class=\"pl-kos\"></span><span class=\"pl-kos\"></span></pre></div>\n<p dir=\"auto\">Example of code after compilation :</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function MyCompiledClass = { // Some code }\nMyCompiledClass.someCompiledAttribute = function(someParam) { // Some code };\nMyCompiledClass.prototype.someCompiledFunc = function() { // Some code calling someOtherFunc }\nfunction someOtherCompiledFunc(that, someParam) = { // Some code }\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-v\">MyCompiledClass</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code }</span>\n<span class=\"pl-v\">MyCompiledClass</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">someCompiledAttribute</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">someParam</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code };</span>\n<span class=\"pl-v\">MyCompiledClass</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">prototype</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">someCompiledFunc</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">function</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code calling someOtherFunc }</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-s1\">someOtherCompiledFunc</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">that</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">someParam</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// Some code }</span></pre></div>\n<p dir=\"auto\">I've tried to set <code class=\"notranslate\">@this</code> and <code class=\"notranslate\">@preserve</code> tags without success. Using <code class=\"notranslate\">@export</code> is not a good solution.</p>\n<p dir=\"auto\">Compiler flags are :</p>\n<ul dir=\"auto\">\n<li>compilation_level : 'ADVANCED'</li>\n<li>warning_level : 'QUIET'</li>\n<li>language_in : 'ECMASCRIPT5_STRICT'</li>\n</ul>\n<p dir=\"auto\">Google-Closure-Compiler versions tested :</p>\n<ul dir=\"auto\">\n<li>v20160315</li>\n<li>v20170218</li>\n<li>master at <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/closure-compiler/commit/ee44867683988d37c9cdb1b5c9557fe984c87135/hovercard\" href=\"https://github.com/google/closure-compiler/commit/ee44867683988d37c9cdb1b5c9557fe984c87135\"><tt>ee44867</tt></a></li>\n</ul>",
                                "resourcePath": "/google/closure-compiler/issues/2420",
                                "createdAt": "2017-04-10T08:02:03Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove shaded content and restore dependency list to unshaded maven artifact",
                "url": "https://github.com/google/closure-compiler/pull/3935",
                "resourcePath": "/google/closure-compiler/pull/3935",
                "createdAt": "2022-04-14T19:51:26Z",
                "number": 3935,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".github/ci_support/test_closure-compiler-npm.sh"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".github/workflows/ci.yaml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "BUILD.bazel"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "README.md"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "WORKSPACE.bazel"
                            }
                        },
                        {
                            "node": {
                                "changeType": "RENAMED",
                                "path": "maven/closure-compiler-unshaded.pom.xml.tpl"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "package.json"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOAR-NYM42Qe-U2gAoZWY2ODE5OTdkNDBlYTcxYjgyNWYyMjE0Y2JmZmM1ZWQ3Y2E3NTk2NA",
                                "url": "https://github.com/google/closure-compiler/pull/3935/commits/ef681997d40ea71b825f2214cbffc5ed7ca75964"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3896,
                                "url": "https://github.com/google/closure-compiler/issues/3896",
                                "title": "unshaded jar contains Apache Ant, GSON, etc.",
                                "bodyHTML": "<p dir=\"auto\">Reported by Dominic in <a href=\"https://groups.google.com/g/closure-compiler-discuss/c/5ofdcVdWgQs\" rel=\"nofollow\">https://groups.google.com/g/closure-compiler-discuss/c/5ofdcVdWgQs</a></p>\n<p dir=\"auto\">The unshaded jar should not contain copies of dependencies. Instead it should use dependencies from Maven. Copying the important details here:</p>\n<blockquote>\n<p dir=\"auto\">These commands will show you some of the copies included in the latest release:</p>\n<p dir=\"auto\">jar tf ~/.m2/repository/com/google/javascript/closure-compiler-unshaded/v20211107/closure-compiler-unshaded-v20211107.jar | grep 'apache'<br>\njar tf ~/.m2/repository/com/google/javascript/closure-compiler-unshaded/v20211107/closure-compiler-unshaded-v20211107.jar | grep 'gson'</p>\n</blockquote>\n<blockquote>\n<p dir=\"auto\">closure-compiler-unshaded-v20200927.jar was the first release that includes the apache dependencies in the unshaded jar. The gson dependencies have existed since even before that.</p>\n<p dir=\"auto\">The commits in between v20200920 and v20200927 are <a class=\"commit-link\" href=\"https://github.com/google/closure-compiler/compare/v20200920...v20200927\"><tt>v20200920...v20200927</tt></a></p>\n<p dir=\"auto\">Perhaps commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/closure-compiler/commit/c9f3d327be6146a7d4de1f3d7c03feb36f49524a/hovercard\" href=\"https://github.com/google/closure-compiler/commit/c9f3d327be6146a7d4de1f3d7c03feb36f49524a\"><tt>c9f3d32</tt></a> introduced this problem?</p>\n</blockquote>",
                                "resourcePath": "/google/closure-compiler/issues/3896",
                                "createdAt": "2021-12-03T09:49:08Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "help wanted" } },
                                        { "node": { "name": "customer issue" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix useless tests for LiveVariablesAnalysis",
                "url": "https://github.com/google/closure-compiler/pull/3974",
                "resourcePath": "/google/closure-compiler/pull/3974",
                "createdAt": "2022-08-02T09:20:35Z",
                "number": 3974,
                "mergeCommit": null,
                "potentialMergeCommit": {
                    "oid": "3cd2c5cef43c593fb3ec416dd79c6bb22a70f232",
                    "message": "Merge 6383a51ea3354282871326d22f77d3ba18c27a01 into 3c7d61a10032d6042288ff18a724005b768965c1",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/3cd2c5cef43c593fb3ec416dd79c6bb22a70f232",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "3c7d61a10032d6042288ff18a724005b768965c1",
                                "message": "Add DevirtualizeMethods tests for static class fields.\n\nPiperOrigin-RevId: 465131874"
                            },
                            {
                                "oid": "6383a51ea3354282871326d22f77d3ba18c27a01",
                                "message": "Tweak comment"
                            }
                        ]
                    }
                },
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOAR-NYM48fXBh2gAoNjM4M2E1MWVhMzM1NDI4Mjg3MTMyNmQyMmY3N2QzYmExOGMyN2EwMQ",
                                "url": "https://github.com/google/closure-compiler/pull/3974/commits/6383a51ea3354282871326d22f77d3ba18c27a01"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3973,
                                "url": "https://github.com/google/closure-compiler/issues/3973",
                                "title": "Potentially incorrect/useless test case for LiveVariablesAnalysis",
                                "bodyHTML": "<p dir=\"auto\">TL;DR: a test doesn't appear to verify anything useful. No impact on users.</p>\n<p dir=\"auto\">Hi, I was recently looking at the tests for <code class=\"notranslate\">LiveVariablesAnalysis</code> and came across some test cases that appear to be incorrect/useless.<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/closure-compiler/blob/1b7b32d78640297d8814ddabaf971da530c98659/test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java#L360-L368\">closure-compiler/test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 360 to 368\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/closure-compiler/commit/1b7b32d78640297d8814ddabaf971da530c98659\">1b7b32d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L360\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"360\"></td>\n          <td id=\"LC360\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L361\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"361\"></td>\n          <td id=\"LC361\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testArgumentsArray_doesNotEscape_destructuredParams</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L362\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"362\"></td>\n          <td id=\"LC362\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-c\">// These cases also cover a crash related to assuming all RESTs have a NAME child.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L363\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"363\"></td>\n          <td id=\"LC363\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">assertNotEscaped</span>(<span class=\"pl-s\">\"function f([a]) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L364\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"364\"></td>\n          <td id=\"LC364\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">assertNotEscaped</span>(<span class=\"pl-s\">\"function f([a] = []) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L365\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"365\"></td>\n          <td id=\"LC365\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">assertNotEscaped</span>(<span class=\"pl-s\">\"function f(...[a]) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L366\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"366\"></td>\n          <td id=\"LC366\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">assertNotEscaped</span>(<span class=\"pl-s\">\"function f({a}) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L367\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"367\"></td>\n          <td id=\"LC367\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-en\">assertNotEscaped</span>(<span class=\"pl-s\">\"function f({a} = {}) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L368\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"368\"></td>\n          <td id=\"LC368\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nThe assertions appear to test that various destructuring parameters aren't escaped by references to the <code class=\"notranslate\">arguments</code> array. However, the params in the input code will <em>never</em> be considered escaped because they, and the <code class=\"notranslate\">arguments</code> references, are in nested functions; The inputs contain a function e.g. <code class=\"notranslate\">function f([a]) { arguments; }</code> but are then wrapped in another function by <code class=\"notranslate\">computeLiveness</code>:<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/closure-compiler/blob/1b7b32d78640297d8814ddabaf971da530c98659/test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java#L677-L678\">closure-compiler/test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 677 to 678\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/closure-compiler/commit/1b7b32d78640297d8814ddabaf971da530c98659\">1b7b32d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L677\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"677\"></td>\n          <td id=\"LC677\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">src</span> = </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L678\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"678\"></td>\n          <td id=\"LC678\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     (<span class=\"pl-s1\">async</span> ? <span class=\"pl-s\">\"async \"</span> : <span class=\"pl-s\">\"\"</span>) + <span class=\"pl-s\">\"function _FUNCTION(param1, param2 = 1, ...param3){\"</span> + <span class=\"pl-s1\">src</span> + <span class=\"pl-s\">\"}\"</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nwhich then configures <code class=\"notranslate\">ControlFlowAnalysis</code> to not visit nested functions (note the lack of <code class=\"notranslate\">builder.setTraverseFunctions(true)</code>):<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/closure-compiler/blob/1b7b32d78640297d8814ddabaf971da530c98659/test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java#L691-L696\">closure-compiler/test/com/google/javascript/jscomp/LiveVariablesAnalysisTest.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 691 to 696\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/closure-compiler/commit/1b7b32d78640297d8814ddabaf971da530c98659\">1b7b32d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L691\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"691\"></td>\n          <td id=\"LC691\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">ControlFlowGraph</span>&lt;<span class=\"pl-smi\">Node</span>&gt; <span class=\"pl-s1\">cfg</span> = </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L692\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"692\"></td>\n          <td id=\"LC692\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-s1\">ControlFlowAnalysis</span>.<span class=\"pl-en\">builder</span>() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L693\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"693\"></td>\n          <td id=\"LC693\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">setCompiler</span>(<span class=\"pl-s1\">compiler</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L694\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"694\"></td>\n          <td id=\"LC694\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">setCfgRoot</span>(<span class=\"pl-s1\">n</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L695\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"695\"></td>\n          <td id=\"LC695\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">setIncludeEdgeAnnotations</span>(<span class=\"pl-c1\">true</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L696\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"696\"></td>\n          <td id=\"LC696\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">computeCfg</span>(); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nThis means that the params will never be escaped because:</p>\n<ol dir=\"auto\">\n<li>The <code class=\"notranslate\">arguments</code> references are never visited during data flow analysis, so <a href=\"https://github.com/google/closure-compiler/blob/1b7b32d78640297d8814ddabaf971da530c98659/src/com/google/javascript/jscomp/LiveVariablesAnalysis.java#L433\"><code class=\"notranslate\">markAllParametersEscaped</code></a> is never called.</li>\n<li>Even if <code class=\"notranslate\">markAllParametersEscaped</code> were called, the <em>outer</em> params (<code class=\"notranslate\">param1</code>, <code class=\"notranslate\">param2</code>, <code class=\"notranslate\">param3</code>) would be escaped, not the inner params (<code class=\"notranslate\">a</code>).</li>\n</ol>\n<p dir=\"auto\">The issue can be shown by adding the following test cases to LiveVariablesAnalysisTest.java:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assertNotEscaped(&quot;function f(a) { arguments; }&quot;, &quot;a&quot;);\n   assertEscaped(&quot;function f(a) { arguments; }&quot;, &quot;a&quot;);\"><pre><span class=\"pl-en\">assertNotEscaped</span>(<span class=\"pl-s\">\"function f(a) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>);\n   <span class=\"pl-en\">assertEscaped</span>(<span class=\"pl-s\">\"function f(a) { arguments; }\"</span>, <span class=\"pl-s\">\"a\"</span>);</pre></div>\n<p dir=\"auto\">The param <code class=\"notranslate\">a</code> should be escaped because it's a <code class=\"notranslate\">NAME</code> param, and therefore <code class=\"notranslate\">assertNotEscaped</code> should fail and <code class=\"notranslate\">assertEscaped</code> should pass, but the <em>reverse</em> happens.</p>\n<p dir=\"auto\">One way to resolve this would be to add an alternate <code class=\"notranslate\">assertNotEscaped</code> helper function that doesn't wrap the input in a function. I believe this would correct the tests so they verify the intended behaviour.</p>\n<p dir=\"auto\">If you agree with the above, I'm happy to open a PR to explore the aforementioned fix.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3973",
                                "createdAt": "2022-07-30T05:08:26Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "internal cleanup"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Adjust types for crypto.getRandomValues",
                "url": "https://github.com/google/closure-compiler/pull/3906",
                "resourcePath": "/google/closure-compiler/pull/3906",
                "createdAt": "2022-01-11T00:28:13Z",
                "number": 3906,
                "mergeCommit": {
                    "oid": "decb8ac19e760dc47113d16f397355827f1f58fa",
                    "message": "Merge pull request #3906 from LiviaMedeiros:adjust-getRandomValues-v2\n\nPiperOrigin-RevId: 421862673",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/decb8ac19e760dc47113d16f397355827f1f58fa",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "1e5986224c6badf78173f122aaa5b53c3587d4ce",
                                "message": "Internal change\n\nPiperOrigin-RevId: 421855236"
                            },
                            {
                                "oid": "8cf19f1599f6e6757ec70174da49fc45df420c5b",
                                "message": "Adjust types for crypto.getRandomValues\n\nThe union type is \"any `TypedArray` but not `Float32Array` nor `Float64Array`\" according to specifications."
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_webcrypto.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOAR-NYM4wxBEh2gAoOGNmMTlmMTU5OWY2ZTY3NTdlYzcwMTc0ZGE0OWZjNDVkZjQyMGM1Yg",
                                "url": "https://github.com/google/closure-compiler/pull/3906/commits/8cf19f1599f6e6757ec70174da49fc45df420c5b"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3905,
                                "url": "https://github.com/google/closure-compiler/issues/3905",
                                "title": "Wrong types in Crypto.getRandomValues",
                                "bodyHTML": "<h3 dir=\"auto\">The \"real life\" problem:</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const randomBinaryString8 = String.fromCharCode(...crypto.getRandomValues(new Uint16Array(4)));\nconsole.log(randomBinaryString8);\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">randomBinaryString8</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">String</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">fromCharCode</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">crypto</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getRandomValues</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Uint16Array</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">4</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">randomBinaryString8</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ java -jar closure-compiler-v20220104.jar -O ADVANCED -W VERBOSE --formatting PRETTY_PRINT --language_out ECMASCRIPT_NEXT good.js\ngood.js:1:51: WARNING - [JSC_TYPE_MISMATCH] Spread operator only applies to Iterable types\nfound   : ArrayBufferView\nrequired: Iterable\n  1| const randomBinaryString8 = String.fromCharCode(...crypto.getRandomValues(new Uint16Array(4)));\n                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n0 error(s), 1 warning(s), 100.0% typed\nconst a = String.fromCharCode(...crypto.getRandomValues(new Uint16Array(4)));\nconsole.log(a);\"><pre>$ java -jar closure-compiler-v20220104.jar -O ADVANCED -W VERBOSE --formatting PRETTY_PRINT --language_out ECMASCRIPT_NEXT good.js\ngood.js:1:51: WARNING - [JSC_TYPE_MISMATCH] Spread operator only applies to Iterable types\nfound   <span class=\"pl-c1\">:</span> ArrayBufferView\nrequired: Iterable\n  1<span class=\"pl-k\">|</span> const randomBinaryString8 = String.fromCharCode(...crypto.getRandomValues(new Uint16Array(4)))<span class=\"pl-k\">;</span>\n                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n0 error(s), 1 warning(s), 100.0% typed\nconst a = String.fromCharCode(...crypto.getRandomValues(new Uint16Array(4)))<span class=\"pl-k\">;</span>\nconsole.log(a)<span class=\"pl-k\">;</span></pre></div>\n<p dir=\"auto\">Also a problem:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const throwme = crypto.getRandomValues(new DataView(new ArrayBuffer(8))); // obvious TypeMismatchError\nconsole.log(throwme);\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">throwme</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">crypto</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getRandomValues</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">DataView</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">ArrayBuffer</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">8</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// obvious TypeMismatchError</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">throwme</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ java -jar closure-compiler-v20220104.jar -O ADVANCED -W VERBOSE --formatting PRETTY_PRINT --language_out ECMASCRIPT_NEXT bad.js\nconst a = crypto.getRandomValues(new DataView(new ArrayBuffer(8)));\nconsole.log(a);\"><pre>$ java -jar closure-compiler-v20220104.jar -O ADVANCED -W VERBOSE --formatting PRETTY_PRINT --language_out ECMASCRIPT_NEXT bad.js\nconst a = crypto.getRandomValues(new DataView(new ArrayBuffer(8)))<span class=\"pl-k\">;</span>\nconsole.log(a)<span class=\"pl-k\">;</span></pre></div>\n<h3 dir=\"auto\">The reason:</h3>\n<p dir=\"auto\">closure-compiler thinks that <code class=\"notranslate\">Crypto.getRandomValues</code> takes and returns generic <code class=\"notranslate\">ArrayBufferView</code>, which:</p>\n<ul dir=\"auto\">\n<li>doesn't implement everything <code class=\"notranslate\">TypedArray</code> has, e.g. array methods</li>\n<li>can be <code class=\"notranslate\">Float##Array</code> or even <code class=\"notranslate\">DataView</code></li>\n</ul>\n<p dir=\"auto\">According to <a href=\"https://www.w3.org/TR/WebCryptoAPI/#Crypto-method-getRandomValues\" rel=\"nofollow\">W3C docs</a>, it must throw <code class=\"notranslate\">TypeMismatchError</code> if argument isn't an integer-based (well, or bigint-based) array.<br>\nAccording to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\" rel=\"nofollow\">MDN docs</a>, it takes and returns integer-based <code class=\"notranslate\">TypedArray</code> as well.</p>\n<h3 dir=\"auto\">Proposed solution:</h3>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"diff --git a/externs/browser/w3c_webcrypto.js b/externs/browser/w3c_webcrypto.js\n--- a/externs/browser/w3c_webcrypto.js\n+++ b/externs/browser/w3c_webcrypto.js\n@@ -796,8 +796,8 @@ webCrypto.Crypto = function() {};\n \n /**\n  * @see https://developer.mozilla.org/en/DOM/window.crypto.getRandomValues\n- * @param {!ArrayBufferView} typedArray\n- * @return {!ArrayBufferView}\n+ * @param {!TypedArray} typedArray\n+ * @return {!TypedArray}\n  * @throws {Error}\n  */\n webCrypto.Crypto.prototype.getRandomValues = function(typedArray) {};\"><pre><span class=\"pl-c1\">diff --git a/externs/browser/w3c_webcrypto.js b/externs/browser/w3c_webcrypto.js</span>\n<span class=\"pl-md\">--- a/externs/browser/w3c_webcrypto.js</span>\n<span class=\"pl-mi1\">+++ b/externs/browser/w3c_webcrypto.js</span>\n<span class=\"pl-mdr\">@@ -796,8 +796,8 @@</span> webCrypto.Crypto = function() {};\n \n /**\n  * @see https://developer.mozilla.org/en/DOM/window.crypto.getRandomValues\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> * @param {!ArrayBufferView} typedArray</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> * @return {!ArrayBufferView}</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> * @param {!TypedArray} typedArray</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> * @return {!TypedArray}</span>\n  * @throws {Error}\n  */\n webCrypto.Crypto.prototype.getRandomValues = function(typedArray) {};</pre></div>\n<p dir=\"auto\">Or in ugly way to raise warning for <code class=\"notranslate\">Float32Array</code> and <code class=\"notranslate\">Float64Array</code> (totes uncommon mistake):</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"- * @param {!ArrayBufferView} typedArray\n- * @return {!ArrayBufferView}\n+ * @param {!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!BigInt64Array|!BigUint64Array} typedArray\n+ * @return {!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!BigInt64Array|!BigUint64Array}\"><pre><span class=\"pl-md\"><span class=\"pl-md\">-</span> * @param {!ArrayBufferView} typedArray</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> * @return {!ArrayBufferView}</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> * @param {!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!BigInt64Array|!BigUint64Array} typedArray</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> * @return {!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!BigInt64Array|!BigUint64Array}</span></pre></div>\n<p dir=\"auto\">PR for any of these is ready to be opened.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3905",
                                "createdAt": "2022-01-08T19:37:49Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Allow URL objects in methods expecting a url-string",
                "url": "https://github.com/google/closure-compiler/pull/3920",
                "resourcePath": "/google/closure-compiler/pull/3920",
                "createdAt": "2022-02-21T09:45:25Z",
                "number": 3920,
                "mergeCommit": {
                    "oid": "3151c3404bff26701f745929681b3b5fc0d054a7",
                    "message": "Merge pull request #3920 from LiviaMedeiros:patch-urlstring\n\nPiperOrigin-RevId: 448258686",
                    "commitUrl": "https://github.com/google/closure-compiler/commit/3151c3404bff26701f745929681b3b5fc0d054a7",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "ad70fe101e8ea7f7a32b985452ab679c8f33e224",
                                "message": "Merge pull request #3939 from treblereel:MediaQueryListEvent\n\nPiperOrigin-RevId: 448258664"
                            },
                            {
                                "oid": "78d7ebbe5f5b47302e2090689ff21ce897588527",
                                "message": "Allow URL objects in more methods expecting a url-string"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/fetchapi.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/gecko_dom.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/html5.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/url.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_dom2.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_eventsource.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_serviceworker.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_worklets.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/w3c_xml.js"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "externs/browser/webstorage.js"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOAR-NYM4zN0vo2gAoNzhkN2ViYmU1ZjViNDczMDJlMjA5MDY4OWZmMjFjZTg5NzU4ODUyNw",
                                "url": "https://github.com/google/closure-compiler/pull/3920/commits/78d7ebbe5f5b47302e2090689ff21ce897588527"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3919,
                                "url": "https://github.com/google/closure-compiler/issues/3919",
                                "title": "url params are not accepting URL objects",
                                "bodyHTML": "<p dir=\"auto\">A lot of networking methods in JS are accepting any stringable objects as url-string arguments.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const amStringable = {toString: () =&gt; 'https://example.com'};\nfetch(amStringable).then(response =&gt; console.log(response.url)); // 'https://example.com/' if fetched\n\n/* closure-compiler warns:\nWARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of fetch does not match formal parameter\nfound   : {}\nrequired: (Request|string)\n*/\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">amStringable</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span><span class=\"pl-en\">toString</span>: <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s\">'https://example.com'</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">amStringable</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 'https://example.com/' if fetched</span>\n\n<span class=\"pl-c\">/* closure-compiler warns:</span>\n<span class=\"pl-c\">WARNING - [JSC_TYPE_MISMATCH] actual parameter 1 of fetch does not match formal parameter</span>\n<span class=\"pl-c\">found   : {}</span>\n<span class=\"pl-c\">required: (Request|string)</span>\n<span class=\"pl-c\">*/</span></pre></div>\n<p dir=\"auto\">Most implementations are de facto omnivorous: browsers are casting everything to strings and in case of error happily use <code class=\"notranslate\">undefined</code>, <code class=\"notranslate\">null</code> and <code class=\"notranslate\">[object%20Object]</code>. Usually this is an undesirable outcome, and closure-compiler saves the day with strict typechecking for strings only.</p>\n<p dir=\"auto\">However, <a href=\"https://url.spec.whatwg.org/#url-class\" rel=\"nofollow\">URL</a> objects should be acceptable.<br>\nAside from other advantages over raw strings, these objects come with validation and proper encodings. Using them directly as parameters would reinforce safety.</p>\n<p dir=\"auto\">Therefore, I propose replacing <code class=\"notranslate\">string</code> with <code class=\"notranslate\">!URL|string</code> in externs, whenever method expects an url-string and allows such objects.</p>",
                                "resourcePath": "/google/closure-compiler/issues/3919",
                                "createdAt": "2022-02-13T05:30:13Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    }
]
