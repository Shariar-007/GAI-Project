[{"repository":{"pullRequest":{"title":"Change implementation of ExceptionFactory to explicitly test for dependent classes","url":"https://github.com/mockito/mockito/pull/1723","resourcePath":"/mockito/mockito/pull/1723","createdAt":"2019-06-06T00:34:10Z","number":1723,"mergeCommit":{"oid":"e11a31c98d16220c073378c8d197cbe3f5381013","message":"Change implementation of ExceptionFactory to explicitly test for the presence of dependent classes (#1723)\n\nChange implementation of ExceptionFactory to explicitly test for the presence of dependent classes, rather than depending on the implicit classloading behaviour. This is necessary as Android classloading behaviour is slightly different.\r\n\r\nFixes #1716","commitUrl":"https://github.com/mockito/mockito/commit/e11a31c98d16220c073378c8d197cbe3f5381013","parents":{"nodes":[{"oid":"2629096960474981558ce133c008410ee46fd529","message":"3.0.2 release (previous 3.0.1) + release notes updated by CI build 4146\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/junit/ExceptionFactory.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjg1NjAwNDMyOmYzZmMyZmVkZTI1YTFkMDU1NWM4MTk1MjNkZWZmYWM1NDE2YTNmNjg=","url":"https://github.com/mockito/mockito/pull/1723/commits/f3fc2fede25a1d0555c819523deffac5416a3f68"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1716,"url":"https://github.com/mockito/mockito/issues/1716","title":"mockito-android 2.26+ tries to use missing opentest4j exceptions","bodyHTML":"<p dir=\"auto\">It appears that Mockito <code class=\"notranslate\">2.26+</code> on Android tries to use exceptions from OpenTest4j, even when OpenTest4j is not used, resulting in tests crashing due to exceptions classes not being found.</p>\n<p dir=\"auto\">Steps to reproduce:</p>\n<ol dir=\"auto\">\n<li>Open <a href=\"https://github.com/mockito/mockito/files/3215946/MockitoAndroidDemo.zip\">MockitoAndroidDemo</a> project in Android Studio</li>\n<li>Run <code class=\"notranslate\">ExampleInstrumentedTest.java</code> test on android device/emulator</li>\n<li>Test will crash with <code class=\"notranslate\">java.lang.NoClassDefFoundError: Failed resolution of: Lorg/opentest4j/AssertionFailedError</code></li>\n</ol>\n<p dir=\"auto\">Lowering version to <code class=\"notranslate\">2.25.0</code> fixes the issue</p>","resourcePath":"/mockito/mockito/issues/1716","createdAt":"2019-05-24T08:44:54Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Minor bug fixes","url":"https://github.com/mockito/mockito/pull/1760","resourcePath":"/mockito/mockito/pull/1760","createdAt":"2019-08-16T14:31:05Z","number":1760,"mergeCommit":{"oid":"53324f6b34a279624012967f231d25e5ac304537","message":"Fix issues in JavaDoc (#1760)\n\nFixes #1747: removed typo\r\nFixes #1513: Added missing tag to fix javadoc","commitUrl":"https://github.com/mockito/mockito/commit/53324f6b34a279624012967f231d25e5ac304537","parents":{"nodes":[{"oid":"7041ad81250c6512d525a84add039cd2dd3441b4","message":"Remove JDK env from Travis configuration (#1752)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mockito.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzA4MDk4Nzg2OjZmM2YzODg5MjYyZGY1MWZkNDMwMzBlYzM1MzliNDhlNWQ0YTVlNWM=","url":"https://github.com/mockito/mockito/pull/1760/commits/6f3f3889262df51fd43030ec3539b48e5d4a5e5c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1513,"url":"https://github.com/mockito/mockito/issues/1513","title":"Mockito docs / javadocs - monospaced font all over the place after point 44","bodyHTML":"<p dir=\"auto\">The brilliant Mockito javadocs are less brilliant than usual, because after<br>\n<a href=\"https://static.javadoc.io/org.mockito/mockito-core/2.23.0/org/mockito/Mockito.html#mockito_instantiator_provider_deprecation\" rel=\"nofollow\">44. Deprecated org.mockito.plugins.InstantiatorProvider as it was leaking internal API. it was replaced by org.mockito.plugins.InstantiatorProvider2 (Since 2.15.4)</a><br>\nalmost everything is written with monospaced font which reduces readability. Apparently some closing tag is missing.</p>","resourcePath":"/mockito/mockito/issues/1513","createdAt":"2018-10-08T12:28:23Z","labels":{"edges":[]}}},{"node":{"number":1747,"url":"https://github.com/mockito/mockito/issues/1747","title":"Typo in error message ","bodyHTML":"<p dir=\"auto\"><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/885e69420baa2a382f4394b85dc84cb6fe17fff6/src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java#L219\">mockito/src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 219\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mockito/mockito/commit/885e69420baa2a382f4394b85dc84cb6fe17fff6\">885e694</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L219\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"219\"></td>\n          <td id=\"LC219\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">mockable</span>.<span class=\"pl-en\">nonMockableReason</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"VM does not not support modification of given type\"</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">\"VM does not not support modification of given type\"<br>\nshould be<br>\n\"VM does not support modification of given type\"</p>","resourcePath":"/mockito/mockito/issues/1747","createdAt":"2019-07-26T14:18:04Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Upgraded JUnit Jupiter 5.1.1 -> 5.4.2","url":"https://github.com/mockito/mockito/pull/1788","resourcePath":"/mockito/mockito/pull/1788","createdAt":"2019-09-28T01:31:15Z","number":1788,"mergeCommit":{"oid":"112919971c0a985b0918a2e0c29b145c14e0d7d8","message":"Merge pull request #1788 from mockito/parallel\n\nUpgraded JUnit Jupiter 5.1.1 -> 5.4.2","commitUrl":"https://github.com/mockito/mockito/commit/112919971c0a985b0918a2e0c29b145c14e0d7d8","parents":{"nodes":[{"oid":"bcf41fdf9c977eca75b96f49a1567052851434a7","message":"3.0.10 release (previous 3.0.9) + release notes updated by CI build 4201\n\n[ci skip-release]"},{"oid":"939ab5cb06a4d89d9159a69447a5e6b8cbed70d3","message":"Bumped JUnit Jupiter and added a test\n\nAdded a test to enhance coverage. We need higher version of JUnit Jupiter to reproduce and fix #1630"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}},{"node":{"changeType":"ADDED","path":"subprojects/junit-jupiter/src/test/java/org/mockitousage/MultiLevelNestedTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIyMzcxNTYyOjkzOWFiNWNiMDZhNGQ4OWQ5MTU5YTY5NDQ3YTVlNmI4Y2JlZDcwZDM=","url":"https://github.com/mockito/mockito/pull/1788/commits/939ab5cb06a4d89d9159a69447a5e6b8cbed70d3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1630,"url":"https://github.com/mockito/mockito/issues/1630","title":"Mockito JUnit Jupiter extension does not correctly support parallel test execution","bodyHTML":"<p dir=\"auto\">Sorry for not being able to provide the required information, but we just noticed that the MockitoExtension (mockito-junit-jupiter 2.24.5) leads to spurious test failures (e.g. due to calls to mocks not being recorded) when using \"junit.jupiter.execution.parallel.enabled=true\" with surefire. Prior we used our much simpler MockitoExtension which works fine in the same situation:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MockitoExtension implements Extension, TestInstancePostProcessor, AfterEachCallback {\n   @Override\n   public void postProcessTestInstance(Object testInstance, ExtensionContext context) {\n      MockitoAnnotations.initMocks(testInstance);\n   }\n\n   @Override\n   public void afterEach(ExtensionContext extensionContext) throws Exception {\n      Mockito.validateMockitoUsage();\n   }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoExtension</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">Extension</span>, <span class=\"pl-smi\">TestInstancePostProcessor</span>, <span class=\"pl-smi\">AfterEachCallback</span> {\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">postProcessTestInstance</span>(<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">testInstance</span>, <span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">context</span>) {\n      <span class=\"pl-s1\">MockitoAnnotations</span>.<span class=\"pl-en\">initMocks</span>(<span class=\"pl-s1\">testInstance</span>);\n   }\n\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">afterEach</span>(<span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">extensionContext</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n      <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">validateMockitoUsage</span>();\n   }\n}</pre></div>","resourcePath":"/mockito/mockito/issues/1630","createdAt":"2019-02-25T12:54:15Z","labels":{"edges":[{"node":{"name":"junit5"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Convenience factory method for creating stub objects","url":"https://github.com/mockito/mockito/pull/1779","resourcePath":"/mockito/mockito/pull/1779","createdAt":"2019-09-14T02:15:25Z","number":1779,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mockito.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/MockitoTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzE3NTI2OTA3OmNhZmM5YjEyMzI4YmUyMDlmMGIzYjIyY2E1OWJiYjNkY2YxNDY5ZmI=","url":"https://github.com/mockito/mockito/pull/1779/commits/cafc9b12328be209f0b3b22ca59bbb3dcf1469fb"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1778,"url":"https://github.com/mockito/mockito/issues/1778","title":"Convenience factory for stubs","bodyHTML":"<p dir=\"auto\">A <code class=\"notranslate\">stub(Class)</code> factory method on the <code class=\"notranslate\">Mockito</code> class would be a convenient way to create stub-only objects:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"List stub = stub(List.class);\"><pre class=\"notranslate\"><code>List stub = stub(List.class);\n</code></pre></div>\n<p dir=\"auto\">Such a factory method improves the clarity of test code by succinctly communicating the test author's intent for the test-double.</p>","resourcePath":"/mockito/mockito/issues/1778","createdAt":"2019-09-14T01:59:08Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #1780: Close file handle to avoid a file-handle-leak","url":"https://github.com/mockito/mockito/pull/1781","resourcePath":"/mockito/mockito/pull/1781","createdAt":"2019-09-17T14:28:33Z","number":1781,"mergeCommit":{"oid":"9ceb2d18514aac435d4a74e758624803b604e27f","message":"Fixes #1780: Close file handle to avoid a file-handle-leak (#1781)","commitUrl":"https://github.com/mockito/mockito/commit/9ceb2d18514aac435d4a74e758624803b604e27f","parents":{"nodes":[{"oid":"f964c374d73e89795778440db9b89d696ac87f92","message":"Remove no longer used Assertor (#1777)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzE4MzY4ODg3OjA5NzM1ZmJkNzRjNjNlMmIyMjEzMWU3OGNmMDE5OTMxZTg1ZTY0ZWE=","url":"https://github.com/mockito/mockito/pull/1781/commits/09735fbd74c63e2b22131e78cf019931e85e64ea"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1780,"url":"https://github.com/mockito/mockito/issues/1780","title":"File-handle leak in InlineByteBuddyMockMaker","bodyHTML":"<p dir=\"auto\">Using <a href=\"https://file-leak-detector.kohsuke.org/\" rel=\"nofollow\">file-leak-detector</a> when running unit-tests using mockito-3.0.0 we see a file-handle-leak being reported in <code class=\"notranslate\">InlineByteBuddyMockMaker.&lt;clinit&gt;</code> which can easily be fixed by closing the JarFile after usage properly.</p>\n<p dir=\"auto\">I'll send a PR shortly.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\tat java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:156)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:166)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:130)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.&lt;clinit&gt;(InlineByteBuddyMockMaker.java:138)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)```\"><pre lang=\"#2\" class=\"notranslate\"><code>\tat java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:156)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:166)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:130)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.&lt;clinit&gt;(InlineByteBuddyMockMaker.java:138)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)```\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1780","createdAt":"2019-09-17T14:17:02Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixed JUnit Jupiter parallel issue","url":"https://github.com/mockito/mockito/pull/1789","resourcePath":"/mockito/mockito/pull/1789","createdAt":"2019-09-28T22:08:17Z","number":1789,"mergeCommit":{"oid":"30c50fa3442004996dc9c7b2bcfdae7aaaae3ce6","message":"Merge pull request #1789 from mockito/sf\n\nFixed JUnit Jupiter parallel issue","commitUrl":"https://github.com/mockito/mockito/commit/30c50fa3442004996dc9c7b2bcfdae7aaaae3ce6","parents":{"nodes":[{"oid":"214d4652aa1971cb554c434b0ac13b376aea33a7","message":"3.0.11 release (previous 3.0.10) + release notes updated by CI build 4203\n\n[ci skip-release]"},{"oid":"5ed8a07f6ff4d9b5d3011e1891cf12119eb61684","message":"Cleanup traversal of parent contexts"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"settings.gradle.kts"}},{"node":{"changeType":"MODIFIED","path":"subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"}},{"node":{"changeType":"ADDED","path":"subprojects/junitJupiterParallelTest/junitJupiterParallelTest.gradle"}},{"node":{"changeType":"ADDED","path":"subprojects/junitJupiterParallelTest/src/test/java/org/mockito/ParallelBugTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/junitJupiterParallelTest/src/test/resources/junit-platform.properties"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIyNDQ5OTk1OjVlZDhhMDdmNmZmNGQ5YjVkMzAxMWUxODkxY2YxMjExOWViNjE2ODQ=","url":"https://github.com/mockito/mockito/pull/1789/commits/5ed8a07f6ff4d9b5d3011e1891cf12119eb61684"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1630,"url":"https://github.com/mockito/mockito/issues/1630","title":"Mockito JUnit Jupiter extension does not correctly support parallel test execution","bodyHTML":"<p dir=\"auto\">Sorry for not being able to provide the required information, but we just noticed that the MockitoExtension (mockito-junit-jupiter 2.24.5) leads to spurious test failures (e.g. due to calls to mocks not being recorded) when using \"junit.jupiter.execution.parallel.enabled=true\" with surefire. Prior we used our much simpler MockitoExtension which works fine in the same situation:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MockitoExtension implements Extension, TestInstancePostProcessor, AfterEachCallback {\n   @Override\n   public void postProcessTestInstance(Object testInstance, ExtensionContext context) {\n      MockitoAnnotations.initMocks(testInstance);\n   }\n\n   @Override\n   public void afterEach(ExtensionContext extensionContext) throws Exception {\n      Mockito.validateMockitoUsage();\n   }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoExtension</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">Extension</span>, <span class=\"pl-smi\">TestInstancePostProcessor</span>, <span class=\"pl-smi\">AfterEachCallback</span> {\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">postProcessTestInstance</span>(<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">testInstance</span>, <span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">context</span>) {\n      <span class=\"pl-s1\">MockitoAnnotations</span>.<span class=\"pl-en\">initMocks</span>(<span class=\"pl-s1\">testInstance</span>);\n   }\n\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">afterEach</span>(<span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">extensionContext</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n      <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">validateMockitoUsage</span>();\n   }\n}</pre></div>","resourcePath":"/mockito/mockito/issues/1630","createdAt":"2019-02-25T12:54:15Z","labels":{"edges":[{"node":{"name":"junit5"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix typo in the wiki link","url":"https://github.com/mockito/mockito/pull/1798","resourcePath":"/mockito/mockito/pull/1798","createdAt":"2019-10-05T08:57:05Z","number":1798,"mergeCommit":{"oid":"e4b27d1d99800b09c757ec1854a70f8c295943cd","message":"Fix typo in the wiki link (#1798)\n\nFixes #1791","commitUrl":"https://github.com/mockito/mockito/commit/e4b27d1d99800b09c757ec1854a70f8c295943cd","parents":{"nodes":[{"oid":"ded29efbfbd7be6e3a0a2fdae07d370d099be625","message":"Create SECURITY.md\n\nIt is required for Tidelift"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mockito.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzI0OTIxNDU5OjEyNTBiYmE3NWI2YjI3ZDE4YjE4MzU3ZTFhNmY1N2FjMmQ4NmUyYWI=","url":"https://github.com/mockito/mockito/pull/1798/commits/1250bba75b6b27d18b18357e1a6f57ac2d86e2ab"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1791,"url":"https://github.com/mockito/mockito/issues/1791","title":"Typo in Mockito.java Javadoc: \"verification\" in wiki link","bodyHTML":"<p dir=\"auto\"><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/f8581c6e875dc3fb587fe31e85d025ef4d110a3f/src/main/java/org/mockito/Mockito.java#L2579\">mockito/src/main/java/org/mockito/Mockito.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 2579\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mockito/mockito/commit/f8581c6e875dc3fb587fe31e85d025ef4d110a3f\">f8581c6</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2579\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2579\"></td>\n          <td id=\"LC2579\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">     * &lt;a href=\"https://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verfication-InOrder\"&gt;this wiki page&lt;/a&gt;.</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">There's a missing \"i\" in the wiki link:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"https://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verfication-InOrder\nhttps://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verification-InOrder\"><pre class=\"notranslate\"><code>https://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verfication-InOrder\nhttps://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verification-InOrder\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1791","createdAt":"2019-09-30T19:34:37Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #1769: Clarify default strict stubbing behaviour in 3.0.0","url":"https://github.com/mockito/mockito/pull/1773","resourcePath":"/mockito/mockito/pull/1773","createdAt":"2019-09-04T18:05:08Z","number":1773,"mergeCommit":{"oid":"349df70515a1d72ea9af951bc81a1926a557e2ec","message":"Fixes #1769: Clarify default strict stubbing behaviour in 3.0.0 (#1773)","commitUrl":"https://github.com/mockito/mockito/commit/349df70515a1d72ea9af951bc81a1926a557e2ec","parents":{"nodes":[{"oid":"25119e12946d5e79a003b4e778436a647a2faef4","message":"Update assertj (v3.13.2) (#1765)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/quality/Strictness.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzE0MTU3NDc5OjhmMjA5N2NhMWU2MDRiYzllOGY1MGUxZjk3NTk2MmI3Y2I1OWU1ZTY=","url":"https://github.com/mockito/mockito/pull/1773/commits/8f2097ca1e604bc9e8f50e1f975962b7cb59e5e6"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1769,"url":"https://github.com/mockito/mockito/issues/1769","title":"Are strict stubs really the default in v3?","bodyHTML":"<p dir=\"auto\">The Strictness.STRICT_STUBS javadoc reads: \"Planned as default for Mockito v3.\".</p>\n<p dir=\"auto\">I'm using \"org.mockito:mockito-core:3.0.0\" and strict stubs do not seem to be the default behaviour. Are they actually going to be the default in any release soon?</p>","resourcePath":"/mockito/mockito/issues/1769","createdAt":"2019-09-03T19:27:11Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Cleaned up state after stubbing misuse exception","url":"https://github.com/mockito/mockito/pull/1783","resourcePath":"/mockito/mockito/pull/1783","createdAt":"2019-09-25T00:53:55Z","number":1783,"mergeCommit":{"oid":"28bce89b411ffb58387b3208acfae43a31022172","message":"Merge pull request #1783 from mockito/sf\n\nCleaned up state after stubbing misuse exception","commitUrl":"https://github.com/mockito/mockito/commit/28bce89b411ffb58387b3208acfae43a31022172","parents":{"nodes":[{"oid":"98e8743b6b5c0cca64cf3cb3c46a9b96b25fd9b6","message":"3.0.8 release (previous 3.0.7) + release notes updated by CI build 4190\n\n[ci skip-release]"},{"oid":"d61e70afc0fc78b4a940a5a2a99e28586d9aa42c","message":"Cleaned up state after stubbing misuse exception\n\nFixes #1655"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/StubberImpl.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockitousage/stubbing/MisusingStubbingTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIxMDE3Mjk2OmQ2MWU3MGFmYzBmYzc4YjRhOTQwYTVhMmE5OWUyODU4NmQ5YWE0MmM=","url":"https://github.com/mockito/mockito/pull/1783/commits/d61e70afc0fc78b4a940a5a2a99e28586d9aa42c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1655,"url":"https://github.com/mockito/mockito/issues/1655","title":"Stubbing not stopped properly when running suite of tests","bodyHTML":"<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">I'm not sure the title describes the problem in the best way but I found the following.</p>\n<p dir=\"auto\">Consider the two tests:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MockitoMisusingUnitTest {\n\n    @Test\n    public void givenNotASpy_whenDoReturn_thenThrowNotAMock() {\n        try {\n            List&lt;String&gt; list = new ArrayList&lt;String&gt;();\n\n            Mockito.doReturn(100, Mockito.withSettings().lenient())\n                .when(list)\n                .size();\n\n            fail(&quot;Should have thrown a NotAMockException because 'list' is not a mock!&quot;);\n        } catch (NotAMockException e) {\n            assertThat(e.getMessage(), containsString(&quot;Argument passed to when() is not a mock!&quot;));\n        }\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoMisusingUnitTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">givenNotASpy_whenDoReturn_thenThrowNotAMock</span>() {\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">list</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArrayList</span>&lt;<span class=\"pl-smi\">String</span>&gt;();\n\n            <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">doReturn</span>(<span class=\"pl-c1\">100</span>, <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">withSettings</span>().<span class=\"pl-en\">lenient</span>())\n                .<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">list</span>)\n                .<span class=\"pl-en\">size</span>();\n\n            <span class=\"pl-en\">fail</span>(<span class=\"pl-s\">\"Should have thrown a NotAMockException because 'list' is not a mock!\"</span>);\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">NotAMockException</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">e</span>.<span class=\"pl-en\">getMessage</span>(), <span class=\"pl-en\">containsString</span>(<span class=\"pl-s\">\"Argument passed to when() is not a mock!\"</span>));\n        }\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@RunWith(MockitoJUnitRunner.class)\npublic class MockitoVoidMethodsUnitTest {\n\n    @Test\n    public void whenAddCalledValueCaptured() {\n        ArrayList&lt;String&gt; mockVoid = mock(ArrayList.class);\n        ArgumentCaptor&lt;String&gt; valueCapture = ArgumentCaptor.forClass(String.class);\n        doNothing().when(mockVoid).add(any(Integer.class), valueCapture.capture());\n        mockVoid.add(0, &quot;captured&quot;);\n        assertEquals(&quot;captured&quot;, valueCapture.getValue());\n    }\n\n}\"><pre><span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-s1\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoVoidMethodsUnitTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">whenAddCalledValueCaptured</span>() {\n        <span class=\"pl-smi\">ArrayList</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">mockVoid</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">ArrayList</span>.<span class=\"pl-s1\">class</span>);\n        <span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">valueCapture</span> = <span class=\"pl-s1\">ArgumentCaptor</span>.<span class=\"pl-en\">forClass</span>(<span class=\"pl-smi\">String</span>.<span class=\"pl-s1\">class</span>);\n        <span class=\"pl-en\">doNothing</span>().<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mockVoid</span>).<span class=\"pl-en\">add</span>(<span class=\"pl-en\">any</span>(<span class=\"pl-smi\">Integer</span>.<span class=\"pl-s1\">class</span>), <span class=\"pl-s1\">valueCapture</span>.<span class=\"pl-en\">capture</span>());\n        <span class=\"pl-s1\">mockVoid</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-s\">\"captured\"</span>);\n        <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-s\">\"captured\"</span>, <span class=\"pl-s1\">valueCapture</span>.<span class=\"pl-en\">getValue</span>());\n    }\n\n}</pre></div>\n<p dir=\"auto\">When run independently pass. When run together from eclipse or mvn the second test <code class=\"notranslate\">MockitoVoidMethodsUnitTest.whenAddCalledValueCaptured</code> fails but because of something detected in the other test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.UnfinishedStubbingException: \nUnfinished stubbing detected here:\n-&gt; at org.baeldung.mockito.misusing.MockitoMisusingUnitTest.givenNotASpy_whenDoReturn_thenThrowNotAMock(MockitoMisusingUnitTest.java:28)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed\n\n-&gt; at org.baeldung.mockito.MockitoVoidMethodsUnitTest.whenAddCalledValueCaptured(MockitoVoidMethodsUnitTest.java:30)\"><pre class=\"notranslate\"><code>org.mockito.exceptions.misusing.UnfinishedStubbingException: \nUnfinished stubbing detected here:\n-&gt; at org.baeldung.mockito.misusing.MockitoMisusingUnitTest.givenNotASpy_whenDoReturn_thenThrowNotAMock(MockitoMisusingUnitTest.java:28)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed\n\n-&gt; at org.baeldung.mockito.MockitoVoidMethodsUnitTest.whenAddCalledValueCaptured(MockitoVoidMethodsUnitTest.java:30)\n</code></pre></div>\n<p dir=\"auto\">This is the call stack:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MockingProgressImpl.validateState() line: 109\t\nMockingProgressImpl.stubbingStarted() line: 98\t\nMockitoCore.stubber(Strictness) line: 179\t\nMockitoCore.stubber() line: 174\t\nMockito.doNothing() line: 2421\t\nMockitoVoidMethodsUnitTest.whenAddCalledValueCaptured() line: 30\t\"><pre class=\"notranslate\"><code>MockingProgressImpl.validateState() line: 109\t\nMockingProgressImpl.stubbingStarted() line: 98\t\nMockitoCore.stubber(Strictness) line: 179\t\nMockitoCore.stubber() line: 174\t\nMockito.doNothing() line: 2421\t\nMockitoVoidMethodsUnitTest.whenAddCalledValueCaptured() line: 30\t\n</code></pre></div>\n<p dir=\"auto\">And the method where it then fails inside <code class=\"notranslate\">MockingProgress.java</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void validateState() {\n    validateMostStuff();\n\n    //validate stubbing:\n    if (stubbingInProgress != null) {\n        Location temp = stubbingInProgress;\n        stubbingInProgress = null;\n        throw unfinishedStubbing(temp);\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">validateState</span>() {\n    <span class=\"pl-en\">validateMostStuff</span>();\n\n    <span class=\"pl-c\">//validate stubbing:</span>\n    <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">stubbingInProgress</span> != <span class=\"pl-c1\">null</span>) {\n        <span class=\"pl-smi\">Location</span> <span class=\"pl-s1\">temp</span> = <span class=\"pl-s1\">stubbingInProgress</span>;\n        <span class=\"pl-s1\">stubbingInProgress</span> = <span class=\"pl-c1\">null</span>;\n        <span class=\"pl-k\">throw</span> <span class=\"pl-en\">unfinishedStubbing</span>(<span class=\"pl-s1\">temp</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">I think this is a bug, tests should be independent and not cause side affects on each other. Maybe something is not cleaned up properly between test runs.</p>\n<p dir=\"auto\">If I add this tear down to <code class=\"notranslate\">MockitoMisusingUnitTest</code> then it works ok:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @After\n    public void tearDown() {\n        ThreadSafeMockingProgress.mockingProgress().reset();\n    }\t\"><pre>    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">After</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">tearDown</span>() {\n        <span class=\"pl-s1\">ThreadSafeMockingProgress</span>.<span class=\"pl-en\">mockingProgress</span>().<span class=\"pl-en\">reset</span>();\n    }\t</pre></div>\n<p dir=\"auto\">I don't mind to have a go at fixing it, but I would need some help or hints. This was tested with the latest version 2.24.5.</p>\n<p dir=\"auto\">Thanks</p>","resourcePath":"/mockito/mockito/issues/1655","createdAt":"2019-03-05T22:45:40Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix UnnecessaryStubbingException javadoc","url":"https://github.com/mockito/mockito/pull/1881","resourcePath":"/mockito/mockito/pull/1881","createdAt":"2020-02-28T22:12:07Z","number":1881,"mergeCommit":{"oid":"06b131f7aca0ec1d7f20f1b4ed767936ad440362","message":"Fix UnnecessaryStubbingException javadoc (#1881)","commitUrl":"https://github.com/mockito/mockito/commit/06b131f7aca0ec1d7f20f1b4ed767936ad440362","parents":{"nodes":[{"oid":"434556a4bd4bb288bf7d12fd4d21ce3a244ce4ba","message":"3.3.1 release (previous 3.3.0) + release notes updated by CI build 4387\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/exceptions/misusing/UnnecessaryStubbingException.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzgxNjE4OTg2OjM5NzE1YzNkMTJiZGQ0M2Q2OTQxMmU5OWVhZDJiNTNjOWY0ZmIwZTc=","url":"https://github.com/mockito/mockito/pull/1881/commits/39715c3d12bdd43d69412e99ead2b53c9f4fb0e7"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1880,"url":"https://github.com/mockito/mockito/issues/1880","title":"Unbalanced HTML tags in Javadoc of UnnecessaryStubbingException","bodyHTML":"<p dir=\"auto\">In the <a href=\"https://javadoc.io/static/org.mockito/mockito-core/3.3.1/org/mockito/exceptions/misusing/UnnecessaryStubbingException.html\" rel=\"nofollow\">Javadoc of that class</a>, the <code class=\"notranslate\">&lt;code</code> is not closed properly. Because of this, the following paragraphs are rendered in monospace font as well.</p>\n<p dir=\"auto\">While here, <code class=\"notranslate\">effect not</code> should be <code class=\"notranslate\">effect of not</code>.</p>","resourcePath":"/mockito/mockito/issues/1880","createdAt":"2020-02-28T09:10:09Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Guard against multiple evaluations of before statement","url":"https://github.com/mockito/mockito/pull/1821","resourcePath":"/mockito/mockito/pull/1821","createdAt":"2019-11-10T16:36:47Z","number":1821,"mergeCommit":{"oid":"d64cbd38edaca135a1bc835cd74fc943e0897535","message":"Guard against multiple evaluations of before statement (#1821)\n\n* Guard against multiple evaluations of before statement\r\n\r\nSome rules evaluate the base statement multiple times, e.g. to execute\r\ntests repeatedly. The changes made in #1672 led to an exception in such\r\ncases because the `MockitoListener` was registered multiple times. Now,\r\nwe only add the listener the first time the statement is evaluated in\r\norder to restore the old behavior.\r\n\r\nFixes #1767.\r\n\r\n* Reset listener when removing it","commitUrl":"https://github.com/mockito/mockito/commit/d64cbd38edaca135a1bc835cd74fc943e0897535","parents":{"nodes":[{"oid":"2ffc8aee826fe81ed8cee1e26da1f7f329b0b2b4","message":"3.1.8 release (previous 3.1.7) + release notes updated by CI build 4279\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/runners/DefaultInternalRunnerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzM5MTY3MjE3OjQ5ZTQxYWE5ODA5ZTBhNmI2NjljZjNhNjVhNjczYTUxOGZiNzdmODA=","url":"https://github.com/mockito/mockito/pull/1821/commits/49e41aa9809e0a6b669cf3a65a673a518fb77f80"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1767,"url":"https://github.com/mockito/mockito/issues/1767","title":"'MismatchReportingTestListener' has already been added and not removed using MockitoJUnitRunner","bodyHTML":"<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import static org.hamcrest.Matchers.equalTo;\nimport static org.hamcrest.Matchers.hasProperty;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.ArgumentMatchers.anyString;\nimport static org.mockito.Mockito.never;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.hamcrest.MockitoHamcrest.argThat;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.function.Consumer;\n\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.TemporaryFolder;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\nimport org.pdfsam.support.params.SingleOutputTaskParametersBuilder;\nimport org.pdfsam.test.InitializeAndApplyJavaFxThreadRule;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class BrowsablePdfOutputFieldTest {\n    @Rule\n    public TemporaryFolder folder = new TemporaryFolder();\n    @Rule\n    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();\n    @Mock\n    private SingleOutputTaskParametersBuilder&lt;?&gt; builder;\n    @Mock\n    private Consumer&lt;String&gt; onError;\n\n    @Test\n    public void valid() throws IOException {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        File value = folder.newFile(&quot;test.pdf&quot;);\n        victim.getTextField().setText(value.getAbsolutePath());\n        victim.apply(builder, onError);\n        verify(builder).output(argThat(hasProperty(&quot;destination&quot;, equalTo(value))));\n        verify(onError, never()).accept(anyString());\n    }\n\n    @Test\n    public void invalid() {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        victim.enforceValidation(true, true);\n        victim.getTextField().setText(&quot;ChuckNorris&quot;);\n        victim.apply(builder, onError);\n        verify(builder, never()).output(any());\n        verify(onError).accept(anyString());\n    }\n}\"><pre class=\"notranslate\"><code>import static org.hamcrest.Matchers.equalTo;\nimport static org.hamcrest.Matchers.hasProperty;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.ArgumentMatchers.anyString;\nimport static org.mockito.Mockito.never;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.hamcrest.MockitoHamcrest.argThat;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.function.Consumer;\n\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.TemporaryFolder;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\nimport org.pdfsam.support.params.SingleOutputTaskParametersBuilder;\nimport org.pdfsam.test.InitializeAndApplyJavaFxThreadRule;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class BrowsablePdfOutputFieldTest {\n    @Rule\n    public TemporaryFolder folder = new TemporaryFolder();\n    @Rule\n    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();\n    @Mock\n    private SingleOutputTaskParametersBuilder&lt;?&gt; builder;\n    @Mock\n    private Consumer&lt;String&gt; onError;\n\n    @Test\n    public void valid() throws IOException {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        File value = folder.newFile(\"test.pdf\");\n        victim.getTextField().setText(value.getAbsolutePath());\n        victim.apply(builder, onError);\n        verify(builder).output(argThat(hasProperty(\"destination\", equalTo(value))));\n        verify(onError, never()).accept(anyString());\n    }\n\n    @Test\n    public void invalid() {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        victim.enforceValidation(true, true);\n        victim.getTextField().setText(\"ChuckNorris\");\n        victim.apply(builder, onError);\n        verify(builder, never()).output(any());\n        verify(onError).accept(anyString());\n    }\n}\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)<br>\nMockito 3.0.0, AdoptOpenJDK 11.0.4, Linux Mint</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\">I migrated from 1.10.19 to the 3.0.0 version and I have few tests using the MockitoJUnitRunner which are failing with the following stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.RedundantListenerException: \nProblems adding Mockito listener.\nListener of type 'MismatchReportingTestListener' has already been added and not removed.\nIt indicates that previous listener was not removed according to the API.\nWhen you add a listener, don't forget to remove the listener afterwards:\n  Mockito.framework().removeListener(myListener);\nFor more information, see the javadoc for RedundantListenerException class.\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:41)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.pdfsam.test.JavaFXThreadRule$1.lambda$evaluate$0(JavaFXThreadRule.java:48)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:389)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427)\n\tat com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96)\n\tat com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)\n\tat com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277)\n\tat java.base/java.lang.Thread.run(Thread.java:835)\"><pre class=\"notranslate\"><code>org.mockito.exceptions.misusing.RedundantListenerException: \nProblems adding Mockito listener.\nListener of type 'MismatchReportingTestListener' has already been added and not removed.\nIt indicates that previous listener was not removed according to the API.\nWhen you add a listener, don't forget to remove the listener afterwards:\n  Mockito.framework().removeListener(myListener);\nFor more information, see the javadoc for RedundantListenerException class.\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:41)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.pdfsam.test.JavaFXThreadRule$1.lambda$evaluate$0(JavaFXThreadRule.java:48)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:389)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427)\n\tat com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96)\n\tat com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)\n\tat com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277)\n\tat java.base/java.lang.Thread.run(Thread.java:835)\n</code></pre></div>\n<p dir=\"auto\">It seems something internal, I didn't add or remove any <code class=\"notranslate\">MismatchReportingTestListener</code> and moreover the same code was working with the 1.10.19 and is working if I remove the <code class=\"notranslate\">MockitoJUnitRunner</code> and replace the <code class=\"notranslate\">@Mock</code> annotation with a <code class=\"notranslate\">Mockito.mock</code> in a <code class=\"notranslate\">@Before</code> method.</p>","resourcePath":"/mockito/mockito/issues/1767","createdAt":"2019-08-27T12:03:57Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Upgrade byte buddy to 1.10.5","url":"https://github.com/mockito/mockito/pull/1842","resourcePath":"/mockito/mockito/pull/1842","createdAt":"2019-12-11T20:12:44Z","number":1842,"mergeCommit":{"oid":"fe1141bcea74838fc1a5c1867ec932f180b8eb45","message":"Fixes #1841 : Update byte buddy to 1.10.5 (#1842)","commitUrl":"https://github.com/mockito/mockito/commit/fe1141bcea74838fc1a5c1867ec932f180b8eb45","parents":{"nodes":[{"oid":"49c3b4ffd25f574cbd64a2f85b9ea4b9bfbfe623","message":"Fix several typos found by a spell checker (#1795)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzUyMDk0NDI5OjM4YmVlOWFiZjU5MGRjODA4ZTdhODBhYTYwOTQwNmIyNDVlZmRiYTk=","url":"https://github.com/mockito/mockito/pull/1842/commits/38bee9abf590dc808e7a80aa609406b245efdba9"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1841,"url":"https://github.com/mockito/mockito/issues/1841","title":"Update byte-buddy to 1.10.5","bodyHTML":"<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">Byte-buddy had a bug that prevented running tests in IntelliJ due to space in the executable name: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"494738687\" data-permission-text=\"Title is private\" data-url=\"https://github.com/raphw/byte-buddy/issues/732\" data-hovercard-type=\"issue\" data-hovercard-url=\"/raphw/byte-buddy/issues/732/hovercard\" href=\"https://github.com/raphw/byte-buddy/issues/732\">raphw/byte-buddy#732</a> This was fixed in <a href=\"https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.5\">1.10.5</a> so it would make sense to update it in Mockito as well.</p>","resourcePath":"/mockito/mockito/issues/1841","createdAt":"2019-12-11T20:10:38Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Make JARs build reproducibly","url":"https://github.com/mockito/mockito/pull/1892","resourcePath":"/mockito/mockito/pull/1892","createdAt":"2020-03-22T23:38:23Z","number":1892,"mergeCommit":{"oid":"ab4bd0c533977497697ac4ab629f301c66596ffc","message":"Fixes #1891: Instruct Gradle to build JARs deterministically (#1892)\n\nThis makes the build reproducible, if there are no other sources of non-determinism with the JAR's content such as the manifest.\r\n\r\nIt strips the \"Bnd-LastModified\" header from OSGi content in JARs. it copies the jar and removes the offending header from the Manifest file. Due to a known issue in Gradle with the (now-deprecated) OSGi plugin, this is one of the only ways to remove this header.\r\n\r\nAdditionally, we verify the reproducibility in CI build via a new Gradle task. This new task, `checkReproducibility`, runs two builds, collects the sha256 checksums of the output archives, and compares them.\r\n\r\nCo-authored-by: Tim van der Lippe <tvanderlippe@google.com>","commitUrl":"https://github.com/mockito/mockito/commit/ab4bd0c533977497697ac4ab629f301c66596ffc","parents":{"nodes":[{"oid":"872358c810a7e750cccac6a6614b3191269732db","message":"3.3.5 release (previous 3.3.4) + release notes updated by CI build 4402\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":".gitignore"}},{"node":{"changeType":"MODIFIED","path":".travis.yml"}},{"node":{"changeType":"MODIFIED","path":"build.gradle"}},{"node":{"changeType":"MODIFIED","path":"gradle/mockito-core/osgi.gradle"}},{"node":{"changeType":"ADDED","path":"gradle/mockito-core/reproducible-build.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzkyMDkyNjk4OjVmM2VkMmIyZDcxYjIwZjRlOGEwMzYyMTgyOWJmNGQ3MGU0Y2UzN2Y=","url":"https://github.com/mockito/mockito/pull/1892/commits/5f3ed2b2d71b20f4e8a03621829bf4d70e4ce37f"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1891,"url":"https://github.com/mockito/mockito/issues/1891","title":"Build is not reproducible","bodyHTML":"<p dir=\"auto\">Repeated subsequent builds of the project create outputs which are not byte-for-byte identical, and so cannot be reproduced locally (see: <a href=\"https://reproducible-builds.org/\" rel=\"nofollow\">Reproducible Builds</a>)</p>\n<p dir=\"auto\">This is due to:</p>\n<ul dir=\"auto\">\n<li>File modification timestamps in JARs.</li>\n<li>Non-deterministic file ordering in JARs.</li>\n<li>OSGi bundle embedding timestamps in JAR manifests.</li>\n</ul>\n<p dir=\"auto\">Given the build environment under which a version was created, I would like to be able to compare the checksums published on Bintray and/or Maven Central with a locally built version against the same environment, to assure myself that the artifact being pulled has actually been generated from this source code.</p>\n<p dir=\"auto\">(I have a PR to address this which I am happy to raise)</p>","resourcePath":"/mockito/mockito/issues/1891","createdAt":"2020-03-22T22:46:59Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Revert \"Fixed undetected unused stubbing when matching previous stubbed call\"","url":"https://github.com/mockito/mockito/pull/1878","resourcePath":"/mockito/mockito/pull/1878","createdAt":"2020-02-26T21:27:57Z","number":1878,"mergeCommit":{"oid":"d9535098c10920c369d103a1871832e97ab5b42a","message":"Revert \"Fixed undetected unused stubbing when matching previous stubbed call\" (#1878)\n\n[ci maven-central-release]","commitUrl":"https://github.com/mockito/mockito/commit/d9535098c10920c369d103a1871832e97ab5b42a","parents":{"nodes":[{"oid":"bc2544019b9586aad264c02aa22853e1867f1162","message":"3.3.0 release (previous 3.2.11) + release notes updated by CI build 4383\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/exceptions/Reporter.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/reporting/Pluralizer.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/StubbedInvocationMatcher.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/invocation/Invocation.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/reporting/PluralizerTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/junitrule/StrictJUnitRuleTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/junitrunner/UnusedStubsExceptionMessageTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/StrictStubbingTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzgwNTE1ODAzOjlhYjc4OWI3ZjJmNGQ3YzVmMjlkMWFhMmE3MTEzMTY4NTdjMjE3NTE=","url":"https://github.com/mockito/mockito/pull/1878/commits/9ab789b7f2f4d7c5f29d1aa2a711316857c21751"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1877,"url":"https://github.com/mockito/mockito/issues/1877","title":"Regression: Overriding stubbing","bodyHTML":"<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">There seems to be a regression in 3.3.0 from 3.2.4 (published on Maven Central).<br>\nThe documentation states :</p>\n<blockquote>\n<p dir=\"auto\">Stubbing can be overridden: for example common stubbing can go to fixture setup but the test methods can override it. Please note that overridding stubbing is a potential code smell that points out too much stubbing</p>\n</blockquote>\n<p dir=\"auto\">But by simply making a copy of a stub by duplicating its line (or more realistically returning a different value in the second stub), an <code class=\"notranslate\">UnnecessaryStubbingException</code> is thrown :</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.ArgumentMatchers.any;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\n\n@ExtendWith(MockitoExtension.class)\npublic class ATest {\n\n  @Mock\n  private ByteArrayInputStream stream;\n\n  @Test\n  public void duplicate() throws IOException {\n    Mockito.when(stream.read(any())).thenReturn(1337);\n    Mockito.when(stream.read(any())).thenReturn(1337); // duplicate line\n    int value = stream.read(new byte[2048]);\n    assertEquals(1337, value);\n  }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Assertions</span>.<span class=\"pl-s1\">assertEquals</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">ArgumentMatchers</span>.<span class=\"pl-s1\">any</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">ByteArrayInputStream</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-c1\">IOException</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">extension</span>.<span class=\"pl-s1\">ExtendWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">MockitoExtension</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-s1\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ATest</span> {\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ByteArrayInputStream</span> <span class=\"pl-s1\">stream</span>;\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">duplicate</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n    <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">stream</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-en\">any</span>())).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1337</span>);\n    <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">stream</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-en\">any</span>())).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1337</span>); <span class=\"pl-c\">// duplicate line</span>\n    <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">value</span> = <span class=\"pl-s1\">stream</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">2048</span>]);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">1337</span>, <span class=\"pl-s1\">value</span>);\n  }\n}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.UnnecessaryStubbingException: \nUnnecessary stubbings detected.\nClean &amp; maintainable test code requires zero unnecessary code.\nThere are 1 unnecessary stubbing (click to navigate to relevant line of code):\n  1. -&gt; at ATest.duplicate(ATest.java:21)\nPlease remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.\n\tat org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:181)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$11(TestMethodTestDescriptor.java:248)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:268)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:268)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:267)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:247)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:143)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\"><pre class=\"notranslate\"><code>org.mockito.exceptions.misusing.UnnecessaryStubbingException: \nUnnecessary stubbings detected.\nClean &amp; maintainable test code requires zero unnecessary code.\nThere are 1 unnecessary stubbing (click to navigate to relevant line of code):\n  1. -&gt; at ATest.duplicate(ATest.java:21)\nPlease remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.\n\tat org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:181)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$11(TestMethodTestDescriptor.java:248)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:268)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:268)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:267)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:247)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:143)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/1877","createdAt":"2020-02-26T12:20:02Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix mocks throwing same instance with throwable class","url":"https://github.com/mockito/mockito/pull/1890","resourcePath":"/mockito/mockito/pull/1890","createdAt":"2020-03-20T17:12:48Z","number":1890,"mergeCommit":{"oid":"5b63b6fa0d5649a6552ebd75a7113206ad863e03","message":"Fixes #1875 : Fix mocks throwing same instance with throwable class (#1890)\n\nFixes mocks throwing the same instance consecutively of a given\r\nthrowable class after specifying the mock behaviour with doThrow(Class)\r\nor thenThrow(Class).","commitUrl":"https://github.com/mockito/mockito/commit/5b63b6fa0d5649a6552ebd75a7113206ad863e03","parents":{"nodes":[{"oid":"560adf377677a4a2c658a0b24e2f9c2e0b373c20","message":"3.3.3 release (previous 3.3.2) + release notes updated by CI build 4393\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/BaseStubbing.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/StubberImpl.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/internal/stubbing/answers/AbstractThrowsException.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/answers/ThrowsException.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/internal/stubbing/answers/ThrowsExceptionForClassType.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/stubbing/answers/AbstractThrowsExceptionTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/stubbing/answers/ThrowsExceptionForClassTypeTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/stubbing/answers/ThrowsExceptionTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/StubbingWithThrowablesTest.java"}},{"node":{"changeType":"DELETED","path":"subprojects/junit-jupiter/src/test/java/org/mockitousage/UninstantiableThrowableTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzkxNjQ3Nzk0OjE5MWE2OGJiZGJhN2Q5MjIwODNhYTA5YmU2MDIxYTBhYjcwNjQ4NmU=","url":"https://github.com/mockito/mockito/pull/1890/commits/191a68bbdba7d922083aa09be6021a0ab706486e"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1875,"url":"https://github.com/mockito/mockito/issues/1875","title":"thenThrow(Class) no longer creates new instances","bodyHTML":"<p dir=\"auto\">As of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"249808086\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1162\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1162/hovercard\" href=\"https://github.com/mockito/mockito/pull/1162\">#1162</a>, <code class=\"notranslate\">thenThrow(Class)</code> no longer creates new instances for each invocation.  We had tests that were reliant on that behavior; for example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t@Test\n\tpublic void thenThrow() {\n\t\tSupplier&lt;Object&gt; r = mock(Supplier.class);\n\t\twhen(r.get()).thenThrow(RuntimeException.class);\n\t\tRuntimeException first = null;\n\t\tfor (int i = 0; i &lt; 2; i++) {\n\t\t\ttry {\n\t\t\t\tr.get();\n\t\t\t} catch (RuntimeException e) {\n\t\t\t\tif (first == null) {\n\t\t\t\t\tfirst = e;\n\t\t\t\t} else {\n\t\t\t\t\tfirst.addSuppressed(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (first != null) {\n\t\t\tthrow first;\n\t\t}\n\t}\"><pre class=\"notranslate\"><code>\t@Test\n\tpublic void thenThrow() {\n\t\tSupplier&lt;Object&gt; r = mock(Supplier.class);\n\t\twhen(r.get()).thenThrow(RuntimeException.class);\n\t\tRuntimeException first = null;\n\t\tfor (int i = 0; i &lt; 2; i++) {\n\t\t\ttry {\n\t\t\t\tr.get();\n\t\t\t} catch (RuntimeException e) {\n\t\t\t\tif (first == null) {\n\t\t\t\t\tfirst = e;\n\t\t\t\t} else {\n\t\t\t\t\tfirst.addSuppressed(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (first != null) {\n\t\t\tthrow first;\n\t\t}\n\t}\n</code></pre></div>\n<p dir=\"auto\">These tests now fail:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.IllegalArgumentException: Self-suppression not permitted\n\tat java.lang.Throwable.addSuppressed(Throwable.java:1043)\n\tat example.Test.thenThrow(Test.java:10)\"><pre class=\"notranslate\"><code>java.lang.IllegalArgumentException: Self-suppression not permitted\n\tat java.lang.Throwable.addSuppressed(Throwable.java:1043)\n\tat example.Test.thenThrow(Test.java:10)\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1875","createdAt":"2020-02-19T15:59:36Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Expose MockitoExtension to ServiceLoader to support autodetection fea…","url":"https://github.com/mockito/mockito/pull/1865","resourcePath":"/mockito/mockito/pull/1865","createdAt":"2020-01-23T14:04:35Z","number":1865,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"ADDED","path":"subprojects/junit-jupiter/src/main/resources/META-INF/services/org.junit.jupiter.api.extension.Extension"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzY2Mzc4NzI2OjFhMDljOTMzNGQ3MDcyMzYzM2YyYmQ0NTA4NjYzZWZkMTc5Yzc5OTc=","url":"https://github.com/mockito/mockito/pull/1865/commits/1a09c9334d70723633f2bd4508663efd179c7997"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1864,"url":"https://github.com/mockito/mockito/issues/1864","title":"Allow MockitoExtension to be registered automatically","bodyHTML":"<p dir=\"auto\">JUnit 5 supports <a href=\"https://junit.org/junit5/docs/current/user-guide/#extensions-registration-automatic\" rel=\"nofollow\">automatic extension registration</a>. This requiers a tiny change in junit-juniper module.</p>","resourcePath":"/mockito/mockito/issues/1864","createdAt":"2020-01-23T14:01:01Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix Pattern matcher not matching to subregion","url":"https://github.com/mockito/mockito/pull/1914","resourcePath":"/mockito/mockito/pull/1914","createdAt":"2020-04-20T13:58:06Z","number":1914,"mergeCommit":{"oid":"c6f23366002abcfb4e0b7ab58891c75d0e23260a","message":"Fixes #1905 : Fix Pattern matcher not matching to subregion (#1914)\n\nIssue #1905 talked about a particular pattern using Java's Pattern that\r\ncauses Mockito to not properly match the argument (provided with an\r\ninvocation) to the expected answer. It was later discovered that the\r\nPattern matcher matches to the entire region, not some subregion, by\r\nusing Java's Matcher.match(). This commit fixes that by using\r\nMatcher.find().","commitUrl":"https://github.com/mockito/mockito/commit/c6f23366002abcfb4e0b7ab58891c75d0e23260a","parents":{"nodes":[{"oid":"bbd19ea9108132778da1010513d1544f0c57e327","message":"3.3.8 release (previous 3.3.7) + release notes updated by CI build 4429\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/matchers/Matches.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/matchers/MatchersTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDA2MDgxMzg3OjI3Y2E5MjlkODE2YjdlNzAzOTA4NzRjNDQ2MThiYWNhYjA1MjFiOWE=","url":"https://github.com/mockito/mockito/pull/1914/commits/27ca929d816b7e70390874c44618bacab0521b9a"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1905,"url":"https://github.com/mockito/mockito/issues/1905","title":"ArgumentMatchers.matches not working","bodyHTML":"<ul dir=\"auto\">\n<li>Ver. mockito-core:3.3.3</li>\n<li>Java Pattern and java Matcher</li>\n</ul>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Pattern pat = Pattern.compile(&quot;^zman-server-&quot;);\nMatcher mat = pat.matcher(&quot;zman-server-store.properties&quot;);\nmat.find() // return true\"><pre><span class=\"pl-smi\">Pattern</span> <span class=\"pl-s1\">pat</span> = <span class=\"pl-s1\">Pattern</span>.<span class=\"pl-en\">compile</span>(<span class=\"pl-s\">\"^zman-server-\"</span>);\n<span class=\"pl-smi\">Matcher</span> <span class=\"pl-s1\">mat</span> = <span class=\"pl-s1\">pat</span>.<span class=\"pl-en\">matcher</span>(<span class=\"pl-s\">\"zman-server-store.properties\"</span>);\n<span class=\"pl-s1\">mat</span>.<span class=\"pl-en\">find</span>() <span class=\"pl-c\">// return true</span></pre></div>\n<ul dir=\"auto\">\n<li>Mockito matcher not wrking:</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"when(streamer.load( matches(pat))).thenReturn(stream);\n\nOutput:\n- this invocation of 'load' method:\n    streamer.load(\n    &quot;zman-server-store.properties&quot;\n);\n - has following stubbing(s) with different arguments:\n    1. streamer.load(&quot;&quot;);\n\"><pre class=\"notranslate\"><code>when(streamer.load( matches(pat))).thenReturn(stream);\n\nOutput:\n- this invocation of 'load' method:\n    streamer.load(\n    \"zman-server-store.properties\"\n);\n - has following stubbing(s) with different arguments:\n    1. streamer.load(\"\");\n\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1905","createdAt":"2020-04-11T19:03:58Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixed undetected unused stubbing when matching previous stubbed call","url":"https://github.com/mockito/mockito/pull/1847","resourcePath":"/mockito/mockito/pull/1847","createdAt":"2019-12-16T22:42:05Z","number":1847,"mergeCommit":{"oid":"ce1632ddd6c55a7e85bec606536aa582a3b3aea1","message":"Merge pull request #1847 from andreisilviudragnea/fix-unused-stubbing-with-implicit-eq-matchers\n\nFixed undetected unused stubbing when matching previous stubbed call","commitUrl":"https://github.com/mockito/mockito/commit/ce1632ddd6c55a7e85bec606536aa582a3b3aea1","parents":{"nodes":[{"oid":"c4b811d4a823f564c3f4a8d5cd5d47307bc9034a","message":"Fixes  #522 : Basic test suite for OSGi framework (#1850)\n\n* Fixes  #522 : Basic test suite for OSGi framework\r\n\r\n* Provide org.junit package to test bundle and run tests inside it"},{"oid":"b0d15d11440dee846e5bb8bc56023ce6621a16cf","message":"Improved the test coverage\n\n- made the tests less complicated\n- added assertions on the _count_ of unnecessary stubbings\n- made the exception message more informative"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/exceptions/Reporter.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/reporting/Pluralizer.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/StubbedInvocationMatcher.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/invocation/Invocation.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/reporting/PluralizerTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/junitrule/StrictJUnitRuleTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/junitrunner/UnusedStubsExceptionMessageTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/StrictStubbingTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzUzODE5MjQ1OmIwZDE1ZDExNDQwZGVlODQ2ZTViYjhiYzU2MDIzY2U2NjIxYTE2Y2Y=","url":"https://github.com/mockito/mockito/pull/1847/commits/b0d15d11440dee846e5bb8bc56023ce6621a16cf"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1846,"url":"https://github.com/mockito/mockito/issues/1846","title":"Broken unused stubbing reporting when matching previous stubbed call","bodyHTML":"<p dir=\"auto\">When stubbing the same method call twice, and the second stub setup matches to first stubbed call, the first stub is not reported as unused, because Mockito detects the next stub setup as a usage of the previous stub setup. This is an example test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class UnnecessaryStubbingWithImplicitEqMatchers {\n    @Mock IMethods mock;\n    MockitoSession mockito = Mockito.mockitoSession().initMocks(this).strictness(Strictness.STRICT_STUBS).startMocking();\n\n    @After public void after() {\n        mockito.finishMocking();\n    }\n\n    @Test public void unnecessary_stubbing() {\n        given(mock.simpleMethod(&quot;1&quot;)).willReturn(&quot;one&quot;);\n        given(mock.simpleMethod(&quot;2&quot;)).willReturn(&quot;three&quot;);\n        given(mock.simpleMethod(&quot;1&quot;)).willReturn(&quot;two&quot;);\n        given(mock.simpleMethod(&quot;1&quot;)).willReturn(&quot;four&quot;);\n\n        mock.simpleMethod(&quot;1&quot;);\n        mock.simpleMethod(&quot;2&quot;);\n    }\n}\"><pre class=\"notranslate\"><code>public class UnnecessaryStubbingWithImplicitEqMatchers {\n    @Mock IMethods mock;\n    MockitoSession mockito = Mockito.mockitoSession().initMocks(this).strictness(Strictness.STRICT_STUBS).startMocking();\n\n    @After public void after() {\n        mockito.finishMocking();\n    }\n\n    @Test public void unnecessary_stubbing() {\n        given(mock.simpleMethod(\"1\")).willReturn(\"one\");\n        given(mock.simpleMethod(\"2\")).willReturn(\"three\");\n        given(mock.simpleMethod(\"1\")).willReturn(\"two\");\n        given(mock.simpleMethod(\"1\")).willReturn(\"four\");\n\n        mock.simpleMethod(\"1\");\n        mock.simpleMethod(\"2\");\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">The test above should fail with <code class=\"notranslate\">UnnecessaryStubbingException</code> containing two unused stubs, but it does not.</p>\n<p dir=\"auto\">Mockito version: v3.2.4</p>","resourcePath":"/mockito/mockito/issues/1846","createdAt":"2019-12-16T22:36:01Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Revert \"Add Duration overloads. Fixes #1815\"","url":"https://github.com/mockito/mockito/pull/1845","resourcePath":"/mockito/mockito/pull/1845","createdAt":"2019-12-16T10:49:58Z","number":1845,"mergeCommit":{"oid":"1ce2078a562a4486fe4a5917a9b91aa8ef4216c2","message":"Revert \"Add java.time.Duration overloads to `timeout` and `after` (#1818)\" (#1845)\n\nThis reverts commit 9603fb28158de0fb519611d58e931bf7b4bbc33c.","commitUrl":"https://github.com/mockito/mockito/commit/1ce2078a562a4486fe4a5917a9b91aa8ef4216c2","parents":{"nodes":[{"oid":"517faccdcf9f9d41f3664fc7955f387608a43a5e","message":"3.2.2 release (previous 3.2.0) + release notes updated by CI build 4322\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/exceptions/Reporter.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/Timer.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/verification/VerificationOverTimeImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/verification/VerificationWrapperInOrderWrapper.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/verification/After.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/verification/Timeout.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/util/TimerTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/verification/VerificationOverTimeImplTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/verification/TimeoutTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/VerificationWithTimeoutTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzUzNDk2Nzk5OjMxMDY3MTY3OTg0ZjFmZWExOWIyMWFkMWZlYjQ3N2NmYzY5NWVmNWE=","url":"https://github.com/mockito/mockito/pull/1845/commits/31067167984f1fea19b21ad1feb477cfc695ef5a"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1843,"url":"https://github.com/mockito/mockito/issues/1843","title":"java.time.Duration not present before SDK 26","bodyHTML":"<p dir=\"auto\">Unable to use Mockito 3.1.7+ with Android on lower SDK devices.</p>\n<p dir=\"auto\">Reason:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"518180001\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1815\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/1815/hovercard\" href=\"https://github.com/mockito/mockito/issues/1815\">#1815</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"518510882\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1818\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1818/hovercard\" href=\"https://github.com/mockito/mockito/pull/1818\">#1818</a></li>\n</ul>\n<p dir=\"auto\"><a href=\"https://developer.android.com/reference/java/time/Duration\" rel=\"nofollow\">https://developer.android.com/reference/java/time/Duration</a> &lt;-- This was not added to Android until SDK 26.</p>\n<p dir=\"auto\"><a href=\"https://developer.android.com/about/dashboards\" rel=\"nofollow\">https://developer.android.com/about/dashboards</a> &lt;-- here are some distribution stats.  Most noticeably, this would impact testing for 70% of the market and is not ideal.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoClassDefFoundError: java.time.Duration\nat org.mockito.Mockito.timeout(Mockito.java:2856)\"><pre class=\"notranslate\"><code>java.lang.NoClassDefFoundError: java.time.Duration\nat org.mockito.Mockito.timeout(Mockito.java:2856)\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1843","createdAt":"2019-12-15T18:23:45Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"#1900 Configure mocks for annotation interfaces with default values from annotation","url":"https://github.com/mockito/mockito/pull/1901","resourcePath":"/mockito/mockito/pull/1901","createdAt":"2020-04-07T00:17:27Z","number":1901,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/MockitoCore.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/MockedAnnotationInterfaceWithDefaultsTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mzk5OTY5OTU3OmM3ZjE4MGZjYWYxYWRhMDBhMWYyMmEwODQzZjdhZDBmODVlNDE1M2Q=","url":"https://github.com/mockito/mockito/pull/1901/commits/c7f180fcaf1ada00a1f22a0843f7ad0f85e4153d"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1900,"url":"https://github.com/mockito/mockito/issues/1900","title":"Configure mocks for annotation interfaces with default values from annotation","bodyHTML":"<p dir=\"auto\"><code class=\"notranslate\">Mockito.mock()</code> can quite conveniently be used to not only create instances of interfaces, but also to create instances of <a href=\"https://docs.oracle.com/javase/tutorial/java/annotations/declaring.html\" rel=\"nofollow\">annotation interfaces</a>. Although normally those instances are created by using the annotations in source code (and subsequently using <code class=\"notranslate\">class.getAnnotations()</code>, often in framework code) there are some use cases where the annotation instances are created by a framework - in particular this is the case for the OSGi Metatype Service (see <a href=\"https://osgi.org/specification/osgi.cmpn/7.0.0/service.metatype.html#d0e17824\" rel=\"nofollow\">https://osgi.org/specification/osgi.cmpn/7.0.0/service.metatype.html#d0e17824</a> for details). For this use case,  a mock for an annotation interface should be automatically set up to return the annotation-defined default values.</p>\n<p dir=\"auto\">The following JUnit Tests illustrates what is needed:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public @interface AnnotationInterface {\n    String strAttWithDefault() default &quot;default&quot;;\n    String strAttWithoutDefault();\n    String[] strArrAtt() default { &quot;default1&quot;, &quot;default2&quot; };\n    int intAtt() default 1;\n    long longAtt() default 2L;\n}\n\n@Mock\nAnnotationInterface mockedAnnotationInterface;\n\n@Test\npublic void shouldMockDefaultValuesFromAnnoationInterface() throws Exception {\n    // no further action should be needed to have the default values returned\n    assertEquals(&quot;default&quot;, mockedAnnotationInterface.strAttWithDefault());\n    assertNull(mockedAnnotationInterface.strAttWithoutDefault());\n    assertArrayEquals(new String[] { &quot;default1&quot;, &quot;default2&quot; }, mockedAnnotationInterface.strArrAtt());\n    assertArrayEquals(new String[] { &quot;default1&quot;, &quot;default2&quot; }, mockedAnnotationInterface.strArrAtt());\n    assertEquals(1, mockedAnnotationInterface.intAtt());\n    assertEquals(2L, mockedAnnotationInterface.longAtt());\n}\"><pre class=\"notranslate\"><code>public @interface AnnotationInterface {\n    String strAttWithDefault() default \"default\";\n    String strAttWithoutDefault();\n    String[] strArrAtt() default { \"default1\", \"default2\" };\n    int intAtt() default 1;\n    long longAtt() default 2L;\n}\n\n@Mock\nAnnotationInterface mockedAnnotationInterface;\n\n@Test\npublic void shouldMockDefaultValuesFromAnnoationInterface() throws Exception {\n    // no further action should be needed to have the default values returned\n    assertEquals(\"default\", mockedAnnotationInterface.strAttWithDefault());\n    assertNull(mockedAnnotationInterface.strAttWithoutDefault());\n    assertArrayEquals(new String[] { \"default1\", \"default2\" }, mockedAnnotationInterface.strArrAtt());\n    assertArrayEquals(new String[] { \"default1\", \"default2\" }, mockedAnnotationInterface.strArrAtt());\n    assertEquals(1, mockedAnnotationInterface.intAtt());\n    assertEquals(2L, mockedAnnotationInterface.longAtt());\n}\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1900","createdAt":"2020-04-07T00:10:42Z","labels":{"edges":[{"node":{"name":"enhancement"}},{"node":{"name":"framework integrations"}},{"node":{"name":"injection"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Document using `@Mock` with method parameters","url":"https://github.com/mockito/mockito/pull/1961","resourcePath":"/mockito/mockito/pull/1961","createdAt":"2020-06-29T07:56:15Z","number":1961,"mergeCommit":{"oid":"87aacaeca72f99941323d7d5d981cde333177b23","message":"Document using `@Mock` with method parameters (#1961)\n\nAlthough we've called it out in the [JUnit extension], we should also\r\nmake sure it's clear in the core documentation to make it more visible.\r\n\r\nWe can fully-quality the `@Test` annotation to make clear that it has to\r\nbe with JUnit 5.\r\n\r\nCloses #1960.\r\n\r\n[JUnit extension]: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/org/mockito/junit/jupiter/MockitoExtension.html","commitUrl":"https://github.com/mockito/mockito/commit/87aacaeca72f99941323d7d5d981cde333177b23","parents":{"nodes":[{"oid":"0501e02994959c997dd0a5bdafc6288ae1e487ac","message":"Update errorprone gradle plugin to v1.2.1 (#1958)\n\nsee https://github.com/tbroyer/gradle-errorprone-plugin/releases for details"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mockito.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDQxMjY2NDY3Ojg3YmU0YjE0MTMzZmVjYmI4NWM4YWJjMWNlYzdiZjFhN2Q1ZDljZjg=","url":"https://github.com/mockito/mockito/pull/1961/commits/87be4b14133fecbb85c8abc1cec7bf1a7d5d9cf8"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1960,"url":"https://github.com/mockito/mockito/issues/1960","title":"Documentation: `@Mock` on method parameters","bodyHTML":"<p dir=\"auto\">While writing <a href=\"https://www.jvt.me/posts/2020/06/27/mockito-mock-parameter/\" rel=\"nofollow\">an article about using <code class=\"notranslate\">@Mock</code> as a method parameter</a>, I noticed that the <a href=\"https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#mock_annotation\" rel=\"nofollow\">JavaDoc for Mockito</a> doesn't mention the ability to use <code class=\"notranslate\">@Mock</code> as a parameter to a test method.</p>\n<p dir=\"auto\">How would be best to add that as a PR, given it's dependent on the test runner?</p>\n<p dir=\"auto\">I was thinking something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" * &lt;h3 id=&quot;9&quot;&gt;9. &lt;a class=&quot;meaningful_link&quot; href=&quot;#mock_annotation&quot; name=&quot;mock_annotation&quot;&gt;Shorthand for mocks creation - &lt;code&gt;&amp;#064;Mock&lt;/code&gt; annotation&lt;/a&gt;&lt;/h3&gt;\n *\n * &lt;ul&gt;\n * &lt;li&gt;Minimizes repetitive mock creation code.&lt;/li&gt;\n * &lt;li&gt;Makes the test class more readable.&lt;/li&gt;\n * &lt;li&gt;Makes the verification error easier to read because the &lt;b&gt;field name&lt;/b&gt;\n * is used to identify the mock.&lt;/li&gt;\n * &lt;/ul&gt;\n *\n * &lt;pre class=&quot;code&quot;&gt;&lt;code class=&quot;java&quot;&gt;\n *   public class ArticleManagerTest {\n *\n *       &amp;#064;Mock private ArticleCalculator calculator;\n *       &amp;#064;Mock private ArticleDatabase database;\n *       &amp;#064;Mock private UserProvider userProvider;\n *\n *       private ArticleManager manager;\n *\n *       @Test\n *       void testSomething(@Mock ArticleDatabase database) {\n * &lt;/code&gt;&lt;/pre&gt;\"><pre class=\"notranslate\"><code> * &lt;h3 id=\"9\"&gt;9. &lt;a class=\"meaningful_link\" href=\"#mock_annotation\" name=\"mock_annotation\"&gt;Shorthand for mocks creation - &lt;code&gt;&amp;#064;Mock&lt;/code&gt; annotation&lt;/a&gt;&lt;/h3&gt;\n *\n * &lt;ul&gt;\n * &lt;li&gt;Minimizes repetitive mock creation code.&lt;/li&gt;\n * &lt;li&gt;Makes the test class more readable.&lt;/li&gt;\n * &lt;li&gt;Makes the verification error easier to read because the &lt;b&gt;field name&lt;/b&gt;\n * is used to identify the mock.&lt;/li&gt;\n * &lt;/ul&gt;\n *\n * &lt;pre class=\"code\"&gt;&lt;code class=\"java\"&gt;\n *   public class ArticleManagerTest {\n *\n *       &amp;#064;Mock private ArticleCalculator calculator;\n *       &amp;#064;Mock private ArticleDatabase database;\n *       &amp;#064;Mock private UserProvider userProvider;\n *\n *       private ArticleManager manager;\n *\n *       @Test\n *       void testSomething(@Mock ArticleDatabase database) {\n * &lt;/code&gt;&lt;/pre&gt;\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/1960","createdAt":"2020-06-28T21:27:47Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #1985 : Update README to refer the latest documentation","url":"https://github.com/mockito/mockito/pull/1986","resourcePath":"/mockito/mockito/pull/1986","createdAt":"2020-07-20T12:46:13Z","number":1986,"mergeCommit":{"oid":"0c56b3a8da97fa5ccfeef2adaa0a2314db3d6bd0","message":"Fixes #1985 : update README to refer the latest documentation (#1986)","commitUrl":"https://github.com/mockito/mockito/commit/0c56b3a8da97fa5ccfeef2adaa0a2314db3d6bd0","parents":{"nodes":[{"oid":"c53f9b39243ac563cd40c774358fb0f7d4f2da83","message":"3.4.5 release (previous 3.4.4) + release notes updated by CI build 4647\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"README.md"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDUzNDEzNDkzOjdkZDJjMmE5MGZjOTdlYjBlNmQwY2FkMjdmNDJmMDYzMGZjNzA2MDQ=","url":"https://github.com/mockito/mockito/pull/1986/commits/7dd2c2a90fc97eb0e6d0cad27f42f0630fc70604"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1985,"url":"https://github.com/mockito/mockito/issues/1985","title":"README should refer the latest available documentation","bodyHTML":"<p dir=\"auto\"><strong>Actual:</strong><br>\nREADME contains link <code class=\"notranslate\">latest documentation</code><br>\n<a href=\"http://javadoc.io/page/org.mockito/mockito-core/2/org/mockito/Mockito.html\" rel=\"nofollow\">http://javadoc.io/page/org.mockito/mockito-core/2/org/mockito/Mockito.html</a><br>\nwhich redirects to<br>\n<a href=\"https://javadoc.io/static/org.mockito/mockito-core/2.9.0/org/mockito/Mockito.html\" rel=\"nofollow\">https://javadoc.io/static/org.mockito/mockito-core/2.9.0/org/mockito/Mockito.html</a><br>\n(Note: version is <code class=\"notranslate\">2.9.0</code>)</p>\n<p dir=\"auto\"><strong>Expected:</strong><br>\nThe link <code class=\"notranslate\">latest documentation</code> should point to the latest available documentation<br>\n<a href=\"http://javadoc.io/page/org.mockito/mockito-core/3/org/mockito/Mockito.html\" rel=\"nofollow\">http://javadoc.io/page/org.mockito/mockito-core/3/org/mockito/Mockito.html</a><br>\nwhich redirects to<br>\n<a href=\"https://javadoc.io/static/org.mockito/mockito-core/3.4.4/org/mockito/Mockito.html\" rel=\"nofollow\">https://javadoc.io/static/org.mockito/mockito-core/3.4.4/org/mockito/Mockito.html</a><br>\nat the current moment (Note: version is <code class=\"notranslate\">3.4.4</code>).</p>","resourcePath":"/mockito/mockito/issues/1985","createdAt":"2020-07-20T12:42:32Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Revert \"Update objenesis to 3.1\"","url":"https://github.com/mockito/mockito/pull/2009","resourcePath":"/mockito/mockito/pull/2009","createdAt":"2020-08-19T14:50:49Z","number":2009,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}},{"node":{"changeType":"MODIFIED","path":"gradle/mockito-core/osgi.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcwMjE3ODAwOjVmYTJhNzRmMmU0MTdiNGJjZjcyNjc2YjEzYjRmZGFkYjg0YzcwZjc=","url":"https://github.com/mockito/mockito/pull/2009/commits/5fa2a74f2e417b4bcf72676b13b4fdadb84c70f7"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2007,"url":"https://github.com/mockito/mockito/issues/2007","title":"Android instrumentation test packaging fails for mockito-android 3.5.0 with minSdk < 26","bodyHTML":"<p dir=\"auto\">We've upgraded from <code class=\"notranslate\">mockito-android:3.4.6</code> to <code class=\"notranslate\">mockito-android:3.5.0</code>. I'm attempting to package up my instrumented tests by running the <code class=\"notranslate\">assembleAndroidTest</code> gradle task. The task fails with the following errors:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\"><pre class=\"notranslate\"><code>/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n</code></pre></div>\n<p dir=\"auto\">and with root cause:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\"><pre class=\"notranslate\"><code>com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/2007","createdAt":"2020-08-18T00:37:46Z","labels":{"edges":[{"node":{"name":"android"}},{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Do not pass static mocks to regular listener callback.","url":"https://github.com/mockito/mockito/pull/1989","resourcePath":"/mockito/mockito/pull/1989","createdAt":"2020-07-28T08:12:05Z","number":1989,"mergeCommit":{"oid":"4767db122f95e5302ad6a60a6efaa69f9d7e6cb1","message":"[ci maven-central-release] Merge pull request #1989 from mockito/listener-fix\n\nDo not pass static mocks to regular listener callback.","commitUrl":"https://github.com/mockito/mockito/commit/4767db122f95e5302ad6a60a6efaa69f9d7e6cb1","parents":{"nodes":[{"oid":"0c56b3a8da97fa5ccfeef2adaa0a2314db3d6bd0","message":"Fixes #1985 : update README to refer the latest documentation (#1986)"},{"oid":"724619b544096a5bdf488053865f5cccdba2fda1","message":"Does not include static mocks in regular listener logic as it might distort existing mock collectors that do not expect scoped mocks. Fixes #1988."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/invocation/InterceptedInvocation.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/progress/MockingProgress.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/progress/MockingProgressImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/listeners/MockCreationListener.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/inline/src/test/java/org/mockitoinline/StaticMockTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/StaticRuleTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/StaticRunnerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDU3NjMyNTE1OjcyNDYxOWI1NDQwOTZhNWJkZjQ4ODA1Mzg2NWY1Y2NjZGJhMmZkYTE=","url":"https://github.com/mockito/mockito/pull/1989/commits/724619b544096a5bdf488053865f5cccdba2fda1"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1988,"url":"https://github.com/mockito/mockito/issues/1988","title":"MockitoJUnitRunner causes NPE when using @Mock on MockedStatic fields","bodyHTML":"<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\"><strong>Versions:</strong></p>\n<ul dir=\"auto\">\n<li>mockito: 3.4.4</li>\n<li>junit: 4.12</li>\n<li>jdk: 1.8</li>\n<li>os: windows 10</li>\n</ul>\n<p dir=\"auto\"><strong>Example:</strong></p>\n<ol dir=\"auto\">\n<li><a href=\"https://github.com/Cybermite/mockito-static-npe-example/blob/bdd30465632b21c36ce7635929e7825c5878ee83/src/test/java/org/mockito/example/MockitoJUnitRunnerWithMockedStaticTest.java\">MockitoJUnitRunnerWithMockedStaticTest</a>\n<ul dir=\"auto\">\n<li>Reproduces the problem documented in this issue.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/Cybermite/mockito-static-npe-example/blob/bdd30465632b21c36ce7635929e7825c5878ee83/src/test/java/org/mockito/example/MockitoOpenMocksMockedStaticTest.java\">MockitoOpenMocksMockedStaticTest</a>\n<ul dir=\"auto\">\n<li>Same tests but manually opens and closes the mocks (doesn't use the runner). Shows the tests are ran as expected.</li>\n</ul>\n</li>\n</ol>\n<p dir=\"auto\"><strong>Problem:</strong></p>\n<p dir=\"auto\">The <code class=\"notranslate\">MockitoJUnitRunner</code> is causing a <code class=\"notranslate\">NullPointerException</code> when the test class contains a <code class=\"notranslate\">@Mock</code> instance field with a type of <code class=\"notranslate\">MockedStatic</code>. This exception only occurs for tests that are ran after a prior test fails. If all the tests pass, there are no issues.</p>\n<p dir=\"auto\">Stack Trace (Test 1):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.AssertionError: intentional failure\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName1(MockitoJUnitRunnerWithMockedStaticTest.java:40)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n\norg.mockito.exceptions.misusing.NotAMockException: Argument passed to Mockito.mockingDetails() should be a mock, but is an instance of class java.lang.Class!\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$2.testFinished(DefaultInternalRunner.java:81)\n\tat org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)\n\tat org.junit.runner.notification.RunNotifier$7.notifyListener(RunNotifier.java:190)\n\tat org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\n\tat org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:187)\n\tat org.junit.internal.runners.model.EachTestNotifier.fireTestFinished(EachTestNotifier.java:38)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:331)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\"><pre class=\"notranslate\"><code>java.lang.AssertionError: intentional failure\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName1(MockitoJUnitRunnerWithMockedStaticTest.java:40)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n\norg.mockito.exceptions.misusing.NotAMockException: Argument passed to Mockito.mockingDetails() should be a mock, but is an instance of class java.lang.Class!\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$2.testFinished(DefaultInternalRunner.java:81)\n\tat org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)\n\tat org.junit.runner.notification.RunNotifier$7.notifyListener(RunNotifier.java:190)\n\tat org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\n\tat org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:187)\n\tat org.junit.internal.runners.model.EachTestNotifier.fireTestFinished(EachTestNotifier.java:38)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:331)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n</code></pre></div>\n<p dir=\"auto\">Stack Trace (Test 2):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName2(MockitoJUnitRunnerWithMockedStaticTest.java:54)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\"><pre class=\"notranslate\"><code>java.lang.NullPointerException\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName2(MockitoJUnitRunnerWithMockedStaticTest.java:54)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n</code></pre></div>\n<p dir=\"auto\"><strong>Investigation:</strong></p>\n<p dir=\"auto\">After some investigation, it appears the first test is failing twice (once in the test and once in the testFinished listener). This code:</p>\n<p dir=\"auto\"><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/573bf0df389964d7fdeb4de486882d4599b8033c/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L75-L96\">mockito/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 75 to 96\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mockito/mockito/commit/573bf0df389964d7fdeb4de486882d4599b8033c\">573bf0d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testFinished</span>(<span class=\"pl-smi\">Description</span> <span class=\"pl-s1\">description</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L78\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"78\"></td>\n          <td id=\"LC78\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">mockitoTestListener</span> != <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L79\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"79\"></td>\n          <td id=\"LC79\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">framework</span>() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     .<span class=\"pl-en\">removeListener</span>(<span class=\"pl-s1\">mockitoTestListener</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L81\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"81\"></td>\n          <td id=\"LC81\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">mockitoTestListener</span>.<span class=\"pl-en\">testFinished</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultTestFinishedEvent</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L83\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"83\"></td>\n          <td id=\"LC83\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                             <span class=\"pl-s1\">target</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L84\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"84\"></td>\n          <td id=\"LC84\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                             <span class=\"pl-s1\">description</span>.<span class=\"pl-en\">getMethodName</span>(), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L85\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"85\"></td>\n          <td id=\"LC85\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                             <span class=\"pl-s1\">failure</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L86\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"86\"></td>\n          <td id=\"LC86\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">mockitoTestListener</span> = <span class=\"pl-c1\">null</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">validateMockitoUsage</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L89\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"89\"></td>\n          <td id=\"LC89\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">t</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L90\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"90\"></td>\n          <td id=\"LC90\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// In order to produce clean exception to the user we</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L91\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"91\"></td>\n          <td id=\"LC91\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// need to fire test failure with the right description</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L92\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"92\"></td>\n          <td id=\"LC92\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// Otherwise JUnit framework will report failure with</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// some generic test name</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">notifier</span>.<span class=\"pl-en\">fireTestFailure</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Failure</span>(<span class=\"pl-s1\">description</span>, <span class=\"pl-s1\">t</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L95\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"95\"></td>\n          <td id=\"LC95\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L96\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"96\"></td>\n          <td id=\"LC96\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">Line 81 is where it fails the second time. If we navigate down the call hierarchy, it appears it fails because the static mock has already been cleaned up so the framework doesn't think it's a mock and fails with a <code class=\"notranslate\">NotAMockException</code>.  Since it fails there, it doesn't set the listener to null which will in-turn result in the mocks not being initialized on the next test that's ran (hits line 51):</p>\n<p dir=\"auto\"><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/573bf0df389964d7fdeb4de486882d4599b8033c/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L42-L59\">mockito/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 42 to 59\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mockito/mockito/commit/573bf0df389964d7fdeb4de486882d4599b8033c\">573bf0d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">evaluate</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Throwable</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">AutoCloseable</span> <span class=\"pl-s1\">closeable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L44\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"44\"></td>\n          <td id=\"LC44\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">mockitoTestListener</span> == <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L45\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"45\"></td>\n          <td id=\"LC45\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// get new test listener and add it to the framework</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">mockitoTestListener</span> = <span class=\"pl-s1\">listenerSupplier</span>.<span class=\"pl-en\">get</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">framework</span>().<span class=\"pl-en\">addListener</span>(<span class=\"pl-s1\">mockitoTestListener</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// init annotated mocks before tests</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">closeable</span> = <span class=\"pl-s1\">MockitoAnnotations</span>.<span class=\"pl-en\">openMocks</span>(<span class=\"pl-s1\">target</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">closeable</span> = <span class=\"pl-c1\">null</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">base</span>.<span class=\"pl-en\">evaluate</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">finally</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">closeable</span> != <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">closeable</span>.<span class=\"pl-en\">close</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">Since the mocks are not initialized for the second test, it ultimately causes the <code class=\"notranslate\">NullPointerException</code>.</p>\n<p dir=\"auto\">It's also causing the remaining tests after the first test failure to bounce back and forth between <code class=\"notranslate\">NullPointerException</code> and <code class=\"notranslate\">NotAMockException</code>. The reason for this appears to be because <a href=\"https://github.com/mockito/mockito/blob/573bf0df389964d7fdeb4de486882d4599b8033c/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L67\">this failure</a> object never gets reset after it's processed so it keeps restarting the chain of throwing the two exceptions back and forth.</p>\n<p dir=\"auto\">Also, I did include a sample test that manually opens and closes the mocks (doesn't use MockitoJUnitRunner) and everything is working as expected. Using the try-with-resource works fine as well.</p>\n<p dir=\"auto\">I did investigate further and noticed something related to this might have been addressed in <a href=\"https://github.com/mockito/mockito/pull/1968/files?file-filters%5B%5D=.java#diff-d24b5a756bdb953f5effcddac2b17b72R42\">this PR</a>. It only updated the findStubbings method to skip the static mocks, though. Was the AllInvocationsFinder.find(...) method intentional left out of that or just an oversight?</p>","resourcePath":"/mockito/mockito/issues/1988","createdAt":"2020-07-25T09:08:58Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix Javadoc invalid syntax","url":"https://github.com/mockito/mockito/pull/1978","resourcePath":"/mockito/mockito/pull/1978","createdAt":"2020-07-17T11:24:57Z","number":1978,"mergeCommit":{"oid":"4ebf513eb649ec5d1452fcce62ae5c32f2a44d96","message":"Fix invalid Javadoc syntax (#1978)\n\nFixes #1977\r\n\r\n[ci maven-central-release]","commitUrl":"https://github.com/mockito/mockito/commit/4ebf513eb649ec5d1452fcce62ae5c32f2a44d96","parents":{"nodes":[{"oid":"6635deec58a7931745874d5d8c6034a7375fa15a","message":"3.4.2 release (previous 3.4.1) + release notes updated by CI build 4597\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mockito.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDUxMDUwNTg4Ojk2N2E5NGNhODJjOTQyOTkyMzcwMmM0NjNkZDQ3ODc0MTJiNTliOTI=","url":"https://github.com/mockito/mockito/pull/1978/commits/967a94ca82c9429923702c463dd4787412b59b92"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1977,"url":"https://github.com/mockito/mockito/issues/1977","title":"Broken documentation","bodyHTML":"<p dir=\"auto\">Documentation generated from Javadoc on Mockito class is broken.<br>\nEverything after Java annotation example in section 9 <a href=\"https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#9\" rel=\"nofollow\">https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#9</a> is not displayed.</p>\n<p dir=\"auto\">The problem is in wrongly used @ sign in example, it should be escaped to html entity.</p>\n<p dir=\"auto\">Bug was introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"647199440\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1961\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1961/hovercard\" href=\"https://github.com/mockito/mockito/pull/1961\">#1961</a></p>","resourcePath":"/mockito/mockito/issues/1977","createdAt":"2020-07-17T11:24:22Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Only enable mocking of types right before instantiation to avoid circular interception of constructor creation.","url":"https://github.com/mockito/mockito/pull/2017","resourcePath":"/mockito/mockito/pull/2017","createdAt":"2020-08-21T08:49:37Z","number":2017,"mergeCommit":{"oid":"a11a6915527841b672dbdf0a382ede9aa75d8778","message":"[ci maven-central-release] Merge pull request #2017 from mockito/constructor-dispatch\n\nOnly enable mocking of types right before instantiation to avoid circular interception of constructor creation.","commitUrl":"https://github.com/mockito/mockito/commit/a11a6915527841b672dbdf0a382ede9aa75d8778","parents":{"nodes":[{"oid":"5cb5a665840a84fa90a6f9aee9a4f4b982007cb3","message":"3.5.3 release (previous 3.5.2) + release notes updated by CI build 4723\n\n[ci skip-release]"},{"oid":"3d1405f1c431888b2641a003868ba5b9300aa611","message":"Only enable mocking of types right before instantiation to avoid circular interception of constructor creation."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/ModuleMemberAccessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/ReflectionMemberAccessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/plugins/MemberAccessor.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcxNTAyNjg5OjNkMTQwNWYxYzQzMTg4OGIyNjQxYTAwMzg2OGJhNWI5MzAwYWE2MTE=","url":"https://github.com/mockito/mockito/pull/2017/commits/3d1405f1c431888b2641a003868ba5b9300aa611"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2015,"url":"https://github.com/mockito/mockito/issues/2015","title":"Issues mocking Java framework classes in Robolectric with mockito-inline","bodyHTML":"<p dir=\"auto\">Hi Mockito folks,</p>\n<p dir=\"auto\">Currently it is not possible to mock a Java framework class (e.g. java.io.File) in Robolectric when mockito-inline is used. This issue has come up a bunch of times in Robolectric, mostly when Kotlin is used to write Robolectric tests.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"579160684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5522\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5522/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5522\">robolectric/robolectric#5522</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"615304854\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5638\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5638/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5638\">robolectric/robolectric#5638</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"682816249\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5865/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5865\">robolectric/robolectric#5865</a></p>\n<p dir=\"auto\">For instance, if a trivial tests is run with the Robolectric test runner with mockito-inline:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  @Test\n  public void file_getAbsolutePath_isMockable() throws Exception {\n    File file = mock(File.class);\n    doReturn(&quot;absolute/path&quot;).when(file).getAbsolutePath();\n    assertThat(file.getAbsolutePath()).isEqualTo(&quot;absolute/path&quot;);\n  }\"><pre>  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">file_getAbsolutePath_isMockable</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">file</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">File</span>.<span class=\"pl-s1\">class</span>);\n    <span class=\"pl-en\">doReturn</span>(<span class=\"pl-s\">\"absolute/path\"</span>).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">file</span>).<span class=\"pl-en\">getAbsolutePath</span>();\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">file</span>.<span class=\"pl-en\">getAbsolutePath</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"absolute/path\"</span>);\n  }</pre></div>\n<p dir=\"auto\">An NPE will result:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\"><pre class=\"notranslate\"><code>java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n</code></pre></div>\n<p dir=\"auto\">Robolectric uses an instrumenting ClassLoader that transforms Android classes to use real implementations:<br>\n<a href=\"https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105\">https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105</a></p>\n<p dir=\"auto\">Here is a fork of Robolectric that has a test that captures the issue:<br>\n<a href=\"https://github.com/hoisie/robolectric/tree/mockito-inline-test\">https://github.com/hoisie/robolectric/tree/mockito-inline-test</a></p>\n<p dir=\"auto\">You can see the failure using the following command:<br>\n<code class=\"notranslate\">./gradlew  :integration_tests:mockito-experimental:test</code></p>\n<p dir=\"auto\">Any tips/help debugging would be greatly appreciated. It would be nice to figure out what Robolectric is doing to prevent this from working.</p>","resourcePath":"/mockito/mockito/issues/2015","createdAt":"2020-08-21T05:00:26Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Only enable mocking of types right before instantiation to avoid circular interception of constructor creation.","url":"https://github.com/mockito/mockito/pull/2018","resourcePath":"/mockito/mockito/pull/2018","createdAt":"2020-08-21T08:49:37Z","number":2018,"mergeCommit":{"oid":"a11a6915527841b672dbdf0a382ede9aa75d8778","message":"[ci maven-central-release] Merge pull request #2017 from mockito/constructor-dispatch\n\nOnly enable mocking of types right before instantiation to avoid circular interception of constructor creation.","commitUrl":"https://github.com/mockito/mockito/commit/a11a6915527841b672dbdf0a382ede9aa75d8778","parents":{"nodes":[{"oid":"5cb5a665840a84fa90a6f9aee9a4f4b982007cb3","message":"3.5.3 release (previous 3.5.2) + release notes updated by CI build 4723\n\n[ci skip-release]"},{"oid":"3d1405f1c431888b2641a003868ba5b9300aa611","message":"Only enable mocking of types right before instantiation to avoid circular interception of constructor creation."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/ModuleMemberAccessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/ReflectionMemberAccessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/plugins/MemberAccessor.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcxNTAyNjkxOjNkMTQwNWYxYzQzMTg4OGIyNjQxYTAwMzg2OGJhNWI5MzAwYWE2MTE=","url":"https://github.com/mockito/mockito/pull/2018/commits/3d1405f1c431888b2641a003868ba5b9300aa611"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2015,"url":"https://github.com/mockito/mockito/issues/2015","title":"Issues mocking Java framework classes in Robolectric with mockito-inline","bodyHTML":"<p dir=\"auto\">Hi Mockito folks,</p>\n<p dir=\"auto\">Currently it is not possible to mock a Java framework class (e.g. java.io.File) in Robolectric when mockito-inline is used. This issue has come up a bunch of times in Robolectric, mostly when Kotlin is used to write Robolectric tests.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"579160684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5522\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5522/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5522\">robolectric/robolectric#5522</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"615304854\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5638\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5638/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5638\">robolectric/robolectric#5638</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"682816249\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5865/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5865\">robolectric/robolectric#5865</a></p>\n<p dir=\"auto\">For instance, if a trivial tests is run with the Robolectric test runner with mockito-inline:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  @Test\n  public void file_getAbsolutePath_isMockable() throws Exception {\n    File file = mock(File.class);\n    doReturn(&quot;absolute/path&quot;).when(file).getAbsolutePath();\n    assertThat(file.getAbsolutePath()).isEqualTo(&quot;absolute/path&quot;);\n  }\"><pre>  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">file_getAbsolutePath_isMockable</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">file</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">File</span>.<span class=\"pl-s1\">class</span>);\n    <span class=\"pl-en\">doReturn</span>(<span class=\"pl-s\">\"absolute/path\"</span>).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">file</span>).<span class=\"pl-en\">getAbsolutePath</span>();\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">file</span>.<span class=\"pl-en\">getAbsolutePath</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"absolute/path\"</span>);\n  }</pre></div>\n<p dir=\"auto\">An NPE will result:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\"><pre class=\"notranslate\"><code>java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n</code></pre></div>\n<p dir=\"auto\">Robolectric uses an instrumenting ClassLoader that transforms Android classes to use real implementations:<br>\n<a href=\"https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105\">https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105</a></p>\n<p dir=\"auto\">Here is a fork of Robolectric that has a test that captures the issue:<br>\n<a href=\"https://github.com/hoisie/robolectric/tree/mockito-inline-test\">https://github.com/hoisie/robolectric/tree/mockito-inline-test</a></p>\n<p dir=\"auto\">You can see the failure using the following command:<br>\n<code class=\"notranslate\">./gradlew  :integration_tests:mockito-experimental:test</code></p>\n<p dir=\"auto\">Any tips/help debugging would be greatly appreciated. It would be nice to figure out what Robolectric is doing to prevent this from working.</p>","resourcePath":"/mockito/mockito/issues/2015","createdAt":"2020-08-21T05:00:26Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #1898 : Return mock name from toString method for deep stub mocks","url":"https://github.com/mockito/mockito/pull/1942","resourcePath":"/mockito/mockito/pull/1942","createdAt":"2020-05-31T00:29:41Z","number":1942,"mergeCommit":{"oid":"3c10616de9284f13e7f76604dc0d9ecc50ab9877","message":"Fixes #1898 : Return mock name from toString method for deep stub mocks (#1942)","commitUrl":"https://github.com/mockito/mockito/commit/3c10616de9284f13e7f76604dc0d9ecc50ab9877","parents":{"nodes":[{"oid":"662017026f1cb0a50bc28cb32e4b5806dfbdb552","message":"[checkstyle] Switch to new DTD (#1940)\n\nThe location for the checkstyle DTD has moved."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/DeepStubbingTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDI1NTQxMjEyOjJlOTgzOTIyMDYzNmEzYWY0NmMwMDhjZjlhNDE5MjI0MTg2ZTQxZDY=","url":"https://github.com/mockito/mockito/pull/1942/commits/2e9839220636a3af46c008cf9a419224186e41d6"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1898,"url":"https://github.com/mockito/mockito/issues/1898","title":"RETURNS_DEEP_STUBS override a mock's toString to `null`","bodyHTML":"<p dir=\"auto\">This example describes the issue:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  @Test\n  public void mocksWithDeepStubsReturnNameOnToString() {\n    Object proudMock = Mockito.mock(\n        Object.class,\n        Mockito.withSettings()\n            .name(&quot;I'm a mock!&quot;)\n            .defaultAnswer(Mockito.RETURNS_DEEP_STUBS));\n\n    // fails, toString() returns null\n    assertThat(proudMock.toString()).isEqualTo(&quot;I'm a mock!&quot;);\n  }\"><pre class=\"notranslate\"><code>  @Test\n  public void mocksWithDeepStubsReturnNameOnToString() {\n    Object proudMock = Mockito.mock(\n        Object.class,\n        Mockito.withSettings()\n            .name(\"I'm a mock!\")\n            .defaultAnswer(Mockito.RETURNS_DEEP_STUBS));\n\n    // fails, toString() returns null\n    assertThat(proudMock.toString()).isEqualTo(\"I'm a mock!\");\n  }\n</code></pre></div>\n<p dir=\"auto\">I'm experiencing this on 2.26.0, (looking at <a href=\"https://github.com/mockito/mockito/blame/release/3.x/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\">ReturnsDeepStubs</a> looks like it hasn't changed much since then).</p>\n<p dir=\"auto\">I think toString should still return the mock's name, right now it returns a <code class=\"notranslate\">null</code>.</p>","resourcePath":"/mockito/mockito/issues/1898","createdAt":"2020-04-01T22:04:43Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Mockito #1013: Defines and implements API for static mocking.","url":"https://github.com/mockito/mockito/pull/1955","resourcePath":"/mockito/mockito/pull/1955","createdAt":"2020-06-19T19:46:05Z","number":1955,"mergeCommit":{"oid":"573bf0df389964d7fdeb4de486882d4599b8033c","message":"[ci maven-central-release] Include ability for static mocks\n\nMockito #1013: Defines and implements API for static mocking.","commitUrl":"https://github.com/mockito/mockito/commit/573bf0df389964d7fdeb4de486882d4599b8033c","parents":{"nodes":[{"oid":"87aacaeca72f99941323d7d5d981cde333177b23","message":"Document using `@Mock` with method parameters (#1961)\n\nAlthough we've called it out in the [JUnit extension], we should also\r\nmake sure it's clear in the core documentation to make it more visible.\r\n\r\nWe can fully-quality the `@Test` annotation to make clear that it has to\r\nbe with JUnit 5.\r\n\r\nCloses #1960.\r\n\r\n[JUnit extension]: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/org/mockito/junit/jupiter/MockitoExtension.html"},{"oid":"bdd2b10ed5b02397614324d31449d8a58f03cf72","message":"Update src/main/java/org/mockito/Captor.java\n\nCo-authored-by: Tim van der Lippe <TimvdLippe@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/bugs/FinalHashCodeAndEqualsRaiseNPEInInitMocksTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/bugs/GenericsMockitoAnnotationsTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/bugs/creation/ConstructorInvokingMethodShouldNotRaiseExceptionTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/bugs/injection/ParentTestMockInjectionTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitoutil/TestBase.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoAnyClassWithPrimitiveType.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/StaticMockTest.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"}},{"node":{"changeType":"MODIFIED","path":"version.properties"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDM3MjY5MjQ3OmJkZDJiMTBlZDViMDIzOTc2MTQzMjRkMzE0NDlkOGE1OGYwM2NmNzI=","url":"https://github.com/mockito/mockito/pull/1955/commits/bdd2b10ed5b02397614324d31449d8a58f03cf72"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1013,"url":"https://github.com/mockito/mockito/issues/1013","title":"Enable mocking static methods in Mockito","bodyHTML":"<h1 dir=\"auto\">Static methods mocking with Mockito</h1>\n<p dir=\"auto\">This is a placeholder ticket for enabling mocking static methods in Mockito. Example action items that are totally negotiable and can ran in parallel. We're looking for someone who can lead this effort.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Research + discuss whether it is a good idea to enable static methods mocking in Mockito. The theory is that it is useful for legacy code, which is most code in the world.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Research on how other mocking frameworks do that and whether it is considered useful feature for their users.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Design and present for discussion an API for static mocking (slightly relevant ticket: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"177898180\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/643\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/643/hovercard\" href=\"https://github.com/mockito/mockito/issues/643\">#643</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Work with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a> / ByteBuddy to come up with hacky prototype (the hackier, the better!)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Mold the prototype with the API, remove enough rough edges so that the feature is good enough for incubating rollout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> SHIP IT!</li>\n</ul>","resourcePath":"/mockito/mockito/issues/1013","createdAt":"2017-03-31T04:02:25Z","labels":{"edges":[{"node":{"name":"android"}},{"node":{"name":"please contribute"}},{"node":{"name":"feedback-needed"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"update dependency to byte buddy version 1.10.13","url":"https://github.com/mockito/mockito/pull/1973","resourcePath":"/mockito/mockito/pull/1973","createdAt":"2020-07-15T10:50:01Z","number":1973,"mergeCommit":{"oid":"eda22b7c8b4e2d6611d87f3c8f72f18c51bb2ed8","message":"Update byte buddy to 1.10.13 (#1973)\n\nFixes #1972\r\n\r\nCo-authored-by: Michael Kroll <michael.kroll@t-systems.com>","commitUrl":"https://github.com/mockito/mockito/commit/eda22b7c8b4e2d6611d87f3c8f72f18c51bb2ed8","parents":{"nodes":[{"oid":"05b39bfc5e4558f4c1c6853d5b454f534bdfefe0","message":"3.4.0 release (previous 3.3.12) + release notes updated by CI build 4577\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDQ5NDAyMzIxOjEyODQ4YWNmNjY0MDc0NjIzOGI3ZjNmYWQwNThiOWViNjcwZWU3NTU=","url":"https://github.com/mockito/mockito/pull/1973/commits/12848acf6640746238b7f3fad058b9eb670ee755"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1972,"url":"https://github.com/mockito/mockito/issues/1972","title":"Update dependency to byte buddy version 1.10.13","bodyHTML":"<p dir=\"auto\"><a href=\"https://github.com/mockito/mockito/blob/release/3.x/gradle/dependencies.gradle#L7\">https://github.com/mockito/mockito/blob/release/3.x/gradle/dependencies.gradle#L7</a></p>\n<p dir=\"auto\">1.10.13 is available: <a href=\"https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.13\">https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.13</a></p>","resourcePath":"/mockito/mockito/issues/1972","createdAt":"2020-07-15T10:38:43Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Initializes spies within constructors of a mock instance for the inline mock maker.","url":"https://github.com/mockito/mockito/pull/2002","resourcePath":"/mockito/mockito/pull/2002","createdAt":"2020-08-13T18:58:58Z","number":2002,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/MockUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/plugins/MockMaker.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/MockitoTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/configuration/MockAnnotationProcessorTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/ConstructionMockRuleTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/ConstructionMockTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/StaticMockRuleTest.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/junitJupiterInlineMockMakerExtensionTest/src/test/java/org/mockitousage/NoExtendsTest.java"}},{"node":{"changeType":"MODIFIED","path":"version.properties"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDY3NTc2ODA2OmNkYzRmYTRiZGRhZmY5YzgwYTk0Y2JjYjhlOGYzNGE2YjgyZjZkNGY=","url":"https://github.com/mockito/mockito/pull/2002/commits/cdc4fa4bddaff9c80a94cbcb8e8f34a6b82f6d4f"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1782,"url":"https://github.com/mockito/mockito/issues/1782","title":"Spying on ArrayList generates Illegal reflective access warning with Java 11","bodyHTML":"<p dir=\"auto\">Spying on <code class=\"notranslate\">ArrayList</code> generates Illegal reflective access warning with Java 11 (12):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\nto field java.util.ArrayList.elementData\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.ArrayList.size\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.AbstractList.modCount\"><pre class=\"notranslate\"><code>WARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\nto field java.util.ArrayList.elementData\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.ArrayList.size\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.AbstractList.modCount\n</code></pre></div>\n<p dir=\"auto\">Sample code to reproduce the situation:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void shouldNotCallOriginalMethod() {\n        //given\n        List&lt;Integer&gt; spiedList = spy(new ArrayList&lt;&gt;());\n        willReturn(3).given(spiedList).get(0);\n        //when\n        Integer readValue = spiedList.get(0);\n        //then\n        assertThat(readValue).isEqualTo(3);\n    }\"><pre class=\"notranslate\"><code>    @Test\n    public void shouldNotCallOriginalMethod() {\n        //given\n        List&lt;Integer&gt; spiedList = spy(new ArrayList&lt;&gt;());\n        willReturn(3).given(spiedList).get(0);\n        //when\n        Integer readValue = spiedList.get(0);\n        //then\n        assertThat(readValue).isEqualTo(3);\n    }\n</code></pre></div>\n<p dir=\"auto\">Occurs with (at least):</p>\n<ul dir=\"auto\">\n<li>Mockito 3.0.0 and 3.0.8</li>\n<li>ByteBuddy 1.9.10 and 1.10.1</li>\n<li>Java 11 and 12 (modern versions)</li>\n</ul>\n<p dir=\"auto\">It's just a warning right now, but it could be disallowed one day, so maybe there is some other way to do that with ArrayList (and probably also some other classes from JDK).</p>","resourcePath":"/mockito/mockito/issues/1782","createdAt":"2019-09-24T20:23:20Z","labels":{"edges":[{"node":{"name":"java-11"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Update objenesis to 3.1","url":"https://github.com/mockito/mockito/pull/1998","resourcePath":"/mockito/mockito/pull/1998","createdAt":"2020-08-09T09:50:17Z","number":1998,"mergeCommit":{"oid":"32684d1acd6df8f1d143827a16ef5de5e4dc4d6a","message":"Update objenesis to 3.1 (#1998)\n\nRelease notes: http://objenesis.org/notes.html","commitUrl":"https://github.com/mockito/mockito/commit/32684d1acd6df8f1d143827a16ef5de5e4dc4d6a","parents":{"nodes":[{"oid":"b87fad310bf59b94035028dc478089ded2a9198a","message":"3.4.7 release (previous 3.4.6) + release notes updated by CI build 4667\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}},{"node":{"changeType":"MODIFIED","path":"gradle/mockito-core/osgi.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDY1MTMxMTI5OmNkMjc4MTYxYjM1NGNhZGMxZjA4MzE1MGJjOGNkOGI1MDMwM2NiZGE=","url":"https://github.com/mockito/mockito/pull/1998/commits/cd278161b354cadc1f083150bc8cd8b50303cbda"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1992,"url":"https://github.com/mockito/mockito/issues/1992","title":"Update to org.objenesis 3.x","bodyHTML":"<p dir=\"auto\">Hi all,</p>\n<p dir=\"auto\">we are slowly updating our product to Java 11; we've managed to move to Java 11 runtime, now we are trying to also compile with Java 11.</p>\n<p dir=\"auto\">We ran into a problem with <code class=\"notranslate\">org.easymock</code> (it doesn't work with Java 11 compiled classes, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"332234784\" data-permission-text=\"Title is private\" data-url=\"https://github.com/easymock/easymock/issues/218\" data-hovercard-type=\"issue\" data-hovercard-url=\"/easymock/easymock/issues/218/hovercard\" href=\"https://github.com/easymock/easymock/issues/218\">easymock/easymock#218</a>). The problem is resolved in 4.x versions.</p>\n<p dir=\"auto\">Unfortunately, 4.x versions of <code class=\"notranslate\">org.easymock</code> run only with <code class=\"notranslate\">org.objenesis</code> 3.x, which <code class=\"notranslate\">mockito</code> so far does not accept (upper bound for <code class=\"notranslate\">org.objenesis</code> is 2.6).</p>\n<p dir=\"auto\">Are there plans to update <code class=\"notranslate\">mockito</code> to run with <code class=\"notranslate\">org.objenesis</code> and if so are there known timelines?</p>\n<p dir=\"auto\">Some more background:</p>\n<p dir=\"auto\">We essentially wished to update to latest <code class=\"notranslate\">mockito</code> and <code class=\"notranslate\">easymock</code> earlier (during the Java 11 runtime move), but were unable to do so due to conflicting <code class=\"notranslate\">org.objenesis</code> requirements. If we want to compile with Java 11 however, we are made to choose between  <code class=\"notranslate\">easymock</code> or <code class=\"notranslate\">mockito</code>, or waiting. We would prefer to wait, if a <code class=\"notranslate\">mockito</code> update that runs with <code class=\"notranslate\">org.objenesis</code> 3.x would be available soon.</p>\n<p dir=\"auto\">Sorry if this should be an e-mail message and not an issue in the tracker, or if this is a duplicate (I didn't find much about <code class=\"notranslate\">org.objenesis</code> in the issue list).</p>\n<p dir=\"auto\">Best regards and thanks,<br>\nSimeon</p>","resourcePath":"/mockito/mockito/issues/1992","createdAt":"2020-08-07T14:57:09Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Removed redundant CI workflow","url":"https://github.com/mockito/mockito/pull/2096","resourcePath":"/mockito/mockito/pull/2096","createdAt":"2020-11-10T16:23:18Z","number":2096,"mergeCommit":{"oid":"c596aef9fc79e0ce4f9af029be9ef191d6b22da1","message":"Merge pull request #2096 from mockito/mockitoguy-patch-1\n\nRemoved redundant CI workflow","commitUrl":"https://github.com/mockito/mockito/commit/c596aef9fc79e0ce4f9af029be9ef191d6b22da1","parents":{"nodes":[{"oid":"33bd1840140088fa130d2a5b1d7f702b33800641","message":"Improved CI workflow\n\nMade Gradle wrapper validation a part of the main CI workflow. This way, we can remove the explicit wrapper validation workflow. Less workflows -> simpler CI. Fixe #2094 [skip travis]"},{"oid":"d0cd8c2fc88ac1b35a841c018fc7051d8132d1be","message":"Removed redundant CI workflow\n\nWe don't need an explicit workflow for wrapper validation. We already run this as a step in the build:\r\n\r\nhttps://github.com/mockito/mockito/runs/1380756176?check_suite_focus=true#step:4:1"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"DELETED","path":".github/workflows/gradle-wrapper-validation.yml"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTE4NjA3NDYzOmQwY2Q4YzJmYzg4YWMxYjM1YTg0MWMwMThmYzcwNTFkODEzMmQxYmU=","url":"https://github.com/mockito/mockito/pull/2096/commits/d0cd8c2fc88ac1b35a841c018fc7051d8132d1be"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2094,"url":"https://github.com/mockito/mockito/issues/2094","title":"Refactor Gradle wrapper validation workflow to CI workflow","bodyHTML":"<p dir=\"auto\">Refactor Gradle wrapper validation workflow to CI workflow. This way, we CI feedback on PRs is cleaner and easier to use.</p>","resourcePath":"/mockito/mockito/issues/2094","createdAt":"2020-11-08T23:20:01Z","labels":{"edges":[{"node":{"name":"continuous integration"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2007 : Downgrade objenesis version for mockito-android","url":"https://github.com/mockito/mockito/pull/2024","resourcePath":"/mockito/mockito/pull/2024","createdAt":"2020-08-26T17:05:23Z","number":2024,"mergeCommit":{"oid":"626d4573c702625611d2024463bae606a4e8cca4","message":"Fixes #2007 : Downgrade objenesis version for mockito-android (#2024)\n\n[ci maven-central-release]\r\n\r\nCo-authored-by: Tim van der Lippe <TimvdLippe@users.noreply.github.com>","commitUrl":"https://github.com/mockito/mockito/commit/626d4573c702625611d2024463bae606a4e8cca4","parents":{"nodes":[{"oid":"a8b156509fc8e35cf122e1abe8c36d1e196ed041","message":"3.5.8 release (previous 3.5.7) + release notes updated by CI build 4758\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"build.gradle"}},{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}},{"node":{"changeType":"MODIFIED","path":"subprojects/android/android.gradle"}},{"node":{"changeType":"MODIFIED","path":"subprojects/osgi-test/osgi-test.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc0MDM5ODA2Ojg5MTgyMDJiNTE5ZGYyNWFjMWEzOTNkMjdmNTU2YTliOTU1MzA1MmM=","url":"https://github.com/mockito/mockito/pull/2024/commits/8918202b519df25ac1a393d27f556a9b9553052c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2007,"url":"https://github.com/mockito/mockito/issues/2007","title":"Android instrumentation test packaging fails for mockito-android 3.5.0 with minSdk < 26","bodyHTML":"<p dir=\"auto\">We've upgraded from <code class=\"notranslate\">mockito-android:3.4.6</code> to <code class=\"notranslate\">mockito-android:3.5.0</code>. I'm attempting to package up my instrumented tests by running the <code class=\"notranslate\">assembleAndroidTest</code> gradle task. The task fails with the following errors:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\"><pre class=\"notranslate\"><code>/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n</code></pre></div>\n<p dir=\"auto\">and with root cause:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\"><pre class=\"notranslate\"><code>com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/2007","createdAt":"2020-08-18T00:37:46Z","labels":{"edges":[{"node":{"name":"android"}},{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Update Byte Buddy.","url":"https://github.com/mockito/mockito/pull/2050","resourcePath":"/mockito/mockito/pull/2050","createdAt":"2020-09-18T22:34:20Z","number":2050,"mergeCommit":{"oid":"6ec033c1e4a2c59a636573d79620fc287ebe86ae","message":"Update Byte Buddy to 1.10.15 (#2050)","commitUrl":"https://github.com/mockito/mockito/commit/6ec033c1e4a2c59a636573d79620fc287ebe86ae","parents":{"nodes":[{"oid":"5a664cfd68bd50d3f3447ce44879d60045b199ec","message":"3.5.11 release (previous 3.5.10) + release notes updated by CI build 4792\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg5NTY5NDI5OjJkZjNmNWE1YzE4NjExYWZlYmZiNWRkMDczOTNjOWE3MThiZTE5ZTk=","url":"https://github.com/mockito/mockito/pull/2050/commits/2df3f5a5c18611afebfb5dd07393c9a718be19e9"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2039,"url":"https://github.com/mockito/mockito/issues/2039","title":"Failed to mock after upgrading Mockito to version v3.4.x or higher","bodyHTML":"<p dir=\"auto\">Upgrading Mockito to version v3.4.x or higher break the test.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private val stripe = Mockito.mock(Stripe::class.java)\"><pre class=\"notranslate\"><code>private val stripe = Mockito.mock(Stripe::class.java)\n</code></pre></div>\n<p dir=\"auto\">I mock a Stripe SDK class (<a href=\"https://github.com/stripe/stripe-android\">https://github.com/stripe/stripe-android</a>) in my test.<br>\nOn Mockito v3.4.x or higher the mock is failed.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.stripe.android.Stripe.\nCan not mock final classes with the following settings :\n - explicit serialization (e.g. withSettings().serializable())\n - extra interfaces (e.g. withSettings().extraInterfaces(...))\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : java.lang.IllegalArgumentException: Could not create type\"><pre class=\"notranslate\"><code>org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.stripe.android.Stripe.\nCan not mock final classes with the following settings :\n - explicit serialization (e.g. withSettings().serializable())\n - extra interfaces (e.g. withSettings().extraInterfaces(...))\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : java.lang.IllegalArgumentException: Could not create type\n</code></pre></div>\n<p dir=\"auto\">with trace</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"at com.x.y.z.domain.PaymentUseCaseTest.&lt;init&gt;(PaymentUseCaseTest.kt:24)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:511)\n\tat org.junit.jupiter.engine.execution.ConstructorInvocation.proceed(ConstructorInvocation.java:56)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:72)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:333)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:262)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:256)\n\tat java.util.Optional.orElseGet(Optional.java:267)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:255)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:108)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\nCaused by: java.lang.IllegalArgumentException: Could not create type\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:154)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:365)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:174)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:376)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:36)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(InlineByteBuddyMockMaker.java:379)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:339)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:52)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:61)\n\tat org.mockito.Mockito.mock(Mockito.java:1949)\n\tat org.mockito.Mockito.mock(Mockito.java:1860)\n\t... 64 more\nCaused by: java.lang.VerifyError\n\tat sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:144)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:260)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:211)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:46)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:43)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:152)\"><pre class=\"notranslate\"><code>at com.x.y.z.domain.PaymentUseCaseTest.&lt;init&gt;(PaymentUseCaseTest.kt:24)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:511)\n\tat org.junit.jupiter.engine.execution.ConstructorInvocation.proceed(ConstructorInvocation.java:56)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:72)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:333)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:262)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:256)\n\tat java.util.Optional.orElseGet(Optional.java:267)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:255)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:108)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\nCaused by: java.lang.IllegalArgumentException: Could not create type\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:154)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:365)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:174)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:376)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:36)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(InlineByteBuddyMockMaker.java:379)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:339)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:52)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:61)\n\tat org.mockito.Mockito.mock(Mockito.java:1949)\n\tat org.mockito.Mockito.mock(Mockito.java:1860)\n\t... 64 more\nCaused by: java.lang.VerifyError\n\tat sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:144)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:260)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:211)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:46)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:43)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:152)\n</code></pre></div>\n<p dir=\"auto\">I am interested to know what changes from 3.3.x to 3.4.x that causing this</p>\n<p dir=\"auto\">Edit: Added bytebuddy dump from <code class=\"notranslate\">-Dnet.bytebuddy.dump</code> command<br>\ndump: <a href=\"https://github.com/mockito/mockito/files/5193173/bytebuddy.zip\">bytebuddy.zip</a></p>","resourcePath":"/mockito/mockito/issues/2039","createdAt":"2020-09-08T13:21:24Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Commit message directives for CI workflow","url":"https://github.com/mockito/mockito/pull/2101","resourcePath":"/mockito/mockito/pull/2101","createdAt":"2020-11-12T16:04:13Z","number":2101,"mergeCommit":{"oid":"c0bdf43e11467ca7af2c594dc38c65b2901251c3","message":"Merge pull request #2101 from mockito/mockitoguy-patch-2\n\nCommit message directives for CI workflow","commitUrl":"https://github.com/mockito/mockito/commit/c0bdf43e11467ca7af2c594dc38c65b2901251c3","parents":{"nodes":[{"oid":"3b09f8e8e0e8aa60039b7f17207a18032d8e7a8f","message":"Removed duplicated setting (#2091)\n\nThere is no need of specifying --parallel explicitly as it is Gradle's default."},{"oid":"be15bfb8d7c98edfe92da6ccd50554764966fd24","message":"Commit message directives for CI workflow\n\nAdded standard idioms for avoiding unnecessary jobs: [skip ci] and [skip release] directives can be added in the commit message, bypassing the CI or release from CI."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":".github/workflows/ci.yml"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTE5OTg3MzIyOmJlMTViZmI4ZDdjOThlZGZlOTJkYTZjY2Q1MDU1NDc2NDk2NmZkMjQ=","url":"https://github.com/mockito/mockito/pull/2101/commits/be15bfb8d7c98edfe92da6ccd50554764966fd24"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2095,"url":"https://github.com/mockito/mockito/issues/2095","title":"Implement [ci skip release] in the CI pipeline","bodyHTML":"<p dir=\"auto\">Make it possible to skip release when pushing changes to the repo. Our README.md currently documents that we can skip releases by adding \"ci skip release\" keyword to the commit message.</p>\n<p dir=\"auto\">Reference example: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/shipkit/shipkit-auto-version/commit/7a8ada573e3d8f183b9101b716a261612db30f87/hovercard\" href=\"https://github.com/shipkit/shipkit-auto-version/commit/7a8ada573e3d8f183b9101b716a261612db30f87\">shipkit/shipkit-auto-version@<tt>7a8ada5</tt></a></p>","resourcePath":"/mockito/mockito/issues/2095","createdAt":"2020-11-09T16:16:44Z","labels":{"edges":[{"node":{"name":"continuous integration"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Enabled releases to Maven Central","url":"https://github.com/mockito/mockito/pull/2111","resourcePath":"/mockito/mockito/pull/2111","createdAt":"2020-11-25T02:51:06Z","number":2111,"mergeCommit":{"oid":"98abe38177afc38c102bc8a6cb45bfbcf233272c","message":"Merge pull request #2111 from mockito/mvn-central\n\nEnabled releases to Maven Central [ci maven-central-release]","commitUrl":"https://github.com/mockito/mockito/commit/98abe38177afc38c102bc8a6cb45bfbcf233272c","parents":{"nodes":[{"oid":"fde5abb9f044a6b614eeb6a8c63d25fffe2df210","message":"Keep META-INF folder at top of published mockito-core jar (#2109)\n\nFixes #2108 \r\n[ci maven-central-release]"},{"oid":"3213b49313749da62ee6ed75999161d629ca7292","message":"Enabled releases to Maven Central\n\nFixed the bug with how we controlled Maven Central releases via commit messages.\n\nTesting done: Ran the workflow in a forked repository and b) observed that the information from the commit message is passed to the environment variable."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":".github/workflows/ci.yml"}},{"node":{"changeType":"MODIFIED","path":"gradle/shipkit.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTI3MDEwNTM2OjMyMTNiNDkzMTM3NDlkYTYyZWU2ZWQ3NTk5OTE2MWQ2MjljYTcyOTI=","url":"https://github.com/mockito/mockito/pull/2111/commits/3213b49313749da62ee6ed75999161d629ca7292"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2110,"url":"https://github.com/mockito/mockito/issues/2110","title":"Release process misses commit message tag","bodyHTML":"<p dir=\"auto\"><a href=\"https://github.com/mockito/mockito/runs/1447478222#step:4:168\">https://github.com/mockito/mockito/runs/1447478222#step:4:168</a></p>\n<p dir=\"auto\"><a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mockito/mockito/commit/fde5abb9f044a6b614eeb6a8c63d25fffe2df210/hovercard\" href=\"https://github.com/mockito/mockito/commit/fde5abb9f044a6b614eeb6a8c63d25fffe2df210\"><tt>fde5abb</tt></a> did contain <code class=\"notranslate\">[ci maven-central-release]</code> and therefore should have published.</p>","resourcePath":"/mockito/mockito/issues/2110","createdAt":"2020-11-24T14:12:09Z","labels":{"edges":[{"node":{"name":"bug"}},{"node":{"name":"continuous integration"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Prefer non-synthetic constructors in MockMethodAdvice.ConstructorShortcut","url":"https://github.com/mockito/mockito/pull/2045","resourcePath":"/mockito/mockito/pull/2045","createdAt":"2020-09-16T17:59:43Z","number":2045,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg4MTU1ODAwOjZjMjIwYTFjMmIzMzZkNjMwZTE5MTJkN2M1YzYyYTI0MWEzMGI4MDY=","url":"https://github.com/mockito/mockito/pull/2045/commits/6c220a1c2b336d630e1912d7c5c62a241a30b806"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2040,"url":"https://github.com/mockito/mockito/issues/2040","title":"Mockito.spy(Activity).getBaseContext() returns null on Robolectric 4.4 and Java8","bodyHTML":"<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Since robolectric 4.4, Mockito.spy(Activity).getBaseContext() returns null</p>\n<h3 dir=\"auto\">Steps to Reproduce</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ git clone -b mockito_spy_robolectric_4_4 https://github.com/ganadist/VersionCodeDemo demo\n$ cd demo\n\n// switch to robolectric 4.3.1\n$ git checkout HEAD~1\n$ ./gradlew :app:testDevelopDebugUnitTest\nBUILD SUCCESSFUL in 14s\n28 actionable tasks: 28 executed\n\n// switch to robolectric 4.4\n$ git checkout mockito_spy_robolectric_4_4\n$ ./gradlew :app:testDevelopDebugUnitTest\n&gt; Task :app:testDevelopDebugUnitTest FAILED\nFAILURE: Build failed with an exception.\n* What went wrong:\nExecution failed for task ':app:testDevelopDebugUnitTest'.\"><pre class=\"notranslate\"><code>$ git clone -b mockito_spy_robolectric_4_4 https://github.com/ganadist/VersionCodeDemo demo\n$ cd demo\n\n// switch to robolectric 4.3.1\n$ git checkout HEAD~1\n$ ./gradlew :app:testDevelopDebugUnitTest\nBUILD SUCCESSFUL in 14s\n28 actionable tasks: 28 executed\n\n// switch to robolectric 4.4\n$ git checkout mockito_spy_robolectric_4_4\n$ ./gradlew :app:testDevelopDebugUnitTest\n&gt; Task :app:testDevelopDebugUnitTest FAILED\nFAILURE: Build failed with an exception.\n* What went wrong:\nExecution failed for task ':app:testDevelopDebugUnitTest'.\n</code></pre></div>\n<p dir=\"auto\">Failed unittest result : <a href=\"https://scans.gradle.com/s/wbmmbnzatcyai/tests/:app:testDevelopDebugUnitTest/com.example.myapplication.UnitTest1/test1#1\" rel=\"nofollow\">https://scans.gradle.com/s/wbmmbnzatcyai/tests/:app:testDevelopDebugUnitTest/com.example.myapplication.UnitTest1/test1#1</a></p>\n<h3 dir=\"auto\">Robolectric &amp; Android Version</h3>\n<ul dir=\"auto\">\n<li>Compile Sdk : 29</li>\n<li>Target Sdk : 28</li>\n<li>Robolectric : 4.4</li>\n<li>Mockito : 3.5.10</li>\n<li>Jvm : OpenJDK 8</li>\n</ul>\n<h3 dir=\"auto\">Link to a public git repo demonstrating the problem:</h3>\n<p dir=\"auto\"><a href=\"https://github.com/ganadist/VersionCodeDemo/blob/mockito_spy_robolectric_4_4/app/src/test/java/com/example/myapplication/UnitTest1.java#L27-L38\">https://github.com/ganadist/VersionCodeDemo/blob/mockito_spy_robolectric_4_4/app/src/test/java/com/example/myapplication/UnitTest1.java#L27-L38</a></p>\n<p dir=\"auto\">This issue is copied from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"696670951\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5916\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5916/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5916\">robolectric/robolectric#5916</a></p>","resourcePath":"/mockito/mockito/issues/2040","createdAt":"2020-09-09T22:17:37Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Mock resolver plugin","url":"https://github.com/mockito/mockito/pull/2042","resourcePath":"/mockito/mockito/pull/2042","createdAt":"2020-09-14T20:12:59Z","number":2042,"mergeCommit":{"oid":"e098342c3cfad32a8b183593aa6719fb66b72674","message":"[ci maven-central-release] Merge pull request #2042 from mockito/mock-resolver-plugin\n\nMock resolver plugin","commitUrl":"https://github.com/mockito/mockito/commit/e098342c3cfad32a8b183593aa6719fb66b72674","parents":{"nodes":[{"oid":"e388e924ccc018934def0eb189a2926fca6063cb","message":"3.5.14 release (previous 3.5.13) + release notes updated by CI build 4814\n\n[ci skip-release]"},{"oid":"c81b028f4ac121f4939341ef724465d307274cd0","message":"Fixing \"best\" constructor choice."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/plugins/Plugins.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/DefaultMockingDetails.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/MockUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/plugins/MockMaker.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/plugins/MockResolver.java"}},{"node":{"changeType":"ADDED","path":"subprojects/extTest/src/test/java/org/mockitousage/plugins/resolver/MockResolverTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/extTest/src/test/java/org/mockitousage/plugins/resolver/MyMockResolver.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/extTest/src/test/java/org/mockitousage/plugins/switcher/PluginSwitchTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/extTest/src/test/resources/mockito-extensions/org.mockito.plugins.MockResolver"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg2ODU2NzM1OmM4MWIwMjhmNGFjMTIxZjQ5MzkzNDFlZjcyNDQ2NWQzMDcyNzRjZDA=","url":"https://github.com/mockito/mockito/pull/2042/commits/c81b028f4ac121f4939341ef724465d307274cd0"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1980,"url":"https://github.com/mockito/mockito/issues/1980","title":"mockito3.4.0 InlineByteBuddyMockMaker can't work with spring cglib proxy, but ByteBuddyMockMaker works","bodyHTML":"<p dir=\"auto\">I upgrade mockito to 3.4.0, and the mockMaker is InlineByteBuddyMockMaker, I use SpyBean to spy a spring bean, and then verify the bean, it throws NotAMockException.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/16514353/87801421-4492da80-c882-11ea-8ebc-7f1ee4c80f9c.png\"><img src=\"https://user-images.githubusercontent.com/16514353/87801421-4492da80-c882-11ea-8ebc-7f1ee4c80f9c.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">then i debug, find that the mocks.get(mock) can't find it because the mock is CGLIB proxy, not the original type.</p>\n<p dir=\"auto\">when I use the verify((AppGroupClusterAction) AopTestUtils.getTargetObject(appGroupClusterAction)) to verify. it works.</p>\n<p dir=\"auto\">but the before mockMaker ByteBuddyMockMaker works. so can the InlineByteBuddyMockMaker be compatible with the before？</p>","resourcePath":"/mockito/mockito/issues/1980","createdAt":"2020-07-17T15:10:00Z","labels":{"edges":[{"node":{"name":"awaiting response"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Avoided parallel workflow execution","url":"https://github.com/mockito/mockito/pull/2103","resourcePath":"/mockito/mockito/pull/2103","createdAt":"2020-11-14T05:25:40Z","number":2103,"mergeCommit":{"oid":"24cf496bed1bfd313c2ff83cf490bfc62ec4d5a7","message":"Merge pull request #2103 from mockito/mockitoguy-patch-2\n\nAvoided parallel workflow execution [skip release]","commitUrl":"https://github.com/mockito/mockito/commit/24cf496bed1bfd313c2ff83cf490bfc62ec4d5a7","parents":{"nodes":[{"oid":"c0bdf43e11467ca7af2c594dc38c65b2901251c3","message":"Merge pull request #2101 from mockito/mockitoguy-patch-2\n\nCommit message directives for CI workflow"},{"oid":"e54b63f76295713dfe2f8a48f1d33320c7394bd7","message":"Avoided parallel workflow execution\n\nAvoided parallel execution of the workflow so that:\r\n - we get better UX (the \"checks\" view in PR does not have duplicated jobs)\r\n - we run less builds (conserves build quota)\r\n\r\nWe *no longer* run CI for ordinary push to any remote branch. We run CI for pushes to the main dev branch or PRs.\r\n\r\nPreventing parallel workflows is reported to GitHub:\r\nhttps://github.community/t/prevent-parallel-workflows/16370"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":".github/workflows/ci.yml"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTIwOTYzMzEyOmU1NGI2M2Y3NjI5NTcxM2RmZTJmOGE0OGYxZDMzMzIwYzczOTRiZDc=","url":"https://github.com/mockito/mockito/pull/2103/commits/e54b63f76295713dfe2f8a48f1d33320c7394bd7"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2097,"url":"https://github.com/mockito/mockito/issues/2097","title":"Consider reducing CI execution footprint","bodyHTML":"<p dir=\"auto\">Right now we are running CI for:</p>\n<ul dir=\"auto\">\n<li>branch pushes</li>\n<li>PRs</li>\n</ul>\n<p dir=\"auto\">This causes redundant builds to be triggered (example, see actions triggered for PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"740053368\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2096\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2096/hovercard\" href=\"https://github.com/mockito/mockito/pull/2096\">#2096</a>). Redundant builds clutter the UI (reducing dev experience) and may count against our quota of free open source builds. This issue has been discussed on GH before: <a href=\"https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662\" rel=\"nofollow\">https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662</a></p>\n<p dir=\"auto\">Potential solutions:</p>\n<ul dir=\"auto\">\n<li>run only on PRs and pushes the the main dev branch</li>\n<li>use <a href=\"https://github.com/marketplace/actions/skip-duplicate-actions\">https://github.com/marketplace/actions/skip-duplicate-actions</a> (adds complexity to the workflow and requires exposing secrets to yet another 3rd party code)</li>\n</ul>","resourcePath":"/mockito/mockito/issues/2097","createdAt":"2020-11-10T16:33:26Z","labels":{"edges":[{"node":{"name":"continuous integration"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Initializes classes prior to instrumentation to avoid uncontrolled code execution.","url":"https://github.com/mockito/mockito/pull/2023","resourcePath":"/mockito/mockito/pull/2023","createdAt":"2020-08-25T22:10:20Z","number":2023,"mergeCommit":{"oid":"f31ba850384fa789278e11aea41efc3b1c877a48","message":"[ci maven-central-release] Merge pull request #2023 from mockito/explicit-initializer\n\nInitializes classes prior to instrumentation to avoid uncontrolled code execution.","commitUrl":"https://github.com/mockito/mockito/commit/f31ba850384fa789278e11aea41efc3b1c877a48","parents":{"nodes":[{"oid":"929840ab691b2f502b9958ac9483104bfd88a9ee","message":"3.5.6 release (previous 3.5.5) + release notes updated by CI build 4744\n\n[ci skip-release]"},{"oid":"24d8d790c22913a9a92ea70bad721b06a735cd46","message":"Initializes classes prior to instrumentation to avoid uncontrolled code execution.\n\nFixes \\# #2011"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/InitializationTest.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/inline/src/test/java/org/mockitoinline/PluginTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDczNTMyNzMzOjI0ZDhkNzkwYzIyOTEzYTlhOTJlYTcwYmFkNzIxYjA2YTczNWNkNDY=","url":"https://github.com/mockito/mockito/pull/2023/commits/24d8d790c22913a9a92ea70bad721b06a735cd46"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2011,"url":"https://github.com/mockito/mockito/issues/2011","title":"Stackoverflow error when upgrading to v3.5.2","bodyHTML":"<p dir=\"auto\">I tried to upgrade from Mockito v3.4.6 to v3.5.2 and I'm getting a stackoverflow error (same error with v3.5.0) when running some tests (not all of them, just a few ; even in the same class : some tests pass and others don't).</p>\n<p dir=\"auto\">Stacktrace :</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.StackOverflowError\n\tat java.base/java.lang.ThreadLocal.get(ThreadLocal.java:163)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.lambda$new$3(InlineByteBuddyMockMaker.java:260)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice.handleConstruction(MockMethodAdvice.java:176)\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleConstruction(MockMethodDispatcher.java:53)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n        ...\"><pre class=\"notranslate\"><code>java.lang.StackOverflowError\n\tat java.base/java.lang.ThreadLocal.get(ThreadLocal.java:163)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.lambda$new$3(InlineByteBuddyMockMaker.java:260)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice.handleConstruction(MockMethodAdvice.java:176)\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleConstruction(MockMethodDispatcher.java:53)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n        ...\n</code></pre></div>\n<p dir=\"auto\">I didn't succeed in reproduce the error in a small project, but I'll spend more time to try and post the sources here when/if I have a reproducible case.</p>\n<p dir=\"auto\">Environment :</p>\n<ul dir=\"auto\">\n<li>Mockito v3.5.2</li>\n<li>JUnit v5.6.2</li>\n<li>Java :</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">openjdk version \"11.0.8\" 2020-07-14<br>\nOpenJDK Runtime Environment (build 11.0.8+10-post-Ubuntu-0ubuntu118.04.1)<br>\nOpenJDK 64-Bit Server VM (build 11.0.8+10-post-Ubuntu-0ubuntu118.04.1, mixed mode, sharing)</p>\n</blockquote>\n<ul dir=\"auto\">\n<li>Maven : v3.6.0 (tests are run by the maven-surefire plugin)</li>\n</ul>","resourcePath":"/mockito/mockito/issues/2011","createdAt":"2020-08-20T11:42:48Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2061: ArgumentMatcher error messages use lambda class names","url":"https://github.com/mockito/mockito/pull/2071","resourcePath":"/mockito/mockito/pull/2071","createdAt":"2020-10-17T14:27:51Z","number":2071,"mergeCommit":{"oid":"214d66fa84af85026be9791456fccc06af2f6b61","message":"Fixes #2061: ArgumentMatcher error messages use lambda class names (#2071)","commitUrl":"https://github.com/mockito/mockito/commit/214d66fa84af85026be9791456fccc06af2f6b61","parents":{"nodes":[{"oid":"b16ec17cafdbf4fb968413c4992f044c1bb9526a","message":"Fix typo in osgi.gradle (#2070)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/matchers/text/MatcherToString.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/StringUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/matchers/text/MatcherToStringTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/util/StringUtilTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTA1MjkwODUwOjBlMTEzM2JkODhjZWNiYTY2YmRmOTAxOWI4MTA5NTU1ZTM5YjkyMzY=","url":"https://github.com/mockito/mockito/pull/2071/commits/0e1133bd88cecba66bdf9019b8109555e39b9236"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2061,"url":"https://github.com/mockito/mockito/issues/2061","title":"Lambda used as ArgumentMatcher causes decamelized lambda name to appear in error message","bodyHTML":"<h3 dir=\"auto\">Version</h3>\n<p dir=\"auto\">Mockito version: 3.5.13</p>\n<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Relates to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"616770746\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1932\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/1932/hovercard\" href=\"https://github.com/mockito/mockito/issues/1932\">#1932</a></p>\n<p dir=\"auto\">When using a lambda or method reference expression as <code class=\"notranslate\">ArgumentMatcher</code> and the matcher fails, the error message contains the lambda / method reference class name in \"decamelized\" form which is rather irritating, e.g.:</p>\n<blockquote>\n<p dir=\"auto\">myInterface.doSomething(<br>\n&lt;Mockito test$$ lambda$ 4 8/ 0x 0 0 0 0 0 0 0 8 0 0c 8f 4 4 0&gt;<br>\n);</p>\n</blockquote>\n<p dir=\"auto\">Expected would be that similar to anonymous classes the error output says \"&lt;custom argument matcher&gt;\". This could probably be achieved by testing for <code class=\"notranslate\">Class.isSynthetic()</code> in <code class=\"notranslate\">org.mockito.internal.matchers.text.MatcherToString.toString(ArgumentMatcher&lt;?&gt;)</code> before calling <code class=\"notranslate\">decamelizeMatcher</code> there.</p>\n<h3 dir=\"auto\">Test case</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MockitoTest {\n    interface MyInterface {\n        void doSomething(String s);\n    }\n    \n    private static boolean matches(String s) {\n        return false;\n    }\n    \n    public static void main(String[] args) {\n        MyInterface mock = mock(MyInterface.class);\n        try {\n            verify(mock).doSomething(argThat(arg -&gt; false));\n        } catch (Error e) {\n            e.printStackTrace();\n        }\n        try {\n            verify(mock).doSomething(argThat(MockitoTest::matches));\n        } catch (Error e) {\n            e.printStackTrace();\n        }\n        \n        // When an anonymous class is used the output is '&lt;custom argument matcher&gt;'\n        // (as expected)\n        verify(mock).doSomething(argThat(new ArgumentMatcher&lt;&gt;() {\n            @Override\n            public boolean matches(String argument) {\n                return false;\n            }\n        }));\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoTest</span> {\n    <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">MyInterface</span> {\n        <span class=\"pl-smi\">void</span> <span class=\"pl-en\">doSomething</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">s</span>);\n    }\n    \n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">matches</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">s</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;\n    }\n    \n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">MyInterface</span> <span class=\"pl-s1\">mock</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">MyInterface</span>.<span class=\"pl-s1\">class</span>);\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-s1\">arg</span> -&gt; <span class=\"pl-c1\">false</span>));\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Error</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n        }\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-s1\">MockitoTest</span>::<span class=\"pl-s1\">matches</span>));\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Error</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n        }\n        \n        <span class=\"pl-c\">// When an anonymous class is used the output is '&lt;custom argument matcher&gt;'</span>\n        <span class=\"pl-c\">// (as expected)</span>\n        <span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArgumentMatcher</span>&lt;&gt;() {\n            <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n            <span class=\"pl-k\">public</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">matches</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">argument</span>) {\n                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;\n            }\n        }));\n    }\n}</pre></div>","resourcePath":"/mockito/mockito/issues/2061","createdAt":"2020-10-07T23:15:01Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Escape mock during method dispatch on mock to avoid premature garbage collection.","url":"https://github.com/mockito/mockito/pull/2034","resourcePath":"/mockito/mockito/pull/2034","createdAt":"2020-09-03T21:12:33Z","number":2034,"mergeCommit":{"oid":"893e2f476445ce273d82ec73a93ced713610df86","message":"[ci maven-central-release] Merge pull request #2034 from mockito/explicit-escape-during-dispatch\n\nEscape mock during method dispatch on mock to avoid premature garbage collection.","commitUrl":"https://github.com/mockito/mockito/commit/893e2f476445ce273d82ec73a93ced713610df86","parents":{"nodes":[{"oid":"fcd788cf20bdd2ead398706afeb6beb5411831b8","message":"3.5.9 release (previous 3.5.8) + release notes updated by CI build 4763\n\n[ci skip-release]"},{"oid":"093d5279456ccafcaf9c56a437e4a504e7b70dc4","message":"Escape mock during method dispatch on mock to avoid premature garbage collection.\n\nFixes #1802."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodInterceptor.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/PrematureGarbageCollectionTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc4OTY5OTc5OjA5M2Q1Mjc5NDU2Y2NhZmNhZjljNTZhNDM3ZTRhNTA0ZTdiNzBkYzQ=","url":"https://github.com/mockito/mockito/pull/2034/commits/093d5279456ccafcaf9c56a437e4a504e7b70dc4"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1802,"url":"https://github.com/mockito/mockito/issues/1802","title":"Exception \"The mock object was garbage collected.\"","bodyHTML":"<p dir=\"auto\">We received the following exception while running tests using Mockito, either version 3.0.0 or 3.1.0, and I'm filing this bug as requested:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; java.lang.IllegalStateException: The mock object was garbage collected. This should not happen in normal circumstances when using public API. Typically, the test class keeps strong reference to the mock object and it prevents getting the mock collected. Mockito internally needs to keep weak references to mock objects to avoid memory leaks for certain types of MockMaker implementations. If you see this exception using Mockito public API, please file a bug. For more information see issue #1313.\n\tat org.mockito.internal.invocation.mockref.MockWeakReference.get(MockWeakReference.java:32)\n\tat org.mockito.internal.invocation.InterceptedInvocation.getMock(InterceptedInvocation.java:106)\n\tat org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock(InvocationContainerImpl.java:157)\n\tat org.mockito.internal.stubbing.OngoingStubbingImpl.&lt;init&gt;(OngoingStubbingImpl.java:22)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:83)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:35)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:61)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:49)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:126)\n\tat org.mockito.codegen.Runnable$MockitoMock$1840149894.run(Unknown Source)\n\tat MockitoTest.runTest(MockitoTest.java:13)\n\tat MockitoTest.main(MockitoTest.java:6)\"><pre class=\"notranslate\"><code>Exception in thread \"main\" java.lang.IllegalStateException: The mock object was garbage collected. This should not happen in normal circumstances when using public API. Typically, the test class keeps strong reference to the mock object and it prevents getting the mock collected. Mockito internally needs to keep weak references to mock objects to avoid memory leaks for certain types of MockMaker implementations. If you see this exception using Mockito public API, please file a bug. For more information see issue #1313.\n\tat org.mockito.internal.invocation.mockref.MockWeakReference.get(MockWeakReference.java:32)\n\tat org.mockito.internal.invocation.InterceptedInvocation.getMock(InterceptedInvocation.java:106)\n\tat org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock(InvocationContainerImpl.java:157)\n\tat org.mockito.internal.stubbing.OngoingStubbingImpl.&lt;init&gt;(OngoingStubbingImpl.java:22)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:83)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:35)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:61)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:49)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:126)\n\tat org.mockito.codegen.Runnable$MockitoMock$1840149894.run(Unknown Source)\n\tat MockitoTest.runTest(MockitoTest.java:13)\n\tat MockitoTest.main(MockitoTest.java:6)\n</code></pre></div>\n<p dir=\"auto\">I've reduced the problem to the following test program:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.mockito.*;\n\npublic class MockitoTest {\n\n  public static void main(String[] args) {\n    while (true) runTest();\n  }\n\n  private static void runTest() {\n    Node list = createList();\n    while (list != null) {\n      Node next = list.next;\n      list.object.run();\n      list = next;\n    }\n  }\n\n  private static Node createList() {\n    Node node = null;\n    for (int i = 0; i &lt; 1000; ++i) {\n      Node next = new Node();\n      next.next = node;\n      node = next;\n    }\n    return node;\n  }\n\n  private static class Node {\n    final Runnable object = Mockito.mock(Runnable.class);\n    Node next;\n  }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.*;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoTest</span> {\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n    <span class=\"pl-k\">while</span> (<span class=\"pl-c1\">true</span>) <span class=\"pl-en\">runTest</span>();\n  }\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">runTest</span>() {\n    <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">list</span> = <span class=\"pl-en\">createList</span>();\n    <span class=\"pl-k\">while</span> (<span class=\"pl-s1\">list</span> != <span class=\"pl-c1\">null</span>) {\n      <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">next</span> = <span class=\"pl-s1\">list</span>.<span class=\"pl-s1\">next</span>;\n      <span class=\"pl-s1\">list</span>.<span class=\"pl-s1\">object</span>.<span class=\"pl-en\">run</span>();\n      <span class=\"pl-s1\">list</span> = <span class=\"pl-s1\">next</span>;\n    }\n  }\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Node</span> <span class=\"pl-en\">createList</span>() {\n    <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">node</span> = <span class=\"pl-c1\">null</span>;\n    <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>; <span class=\"pl-s1\">i</span> &lt; <span class=\"pl-c1\">1000</span>; ++<span class=\"pl-s1\">i</span>) {\n      <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">next</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Node</span>();\n      <span class=\"pl-s1\">next</span>.<span class=\"pl-s1\">next</span> = <span class=\"pl-s1\">node</span>;\n      <span class=\"pl-s1\">node</span> = <span class=\"pl-s1\">next</span>;\n    }\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">node</span>;\n  }\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Node</span> {\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Runnable</span> <span class=\"pl-s1\">object</span> = <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Runnable</span>.<span class=\"pl-s1\">class</span>);\n    <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">next</span>;\n  }\n}</pre></div>\n<p dir=\"auto\">Whether the problem occurs depends on what exactly the JVM does with the code. It looks like the mock object can be garbage collected between the call to the mocked method and Mockito trying to use the weak reference to it. I'm using AdoptOpenJDK 11.0.3.7-hotspot on Windows. My test program more often than not reproduces the exception within a few seconds, but occasionally it can run forever without failing.</p>","resourcePath":"/mockito/mockito/issues/1802","createdAt":"2019-10-10T07:57:19Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Use single version for strictly in mockito-android","url":"https://github.com/mockito/mockito/pull/2053","resourcePath":"/mockito/mockito/pull/2053","createdAt":"2020-09-24T12:32:32Z","number":2053,"mergeCommit":{"oid":"079e847891959a7a3cbb5a8390efa65eba583b7a","message":"Use single version for strict dependency check in mockito-android (#2053)\n\n[ci maven-central-release]","commitUrl":"https://github.com/mockito/mockito/commit/079e847891959a7a3cbb5a8390efa65eba583b7a","parents":{"nodes":[{"oid":"e338d9167cb5a6acb4b3ec5f02bec3eb4769e4ae","message":"3.5.12 release (previous 3.5.11) + release notes updated by CI build 4800\n\n[ci skip-release]"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"subprojects/android/android.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDkyNDEzNzMzOjhiZWJjNWY4NzQ2YWE4ZTZlMzA4Yzg5NjM3NThjMWUzOWZmNWZmODc=","url":"https://github.com/mockito/mockito/pull/2053/commits/8bebc5f8746aa8e6e308c8963758c1e39ff5ff87"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2007,"url":"https://github.com/mockito/mockito/issues/2007","title":"Android instrumentation test packaging fails for mockito-android 3.5.0 with minSdk < 26","bodyHTML":"<p dir=\"auto\">We've upgraded from <code class=\"notranslate\">mockito-android:3.4.6</code> to <code class=\"notranslate\">mockito-android:3.5.0</code>. I'm attempting to package up my instrumented tests by running the <code class=\"notranslate\">assembleAndroidTest</code> gradle task. The task fails with the following errors:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\"><pre class=\"notranslate\"><code>/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n</code></pre></div>\n<p dir=\"auto\">and with root cause:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\"><pre class=\"notranslate\"><code>com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/2007","createdAt":"2020-08-18T00:37:46Z","labels":{"edges":[{"node":{"name":"android"}},{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Avoid Gradle module files","url":"https://github.com/mockito/mockito/pull/2160","resourcePath":"/mockito/mockito/pull/2160","createdAt":"2020-12-30T19:30:16Z","number":2160,"mergeCommit":{"oid":"9126184434294d9091f259f2e9b68a9e10bc65ae","message":"Merge pull request #2160 from mockito/mockitoguy-patch-4\n\nAvoid Gradle module files","commitUrl":"https://github.com/mockito/mockito/commit/9126184434294d9091f259f2e9b68a9e10bc65ae","parents":{"nodes":[{"oid":"78d8e655c611c661f5bd93b692fcb1b97e771c67","message":"Merge pull request #2161 from mockito/mockitoguy-patch-5\n\nFixed build on Java 15"},{"oid":"2e66d086d026b2deef07ea3c979fd972efab960c","message":"Avoid Gradle module files\n\nAvoid Gradle module files until there is a use case for them. The less we publish the less complexity.\r\n\r\nFixes: #2159"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/java-publication.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQ3MDYxNTc2OjJlNjZkMDg2ZDAyNmIyZGVlZjA3ZWEzYzk3OWZkOTcyZWZhYjk2MGM=","url":"https://github.com/mockito/mockito/pull/2160/commits/2e66d086d026b2deef07ea3c979fd972efab960c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2159,"url":"https://github.com/mockito/mockito/issues/2159","title":"Mockito published maven artifact is missing .module files","bodyHTML":"<p dir=\"auto\">Around Gradle 5.3 new Gradle metadata was introduced (see <a href=\"https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html\" rel=\"nofollow\">https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html</a>) This allows Gradle builds to publish more detail about dependencies than the lagacy maven pom.</p>\n<p dir=\"auto\">Mockito is generating those files, but they aren't getting uploaded to Maven Central see: <a href=\"https://repo1.maven.org/maven2/org/mockito/mockito-junit-jupiter/3.6.28/\" rel=\"nofollow\">https://repo1.maven.org/maven2/org/mockito/mockito-junit-jupiter/3.6.28/</a></p>\n<p dir=\"auto\">However in the <a href=\"https://repo1.maven.org/maven2/org/mockito/mockito-junit-jupiter/3.6.28/mockito-junit-jupiter-3.6.28.pom\" rel=\"nofollow\">pom.xml</a> it contains the comment that tells Gradle to check for the <code class=\"notranslate\">.module</code> files:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;!--\n This module was also published with a richer model, Gradle metadata,  \n--&gt;\n&lt;!--\n which should be used instead. Do not delete the following line which  \n--&gt;\n&lt;!--\n is to indicate to Gradle or any Gradle module metadata file consumer  \n--&gt;\n&lt;!-- that they should prefer consuming it instead. --&gt;\n&lt;!-- do_not_remove: published-with-gradle-metadata --&gt;\"><pre class=\"notranslate\"><code>&lt;!--\n This module was also published with a richer model, Gradle metadata,  \n--&gt;\n&lt;!--\n which should be used instead. Do not delete the following line which  \n--&gt;\n&lt;!--\n is to indicate to Gradle or any Gradle module metadata file consumer  \n--&gt;\n&lt;!-- that they should prefer consuming it instead. --&gt;\n&lt;!-- do_not_remove: published-with-gradle-metadata --&gt;\n</code></pre></div>\n<h2 dir=\"auto\">Solution 1 <a href=\"https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html#sub:disabling-gmm-publication\" rel=\"nofollow\">Disable metadata</a>:</h2>\n<p dir=\"auto\">This will remove the comment from the pom.xml and so Gradle won't continue to check for the <code class=\"notranslate\">.module</code> file.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    tasks.withType&lt;GenerateModuleMetadata&gt; {\n        enabled = false\n    }\"><pre class=\"notranslate\"><code>    tasks.withType&lt;GenerateModuleMetadata&gt; {\n        enabled = false\n    }\n</code></pre></div>\n<h2 dir=\"auto\">Solution 2- Update the maven publishing to include the missing files</h2>\n<p dir=\"auto\">This is the better long-term solution. However I don't have a direct recommendation since I don't have experience in that regard and don't know what is mis-configured.</p>\n<h2 dir=\"auto\">Why hasn't this been a problem before?</h2>\n<p dir=\"auto\">When using <code class=\"notranslate\">mavenCentral()</code> as a repo directly, it serves up a 404 for the missing <code class=\"notranslate\">.module</code> file and Gradle recovers fine. However when using an internal repository like Artifactory, it is common to configure it to return <code class=\"notranslate\">403</code> for missing files to try to obscure data that shouldn't be accessible.</p>\n<p dir=\"auto\">So to reproduce this you would need to use Gradle &gt; 5.3, Using Mockito as a dependency, when using a locked down Maven repository that is configured to serve 403 instead of exposing 404 for missing artifacts.</p>","resourcePath":"/mockito/mockito/issues/2159","createdAt":"2020-12-30T17:25:32Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"\"But invoked here\" lists the invocation parameters","url":"https://github.com/mockito/mockito/pull/2188","resourcePath":"/mockito/mockito/pull/2188","createdAt":"2021-01-22T20:52:39Z","number":2188,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/exceptions/Reporter.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/verification/checkers/NumberOfInvocationsCheckerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTYwMjA1MTczOmNkMzlhN2VmYmE2OTIxOWI2YzM3ODM4Y2VkNzkzZDA5MTM3N2UzZjU=","url":"https://github.com/mockito/mockito/pull/2188/commits/cd39a7efba69219b6c37838ced793d091377e3f5"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2058,"url":"https://github.com/mockito/mockito/issues/2058","title":"\"But invoked here\" should list the invocation parameters","bodyHTML":"<p dir=\"auto\">Thanks to Mockito, I just had an assertion failure that I just had a failure thanks to Mockito told me of an issue in my code that I need to fix. The error message looked like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cLogger.saveError(&quot;Error&quot;, &lt;any string&gt;);\nNever wanted here:\n-&gt; at au.org.greekwelfaresa.idempiere.bpmodels.test.MBPartnerLocationTest.lambda$1(MBPartnerLocationTest.java:118)\nBut invoked here:\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\"><pre class=\"notranslate\"><code>cLogger.saveError(\"Error\", &lt;any string&gt;);\nNever wanted here:\n-&gt; at au.org.greekwelfaresa.idempiere.bpmodels.test.MBPartnerLocationTest.lambda$1(MBPartnerLocationTest.java:118)\nBut invoked here:\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\n</code></pre></div>\n<p dir=\"auto\">It occurred to me that it might be useful debugging to include not only the <em>place</em> where the invocation happened, but the arguments that were provided for each invocation. Because of the <code class=\"notranslate\">anyString()</code> matcher, it is not immediately obvious what they are - if you're using exact match semantics, then you can infer the parameters from the first line, but that's not possible when you're using a matcher.</p>\n<p dir=\"auto\">This feature could be added on all failure messages, or else only on failure messages when matchers are being used (as it is redundant when you're using exact match).</p>","resourcePath":"/mockito/mockito/issues/2058","createdAt":"2020-10-01T06:50:11Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Publish new minor version to Maven central","url":"https://github.com/mockito/mockito/pull/2213","resourcePath":"/mockito/mockito/pull/2213","createdAt":"2021-02-22T18:46:04Z","number":2213,"mergeCommit":{"oid":"900552416c42a494c564a314a34072afc3cc0502","message":"Publish new minor version to Maven central (#2213)\n\n[ci maven-central-release]","commitUrl":"https://github.com/mockito/mockito/commit/900552416c42a494c564a314a34072afc3cc0502","parents":{"nodes":[{"oid":"84774556217c23472e54ff9ffe32bc041a40426d","message":"Fixes #2204: Ignore Groovy methods annotated with Internal (#2207)\n\nStarting from Groovy 3.0, compiler-generated methods such as\r\n`getMetaClass()` are no longer marked synthetic, therefore ByteBuddy\r\nstopped automatically ignoring them. Instead they are now annotated with\r\n`@groovy.transform.Internal`. Update `isGroovyMethod()` to also check\r\nthis new annotation."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"version.properties"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTc3ODU4NDk3OjJmMmRmY2VlZjQ4ZTAyNDE5ZDFhY2Y0ZjAzZjdkMGM2YWQ4ODg4ZGE=","url":"https://github.com/mockito/mockito/pull/2213/commits/2f2dfceef48e02419d1acf4f03f7d0c6ad8888da"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2212,"url":"https://github.com/mockito/mockito/issues/2212","title":"Please do a release, as we want to use mockito on jdk 17.","bodyHTML":"<p dir=\"auto\">Hi.<br>\nI'm tracking why commons-io will fail ci on JDK17.<br>\nAfter tracking I finally found out the latest mockito relase use ASM 9.0 which cannot handle jdk 17.<br>\nAs you are using 9.1 now, who can handle JDK17,  I hope we can get it a release...<br>\nThanks!<br>\n<a href=\"https://github.com/xenoamess-fork/commons-io/runs/1945142044\">https://github.com/xenoamess-fork/commons-io/runs/1945142044</a></p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2212","createdAt":"2021-02-21T13:00:11Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix reversed order of verify parameters","url":"https://github.com/mockito/mockito/pull/2179","resourcePath":"/mockito/mockito/pull/2179","createdAt":"2021-01-16T10:04:39Z","number":2179,"mergeCommit":{"oid":"7b940bcead5240bd030bbe7acbb51c10be0a452b","message":"Fix reversed order of verify parameters (#2179)\n\nFor consistency, the parameters of the method\r\n`MockedStatic.verify(VerificationMode, Verification)`\r\nhave been swapped to\r\n`MockedStatic.verify(Verification, VerificationMode)`\r\nas this order is already used in\r\n`Mockito.verify(T, VerificationMode)`.\r\n\r\nFixes: #2173\r\n\r\n[ci maven-central-release]","commitUrl":"https://github.com/mockito/mockito/commit/7b940bcead5240bd030bbe7acbb51c10be0a452b","parents":{"nodes":[{"oid":"79f06bae95074c7c6d8ce862db100ab74edddf6e","message":"Bump versions.errorprone from 2.4.0 to 2.5.1 (#2176)\n\n* Bump versions.errorprone from 2.4.0 to 2.5.1\r\n\r\nBumps `versions.errorprone` from 2.4.0 to 2.5.1.\r\n\r\nUpdates `error_prone_core` from 2.4.0 to 2.5.1\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.4.0...v2.5.1)\r\n\r\nUpdates `error_prone_test_helpers` from 2.4.0 to 2.5.1\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.4.0...v2.5.1)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* Fix ErrorProne compilation errors\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Tim van der Lippe <tvanderlippe@google.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/MockedStatic.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/MockedStaticImpl.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU2MTUxNzIxOjNlMzcyOTk1ZDJlZDhiMTEyZTAyNjU2NWRkMWRmM2E5NWI4ZmRjMjM=","url":"https://github.com/mockito/mockito/pull/2179/commits/3e372995d2ed8b112e026565dd1df3a95b8fdc23"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2173,"url":"https://github.com/mockito/mockito/issues/2173","title":"Feature request: Unify order of parameters","bodyHTML":"<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I just stumbled accross the switched order of the VerificationMode parameter</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.Mockito.verify(T, VerificationMode)\"><pre class=\"notranslate\"><code>org.mockito.Mockito.verify(T, VerificationMode)\n</code></pre></div>\n<p dir=\"auto\">vs</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.MockedStatic.verify(VerificationMode, Verification)\"><pre class=\"notranslate\"><code>org.mockito.MockedStatic.verify(VerificationMode, Verification)\n</code></pre></div>\n<p dir=\"auto\">Is there a reason, the VerificationMode from MockitoStatic is at first position?</p>","resourcePath":"/mockito/mockito/issues/2173","createdAt":"2021-01-12T14:26:35Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixed the problem with CI instability","url":"https://github.com/mockito/mockito/pull/2155","resourcePath":"/mockito/mockito/pull/2155","createdAt":"2020-12-27T14:48:52Z","number":2155,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"build.gradle"}},{"node":{"changeType":"MODIFIED","path":"gradle/shipkit.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQ1ODE2ODgxOjMyNzE1YzBmZmM0YjM4MjQxOTRkNzNiZWM3Zjg2MzUxOTgxNDlhOTk=","url":"https://github.com/mockito/mockito/pull/2155/commits/32715c0ffc4b3824194d73bec7f8635198149a99"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2134,"url":"https://github.com/mockito/mockito/issues/2134","title":"Fix CI instability","bodyHTML":"<p dir=\"auto\">Recent failure: <a href=\"https://github.com/mockito/mockito/runs/1494926496?check_suite_focus=true\">https://github.com/mockito/mockito/runs/1494926496?check_suite_focus=true</a></p>","resourcePath":"/mockito/mockito/issues/2134","createdAt":"2020-12-04T13:43:31Z","labels":{"edges":[{"node":{"name":"continuous integration"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Use the parent classloader if the context classloader is a child of it.","url":"https://github.com/mockito/mockito/pull/2306","resourcePath":"/mockito/mockito/pull/2306","createdAt":"2021-05-25T18:52:03Z","number":2306,"mergeCommit":{"oid":"66998ea7f81c6adf49983cea081586e19760b7a0","message":"Use the parent classloader if the context classloader is a child of it (#2306)\n\nThis should only affect cases that previously would have thrown an\r\nexception.\r\n\r\nFixes #2303\r\n\r\nCo-authored-by: Charles Munger <clm@google.com>","commitUrl":"https://github.com/mockito/mockito/commit/66998ea7f81c6adf49983cea081586e19760b7a0","parents":{"nodes":[{"oid":"ae6dd4efbd0aa4a58558fb689bbed8be474cfe68","message":"Bump shipkit-auto-version from 1.1.11 to 1.1.14 (#2307)\n\nBumps shipkit-auto-version from 1.1.11 to 1.1.14.\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockitousage/bugs/creation/PackagePrivateWithContextClassLoaderTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjUyNzAyMTIzOjk3OTAzYjk5MmU2NjRjZjQ2MjE0NzU3ZDcyN2JhMjNjNWU5NDYxMzE=","url":"https://github.com/mockito/mockito/pull/2306/commits/97903b992e664cf46214757d727ba23c5e946131"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2303,"url":"https://github.com/mockito/mockito/issues/2303","title":"\"The type is not public and its mock class is loaded by a different class loader\" with a context classloader that delegates","bodyHTML":"<p dir=\"auto\">Repro case:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.google.clm.mockitobug;\n\nimport static org.mockito.Mockito.mock;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.JUnit4;\n\n/**\n * My goal is to create a context classloader that is identical in every way to the existing one,\n * except that it has a different object identity and possibly some extra fields. However, even a\n * basic classloader that always delegates causes problems for mockito.\n */\n@RunWith(JUnit4.class)\npublic final class ClassLoaderTest {\n\n  @Test\n  public void mockPackagePrivateInterface() {\n    ClassLoader old = Thread.currentThread().getContextClassLoader();\n    Thread.currentThread().setContextClassLoader(new ClassLoader(old) {});\n    // fails\n    Object unused = mock(PackagePrivate.class);\n  }\n\n  @Test\n  public void mockPublicInterface() {\n    ClassLoader old = Thread.currentThread().getContextClassLoader();\n    Thread.currentThread().setContextClassLoader(new ClassLoader(old) {});\n    // succeeds\n    Object unused = mock(Public.class);\n  }\n\n  interface PackagePrivate {}\n\n  public interface Public {}\n}\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">clm</span>.<span class=\"pl-s1\">mockitobug</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">mock</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-c1\">JUnit4</span>;\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * My goal is to create a context classloader that is identical in every way to the existing one,</span>\n<span class=\"pl-c\"> * except that it has a different object identity and possibly some extra fields. However, even a</span>\n<span class=\"pl-c\"> * basic classloader that always delegates causes problems for mockito.</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">JUnit4</span>.<span class=\"pl-s1\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ClassLoaderTest</span> {\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">mockPackagePrivateInterface</span>() {\n    <span class=\"pl-smi\">ClassLoader</span> <span class=\"pl-s1\">old</span> = <span class=\"pl-s1\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">getContextClassLoader</span>();\n    <span class=\"pl-s1\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">setContextClassLoader</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ClassLoader</span>(<span class=\"pl-s1\">old</span>) {});\n    <span class=\"pl-c\">// fails</span>\n    <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">unused</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">PackagePrivate</span>.<span class=\"pl-s1\">class</span>);\n  }\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">mockPublicInterface</span>() {\n    <span class=\"pl-smi\">ClassLoader</span> <span class=\"pl-s1\">old</span> = <span class=\"pl-s1\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">getContextClassLoader</span>();\n    <span class=\"pl-s1\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">setContextClassLoader</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ClassLoader</span>(<span class=\"pl-s1\">old</span>) {});\n    <span class=\"pl-c\">// succeeds</span>\n    <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">unused</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Public</span>.<span class=\"pl-s1\">class</span>);\n  }\n\n  <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">PackagePrivate</span> {}\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Public</span> {}\n}</pre></div>\n<p dir=\"auto\">Error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate.\n\nMockito can only mock non-private &amp; non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 11\nJVM vendor name    : Google Inc.\nJVM vendor version : 11.0.10+9-google-release-371350251\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 11.0.10+9-google-release-371350251\nJVM info           : mixed mode, sharing\nOS name            : Linux\nOS version         : 4.15.0-smp-912.23.0.0\n\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat com.google.clm.mockitobug.ClassLoaderTest.mockPackagePrivateInterface(ClassLoaderTest.java:21)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:57)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:81)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:327)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:84)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:292)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:73)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:270)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:370)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:108)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:104)\n\tat com.google.testing.junit.runner.RunnerShell$2.run(RunnerShell.java:34)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:200)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:184)\n\tat com.google.testing.junit.runner.GoogleTestRunner.main(GoogleTestRunner.java:137)\nCaused by: org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 27 more\n\"><pre class=\"notranslate\"><code>org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate.\n\nMockito can only mock non-private &amp; non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 11\nJVM vendor name    : Google Inc.\nJVM vendor version : 11.0.10+9-google-release-371350251\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 11.0.10+9-google-release-371350251\nJVM info           : mixed mode, sharing\nOS name            : Linux\nOS version         : 4.15.0-smp-912.23.0.0\n\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat com.google.clm.mockitobug.ClassLoaderTest.mockPackagePrivateInterface(ClassLoaderTest.java:21)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:57)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:81)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:327)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:84)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:292)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:73)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:270)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:370)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:108)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:104)\n\tat com.google.testing.junit.runner.RunnerShell$2.run(RunnerShell.java:34)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:200)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:184)\n\tat com.google.testing.junit.runner.GoogleTestRunner.main(GoogleTestRunner.java:137)\nCaused by: org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 27 more\n\n</code></pre></div>\n<p dir=\"auto\">If mockito actually tried to use the classloader, I think it would work. Since we don't see an interesting exception deep in the stack, my guess is that mockito is doing some extra validation to avoid generating bytecode it thinks would fail.</p>","resourcePath":"/mockito/mockito/issues/2303","createdAt":"2021-05-18T16:29:47Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Include cause when FieldReader fails to access field","url":"https://github.com/mockito/mockito/pull/2267","resourcePath":"/mockito/mockito/pull/2267","createdAt":"2021-04-14T01:46:02Z","number":2267,"mergeCommit":{"oid":"09df1111e3b5a5ebdae658f376461103e4ad889e","message":"Include cause when FieldReader fails to access field (#2267)\n\nFixes #2266","commitUrl":"https://github.com/mockito/mockito/commit/09df1111e3b5a5ebdae658f376461103e4ad889e","parents":{"nodes":[{"oid":"2fa2a635e63c3a2f3010b73d6416506d56e0e614","message":"Make exceptions for Inorder.verify more specific (#2263)\n\nFixes #2242"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/FieldReader.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleAccessTest.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleUtil.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE0ODY0MTc4OjUxYzZlYTkwZjZlYzk1ZWNmYjJkNmM5ZTM5MjJiOTc3ZDJhNWEwYzc=","url":"https://github.com/mockito/mockito/pull/2267/commits/51c6ea90f6ec95ecfb2d6c9e3922b977d2a5a0c7"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2266,"url":"https://github.com/mockito/mockito/issues/2266","title":"Swallowed illegal access exceptions make it harder to debug modularity-related issues","bodyHTML":"<h3 dir=\"auto\">Issue Summary</h3>\n<p dir=\"auto\">In FieldReader and ReflectionMemberAccessor, if an IllegalAccessException is thrown, it will be suppressed.</p>\n<p dir=\"auto\">At the very least, Mockito should include the original exception. When testing a modular application, it is common to have packages encapsulated by default.</p>\n<h3 dir=\"auto\">Stacktrace</h3>\n<p dir=\"auto\">In FieldReader, the IllegalAccessException is caught. The exception is re-thrown but the cause is lost.</p>\n<p dir=\"auto\"><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/ea000f72444ed4c7e409441aedc3021951b89660/src/main/java/org/mockito/internal/util/reflection/FieldReader.java#L28-L35\">mockito/src/main/java/org/mockito/internal/util/reflection/FieldReader.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 28 to 35\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mockito/mockito/commit/ea000f72444ed4c7e409441aedc3021951b89660\">ea000f7</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L28\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"28\"></td>\n          <td id=\"LC28\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">read</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L29\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"29\"></td>\n          <td id=\"LC29\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L30\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"30\"></td>\n          <td id=\"LC30\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span> <span class=\"pl-s1\">accessor</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">field</span>, <span class=\"pl-s1\">target</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L31\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"31\"></td>\n          <td id=\"LC31\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> <span class=\"pl-s1\">e</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L32\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"32\"></td>\n          <td id=\"LC32\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MockitoException</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L33\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"33\"></td>\n          <td id=\"LC33\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 <span class=\"pl-s\">\"Cannot read state from field: \"</span> + <span class=\"pl-s1\">field</span> + <span class=\"pl-s\">\", on instance: \"</span> + <span class=\"pl-s1\">target</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L34\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"34\"></td>\n          <td id=\"LC34\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L35\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"35\"></td>\n          <td id=\"LC35\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">Using a debugger, the IllegalAccessException can be observed: <a href=\"https://pastebin.com/GsnU29QV\" rel=\"nofollow\">https://pastebin.com/GsnU29QV</a></p>\n<h3 dir=\"auto\">Problematic Code</h3>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Use <code class=\"notranslate\">module-info</code> in the project and don't open the package under test to mockito.</p>\n</li>\n<li>\n<p dir=\"auto\">Use the <code class=\"notranslate\">MockitoExtension</code> for JUnit:</p>\n</li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\npublic class MyClassTest {\n\n  private final MyType mock;\n\n  public MyClassTest(@Mock MyType mock) {\n    this.mock = mock;\n  }\n}\"><pre><span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-s1\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyClassTest</span> {\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">MyType</span> <span class=\"pl-s1\">mock</span>;\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClassTest</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span> <span class=\"pl-smi\">MyType</span> <span class=\"pl-s1\">mock</span>) {\n    <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">mock</span> = <span class=\"pl-s1\">mock</span>;\n  }\n}</pre></div>\n<h3 dir=\"auto\">Environment</h3>\n<p dir=\"auto\">Mockito-Junit-Jupiter 3.9.0<br>\nZulu16.28+11-CA (build 16+36)</p>","resourcePath":"/mockito/mockito/issues/2266","createdAt":"2021-04-14T01:32:32Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Applied @CheckReturnValue to some classes","url":"https://github.com/mockito/mockito/pull/2379","resourcePath":"/mockito/mockito/pull/2379","createdAt":"2021-08-02T11:10:23Z","number":2379,"mergeCommit":{"oid":"f32973d4e709830a5a9fb19c54f32659023d2b03","message":"Move @CheckReturnValue from methods to class scope (#2379)","commitUrl":"https://github.com/mockito/mockito/commit/f32973d4e709830a5a9fb19c54f32659023d2b03","parents":{"nodes":[{"oid":"5891de126d398ec09a040711b688176ff27b7d7c","message":"Bump espresso-core from 3.3.0 to 3.4.0 (#2372)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/ArgumentCaptor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/ArgumentMatchers.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mockito.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/Stubber.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/StaticMockingExperimentTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/InvalidStateDetectionTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/misuse/DetectingMisusedMatchersTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stacktrace/ClickableStackTracesWhenFrameworkMisusedTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stacktrace/ModellingDescriptiveMessagesTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/VerificationExcludingStubsTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzAxMzY4ODQ2OjFhYzE5NjgwMThjMzk5MmZiYmNjNjUwMzZjMGViMThlMTgyNzBhZGY=","url":"https://github.com/mockito/mockito/pull/2379/commits/1ac1968018c3992fbbcc65036c0eb18e18270adf"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2363,"url":"https://github.com/mockito/mockito/issues/2363","title":"Apply @CheckReturnValue more aggressively","bodyHTML":"<p dir=\"auto\">Mockito has a local copy of <a href=\"https://github.com/mockito/mockito/blob/main/src/main/java/org/mockito/CheckReturnValue.java\"><code class=\"notranslate\">@CheckReturnValue</code></a> (presumably to avoid a dependency on <a href=\"https://github.com/google/error-prone\">errorprone</a>, but it's only used on a few APIs.  There's a <em>lot</em> of additional APIs that it could be applied to, an in fact the best solution is often to annotate entire classes (and then opt-out specific APIs) or entire packages (via <code class=\"notranslate\">package-info.java</code>).</p>\n<p dir=\"auto\">Top APIs to add <code class=\"notranslate\">@CheckReturnValue</code> to:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">org.mockito.ArgumentMatchers</code></li>\n<li><code class=\"notranslate\">org.mockito.ArgumentCaptor</code></li>\n<li><code class=\"notranslate\">org.mockito.Mockito</code></li>\n<li><code class=\"notranslate\">org.mockito.stubbing.Stubber</code></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2363","createdAt":"2021-07-19T15:47:05Z","labels":{"edges":[{"node":{"name":"please contribute"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2412 : Add toString to AtMost, Only, After and Timeout.","url":"https://github.com/mockito/mockito/pull/2413","resourcePath":"/mockito/mockito/pull/2413","createdAt":"2021-08-29T17:15:20Z","number":2413,"mergeCommit":{"oid":"66a4a5c05fc332b7973602e447060e5c0cdde3db","message":"Fixes #2412: Add toString to AtMost, Only, After and Timeout. (#2413)","commitUrl":"https://github.com/mockito/mockito/commit/66a4a5c05fc332b7973602e447060e5c0cdde3db","parents":{"nodes":[{"oid":"d57deb6dcdb73221ffcc6f171c680a7203d7a1c4","message":"Merge pull request #2411 from mockito/TimvdLippe-patch-2\n\nUpgrade to Gradle 7.2"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/verification/AtMost.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/verification/Only.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/verification/After.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/verification/Timeout.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/verification/DummyVerificationMode.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/AtMostXVerificationTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/OnlyVerificationTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/VerificationWithAfterTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/VerificationWithTimeoutTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIxOTg4MTQ0OmVmMTAzMGJhNjRlMmEyZjEzMTI4NTA2N2QyNWQ1MDJiZDJkYTc3MmM=","url":"https://github.com/mockito/mockito/pull/2413/commits/ef1030ba64e2a2f131285067d25d502bd2da772c"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2412,"url":"https://github.com/mockito/mockito/issues/2412","title":"Some VerificationModes don't have a toString implementation.","bodyHTML":"<p dir=\"auto\">Some user-facing VerificationModes don't have a <code class=\"notranslate\">toString()</code> implementation. This includes:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">AtMost</code></li>\n<li><code class=\"notranslate\">Only</code></li>\n<li><code class=\"notranslate\">After</code></li>\n<li><code class=\"notranslate\">Timeout</code></li>\n</ul>\n<p dir=\"auto\">I ran into this issue while using Mockito with a proprietary <a href=\"https://jasmine.github.io/\" rel=\"nofollow\">Jasmine</a>-like library for JUnit. Here is a short example written with JUnit and the open-source runner <a href=\"https://github.com/mscharhag/oleaster\">Oleaster</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@RunWith(OleasterRunner.class)\npublic class DemoTest {\n\n    private MyClass myClass;\n\n    {\n        describe(&quot;demo&quot;, () -&gt; {\n\n            beforeEach(() -&gt; {\n                myClass = Mockito.mock(MyClass.class);\n                myClass.myMethod();\n            });\n\n            verifyMyMethodCalled(atLeast(1));\n            verifyMyMethodCalled(atMost(1));\n            verifyMyMethodCalled(only());\n            verifyMyMethodCalled(after(1));\n        });\n    }\n\n    private void verifyMyMethodCalled(VerificationMode verificationMode) {\n        it(String.format(&quot;should call myMethod. %s&quot;, verificationMode), () -&gt; {\n            verify(myClass, verificationMode).myMethod();\n        });\n    }\n}\"><pre class=\"notranslate\"><code>@RunWith(OleasterRunner.class)\npublic class DemoTest {\n\n    private MyClass myClass;\n\n    {\n        describe(\"demo\", () -&gt; {\n\n            beforeEach(() -&gt; {\n                myClass = Mockito.mock(MyClass.class);\n                myClass.myMethod();\n            });\n\n            verifyMyMethodCalled(atLeast(1));\n            verifyMyMethodCalled(atMost(1));\n            verifyMyMethodCalled(only());\n            verifyMyMethodCalled(after(1));\n        });\n    }\n\n    private void verifyMyMethodCalled(VerificationMode verificationMode) {\n        it(String.format(\"should call myMethod. %s\", verificationMode), () -&gt; {\n            verify(myClass, verificationMode).myMethod();\n        });\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Extracting the assertion and the test-naming part to a specific method (<code class=\"notranslate\">verifyMyMethodCalled(VerificationMode verificationMode)</code>) saves a lot of boilerplate and helps with maintainability, especially since a real-life test class will most likely be longer than this example. However, the following screenshot shows why the last 3 verificationModes aren't so helpful without a proper <code class=\"notranslate\">toString()</code> method:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/22927506/131226758-72a58f27-c1fb-44e2-8db2-70ab5476c7f5.png\"><img src=\"https://user-images.githubusercontent.com/22927506/131226758-72a58f27-c1fb-44e2-8db2-70ab5476c7f5.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I fixed this, in my use case, this by extending the offending <code class=\"notranslate\">VerificationMode</code> in a custom factory method:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static VerificationMode atMost(int times) {\n    return new AtMost(times) {\n        @Override\n        public void verify(VerificationData data) {\n            super.verify(data);\n        }\n\n        @Override\n        public String toString() {\n            return &quot;Wanted invocations count: at most &quot; + times;\n        }\n    };\n}\"><pre class=\"notranslate\"><code>private static VerificationMode atMost(int times) {\n    return new AtMost(times) {\n        @Override\n        public void verify(VerificationData data) {\n            super.verify(data);\n        }\n\n        @Override\n        public String toString() {\n            return \"Wanted invocations count: at most \" + times;\n        }\n    };\n}\n</code></pre></div>\n<p dir=\"auto\">This quickly becomes cumbersome however, if you want to do it for multiple <code class=\"notranslate\">VerificationMode</code>s or in multiple projects. Since most user-facing <code class=\"notranslate\">VerificationMode</code>s already have a <code class=\"notranslate\">toString()</code> method (e.g. <code class=\"notranslate\">atLeast</code> in my example), the missing <code class=\"notranslate\">toString()</code> methods could be included in Mockito.</p>\n<p dir=\"auto\">I have a PR that is almost ready for this, and would gladly submit it.</p>\n<p dir=\"auto\">EDIT: added <code class=\"notranslate\">Timeout</code> to the list.</p>","resourcePath":"/mockito/mockito/issues/2412","createdAt":"2021-08-28T18:05:32Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Downgrade Android gradle plugin","url":"https://github.com/mockito/mockito/pull/2380","resourcePath":"/mockito/mockito/pull/2380","createdAt":"2021-08-02T15:31:58Z","number":2380,"mergeCommit":{"oid":"88bd3066a198dcbd32b5aa827b2fa3513ac8561a","message":"Downgrade Android gradle plugin (#2380)\n\nThe newer version is only compatible with new versions of\r\nIntelliJ/Android Studio. To ensure that older versions of IntelliJ can\r\nstill open this project, we should downgrade our version for now.\r\n\r\nThis Gradle plugin version supports IntelliJ 2020.3 and newer.\r\n\r\nFixes #2378","commitUrl":"https://github.com/mockito/mockito/commit/88bd3066a198dcbd32b5aa827b2fa3513ac8561a","parents":{"nodes":[{"oid":"f8da4cea9269ec35a0199b9a988de7a9d558287f","message":"Bump material from 1.3.0 to 1.4.0 (#2373)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"build.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzAxNTY4ODEyOmJlMjY4YTJhMjZkZmMyM2NjYWExZjU5N2FiOTM1NDM3MDc1MGIzZDA=","url":"https://github.com/mockito/mockito/pull/2380/commits/be268a2a26dfc23ccaa1f597ab9354370750b3d0"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2378,"url":"https://github.com/mockito/mockito/issues/2378","title":"how to solve gradle sync failed after 'Add basic Android instrumented and unit tests'","bodyHTML":"<p dir=\"auto\">Hello</p>\n<p dir=\"auto\">I got gradle sync fail with 'Add basic Android instrumented and unit tests'(<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"946170805\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2360\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2360/hovercard\" href=\"https://github.com/mockito/mockito/pull/2360\">#2360</a>).</p>\n<blockquote>\n<p dir=\"auto\">This version of the Android Support plugin for IntelliJ IDEA (or Android Studio) cannot open this project, please retry with version 4.2 or newer.</p>\n</blockquote>\n<p dir=\"auto\">I think that it is caused with below.</p>\n<p dir=\"auto\">build.gradle</p>\n<blockquote>\n<p dir=\"auto\">classpath 'com.android.tools.build:gradle:4.2.1'</p>\n</blockquote>\n<p dir=\"auto\">the downgrading of gradle version is needed but I'm not sure it is proper...</p>\n<blockquote>\n<p dir=\"auto\">classpath 'com.android.tools.build:gradle:4.1.2'</p>\n</blockquote>\n<p dir=\"auto\">Regards</p>","resourcePath":"/mockito/mockito/issues/2378","createdAt":"2021-08-01T01:32:57Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Properly resolve ProxyMockMaker by alias and handle null value as argument for the invocation handler","url":"https://github.com/mockito/mockito/pull/2408","resourcePath":"/mockito/mockito/pull/2408","createdAt":"2021-08-25T20:15:21Z","number":2408,"mergeCommit":{"oid":"50d6f97da2ddfa52d572a38407b78badcd3e29cc","message":"Merge pull request #2408 from mockito/proxy-fixes\n\nProperly resolve ProxyMockMaker by alias and handle null value as argument for the invocation handler","commitUrl":"https://github.com/mockito/mockito/commit/50d6f97da2ddfa52d572a38407b78badcd3e29cc","parents":{"nodes":[{"oid":"3d3c1652f7abe40227e50741b1304d21047ca71d","message":"Bump kotlinVersion from 1.5.21 to 1.5.30 (#2403)\n\nBumps `kotlinVersion` from 1.5.21 to 1.5.30.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.5.21 to 1.5.30\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/v1.5.30/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.5.21...v1.5.30)\r\n\r\nUpdates `kotlin-stdlib` from 1.5.21 to 1.5.30\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/v1.5.30/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.5.21...v1.5.30)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"},{"oid":"963a87202115ddab2334f634f0adbe985609bcca","message":"Properly resolve ProxyMockMaker by alias and handle null value as argument for the invocation handler"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/plugins/PluginInitializer.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/plugins/PluginLoader.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/proxy/ProxyMockMaker.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/configuration/plugins/DefaultMockitoPluginsTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/creation/proxy/ProxyMockMakerTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE5OTc1ODk1Ojk2M2E4NzIwMjExNWRkYWIyMzM0ZjYzNGYwYWRiZTk4NTYwOWJjY2E=","url":"https://github.com/mockito/mockito/pull/2408/commits/963a87202115ddab2334f634f0adbe985609bcca"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2406,"url":"https://github.com/mockito/mockito/issues/2406","title":"Mock Maker Proxy fails with NPE","bodyHTML":"<p dir=\"auto\">I had the idea to use the new mock-maker-proxy in a way that i could use mockito in native compilation with graalvm.<br>\nBut I even fail to run a simple test without native compiling.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@SpringBootTest\nclass MockbeanNativeApplicationTests {\n\n\t@MockBean\n\tSampleService sampleService;\n\n\t@Test\n\tvoid contextLoads() {\n\t\tsampleService.doSomething();\n\t\tMockito.verify(sampleService).doSomething();\n\t}\n\n}\"><pre class=\"notranslate\"><code>@SpringBootTest\nclass MockbeanNativeApplicationTests {\n\n\t@MockBean\n\tSampleService sampleService;\n\n\t@Test\n\tvoid contextLoads() {\n\t\tsampleService.doSomething();\n\t\tMockito.verify(sampleService).doSomething();\n\t}\n\n}\n</code></pre></div>\n<p dir=\"auto\">throws:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: Cannot read the array length because the return value of &quot;org.mockito.invocation.Invocation.getRawArguments()&quot; is null\"><pre class=\"notranslate\"><code>java.lang.NullPointerException: Cannot read the array length because the return value of \"org.mockito.invocation.Invocation.getRawArguments()\" is null\n</code></pre></div>\n<p dir=\"auto\">when running with org.mockito.internal.creation.proxy.ProxyMockMaker</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)<br>\nmockito 3.12.2<br>\njdk 21.2.0.r16-grl<br>\nos ubuntu</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n<a href=\"https://github.com/eiswind/mockbean-spring-native\">https://github.com/eiswind/mockbean-spring-native</a></p>\n</li>\n</ul>","resourcePath":"/mockito/mockito/issues/2406","createdAt":"2021-08-25T08:45:46Z","labels":{"edges":[]}}},{"node":{"number":2407,"url":"https://github.com/mockito/mockito/issues/2407","title":"mock-maker-proxy alias throws CNF","bodyHTML":"<p dir=\"auto\">The problematic code (if that's possible) is copied here;<br>\nsame as in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"978882765\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2406\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2406/hovercard\" href=\"https://github.com/mockito/mockito/issues/2406\">#2406</a></p>\n<p dir=\"auto\">throws</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in java.lang.CompoundEnumeration@110844f6\nCaused by: java.lang.ClassNotFoundException: mock-maker-proxy\"><pre class=\"notranslate\"><code>Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in java.lang.CompoundEnumeration@110844f6\nCaused by: java.lang.ClassNotFoundException: mock-maker-proxy\n</code></pre></div>\n<p dir=\"auto\">mockito 3.12.3<br>\njvm 21.2.0.r16-grl</p>\n<p dir=\"auto\">Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n<a href=\"https://github.com/eiswind/mockbean-spring-native\">https://github.com/eiswind/mockbean-spring-native</a><br>\n(I had to give the FQN in the extension file)</p>","resourcePath":"/mockito/mockito/issues/2407","createdAt":"2021-08-25T08:51:01Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Remove all deprecated APIs for Mockito 4","url":"https://github.com/mockito/mockito/pull/2418","resourcePath":"/mockito/mockito/pull/2418","createdAt":"2021-09-01T17:26:27Z","number":2418,"mergeCommit":{"oid":"caf35b24e2764df0498469526ecb3e7ec68a0430","message":"Remove all deprecated APIs (#2418)\n\nAll of these APIs have been marked as deprecated and have been present\r\nin Mockito for quite a while. To cleanup our API surface and reduce\r\ntechnical debt, let's remove these long-deprecated methods/classes.\r\n\r\nAn overview of now-deleted classes/methods:\r\n- org.mockito.Matchers which was an alias for\r\norg.mockito.ArgumentMatchers\r\n- org.mockito.ArgumentMatchers#{anyObject,anyVararg} both which were\r\naliases for org.mockito.ArgumentMatchers#any\r\n- org.mockito.ArgumentMatchers#any*Of, which were aliases for the same\r\nmethod name without the Of and the generic parameters (which were\r\nignored)\r\n- org.mockito.ArgumentMatchers#{is}{Not}Null(Class) which took a class\r\nwhich was ignored. Aliases for the same methods without the parameter\r\n- org.mockito.MockedStatic#verify which had the parameter types reversed\r\n- org.mockito.Mockito#verifyZeroInteractions an alias of\r\nverifyNoMoreInteractions\r\n- org.mockito.Mockito#debug framework integration API that we later\r\nrefactored\r\n- org.mockito.configuration.AnnotationEngine which was leaking internal\r\nAPIs and instead users should use org.mockito.plugins.AnnotationEngine\r\n- org.mockito.exceptions.verification.TooLittleActualInvocations fixed\r\nthe grammar from \"Little\" to \"Few\"\r\n- Numerous internal APIs that we never officially supported and can now\r\nbe removed\r\n- org.mockito.plugins.InstantiatorProvider which was leaking internal\r\nAPIs and instead users should use InstantiatorProvider2 (we should\r\nprobably rename back to remove the number in a future major release)\r\n- org.mockito.runners a package that hosted several old JUnit runners\r\nwhich were no longer supported. Users should instead use\r\norg.mockito.junit.MockitoJUnitRunner which is our official JUnit4\r\nrunner.\r\n\r\nSince these APIs are removed, this change effectively defines Mockito 4.","commitUrl":"https://github.com/mockito/mockito/commit/caf35b24e2764df0498469526ecb3e7ec68a0430","parents":{"nodes":[{"oid":"916e61ecad96fd0eebc43d5470916a81f1720d6b","message":"Bump kotlinx-coroutines-core from 1.5.1-native-mt to 1.5.2-native-mt (#2420)\n\nBumps [kotlinx-coroutines-core](https://github.com/Kotlin/kotlinx.coroutines) from 1.5.1-native-mt to 1.5.2-native-mt.\r\n- [Release notes](https://github.com/Kotlin/kotlinx.coroutines/releases)\r\n- [Changelog](https://github.com/Kotlin/kotlinx.coroutines/blob/master/CHANGES.md)\r\n- [Commits](https://github.com/Kotlin/kotlinx.coroutines/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlinx:kotlinx-coroutines-core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/OnlyVerificationTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/PrintingVerboseTypesWithArgumentsTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/VerificationOnMultipleMocksUsingMatchersTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/verification/VerificationUsingMatchersTest.java"}},{"node":{"changeType":"DELETED","path":"subprojects/deprecatedPluginsTest/deprecatedPluginsTest.gradle"}},{"node":{"changeType":"DELETED","path":"subprojects/deprecatedPluginsTest/src/test/java/org/mockitousage/plugins/DeprecatedInstantiatorProviderTest.java"}},{"node":{"changeType":"DELETED","path":"subprojects/deprecatedPluginsTest/src/test/java/org/mockitousage/plugins/MyDeprecatedInstantiatorProvider.java"}},{"node":{"changeType":"DELETED","path":"subprojects/deprecatedPluginsTest/src/test/resources/mockito-extensions/org.mockito.plugins.InstantiatorProvider"}},{"node":{"changeType":"DELETED","path":"subprojects/extTest/src/test/java/org/mockitousage/plugins/instantiator/MyInstantiatorProvider.java"}},{"node":{"changeType":"DELETED","path":"subprojects/extTest/src/test/resources/mockito-extensions/org.mockito.plugins.InstantiatorProvider"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI0NzA4Mzg5OjdhYzAzZDlkZWZlNDJmNTRkYzFlNzA1Y2MwMjUzZTljOWRkOTQzYmI=","url":"https://github.com/mockito/mockito/pull/2418/commits/7ac03d9defe42f54dc1e705cc0253e9c9dd943bb"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1517,"url":"https://github.com/mockito/mockito/issues/1517","title":"Mockito 4","bodyHTML":"<p dir=\"auto\">Suggested scope of Mockito 4</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <del>Move Java version compatibility to 8+</del> - implemented in Mockito 3</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Enable strict stubbing by default in JUnit4 test runners (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"190517072\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/769\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/769/hovercard\" href=\"https://github.com/mockito/mockito/issues/769\">#769</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Remove all deprecated Mockito 2 classes (<a href=\"https://github.com/mockito/mockito/search?q=deprecated&amp;unscoped_q=deprecated\">https://github.com/mockito/mockito/search?q=deprecated&amp;unscoped_q=deprecated</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Un-incubate (or promote) incubating features</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Write migration guide for existing users\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Write ErrorProne refactoring check that automatically moves all runners to <code class=\"notranslate\">Silent</code>, so that companies can gradually upgrade.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Move Junit5 extension from subproject to core project.</li>\n</ul>\n<p dir=\"auto\">Any comments or feedback?</p>","resourcePath":"/mockito/mockito/issues/1517","createdAt":"2018-10-11T00:56:41Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Bump versions.bytebuddy from 1.11.5 to 1.11.6","url":"https://github.com/mockito/mockito/pull/2351","resourcePath":"/mockito/mockito/pull/2351","createdAt":"2021-07-05T18:04:08Z","number":2351,"mergeCommit":{"oid":"847b41bd383b6fb12c9a85f74938b7082586c833","message":"Bump versions.bytebuddy from 1.11.5 to 1.11.6 (#2351)\n\nBumps `versions.bytebuddy` from 1.11.5 to 1.11.6.\r\n\r\nUpdates `byte-buddy` from 1.11.5 to 1.11.6\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.5...byte-buddy-1.11.6)\r\n\r\nUpdates `byte-buddy-agent` from 1.11.5 to 1.11.6\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.5...byte-buddy-1.11.6)\r\n\r\nUpdates `byte-buddy-android` from 1.11.5 to 1.11.6\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.5...byte-buddy-1.11.6)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>","commitUrl":"https://github.com/mockito/mockito/commit/847b41bd383b6fb12c9a85f74938b7082586c833","parents":{"nodes":[{"oid":"c790ed8e00144b9758b8d078db3c6dc96f98c27d","message":"Bump gradle-errorprone-plugin from 2.0.1 to 2.0.2 (#2347)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjgzODY1NTM5OjBiOTNmYTQwNDM2NzY4OTNkZGQ2NjBjZmViNTQyNDQ3MTRhY2JlMTY=","url":"https://github.com/mockito/mockito/pull/2351/commits/0b93fa4043676893ddd660cfeb54244714acbe16"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2340,"url":"https://github.com/mockito/mockito/issues/2340","title":"Mockito 3.11.2 (?) fails with \"can't load this type of class file\"","bodyHTML":"<p dir=\"auto\"><strong>Broken version</strong>: 3.11.2?<br>\n<strong>Working versions:</strong> 3.10.0</p>\n<p dir=\"auto\"><strong>Description</strong></p>\n<p dir=\"auto\">All was working OK with 3.8.0 and we upgraded to 3.11.2 but this presented the problem below. I have sequentially downgraded and it seems 3.10.0 doesn't present me with any problems.</p>\n<p dir=\"auto\">I have not been able to confidently isolate it to this version because I have also experienced <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"911586461\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2316\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2316/hovercard\" href=\"https://github.com/mockito/mockito/issues/2316\">#2316</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"921145129\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2327\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2327/hovercard\" href=\"https://github.com/mockito/mockito/issues/2327\">#2327</a> in the interim versions.</p>\n<p dir=\"auto\">Our context is Android and a <code class=\"notranslate\">com.android.test</code> instrumented test module. We are using <code class=\"notranslate\">org.mockito:mockito-core</code>, plus <code class=\"notranslate\">org.mockito:mockito-android</code> with the same version, and <code class=\"notranslate\">org.mockito.kotlin:mockito-kotlin:3.2.0</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr: Exception encountered by: ourapp.package.testing.integrations.TestApplication@b4bbfaf. Dumping thread state to outputs and pining for the fjords.\n    org.mockito.exceptions.base.MockitoException: \n    Failed to release mocks\n    \n    This should not happen unless you are using a third-part mock maker\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\n        at android.os.Handler.dispatchMessage(Handler.java:106)\n        at android.os.Looper.loop(Looper.java:246)\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\n     Caused by: java.lang.IllegalStateException: Could not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\n        at org.mockito.internal.configuration.plugins.PluginLoader$1.invoke(PluginLoader.java:84)\n        at java.lang.reflect.Proxy.invoke(Proxy.java:1006)\n        at $Proxy3.isTypeMockable(Unknown Source)\n        at org.mockito.internal.util.MockUtil.typeMockabilityOf(MockUtil.java:33)\n        at org.mockito.internal.util.MockCreationValidator.validateType(MockCreationValidator.java:22)\n        at org.mockito.internal.creation.MockSettingsImpl.validatedSettings(MockSettingsImpl.java:250)\n        at org.mockito.internal.creation.MockSettingsImpl.build(MockSettingsImpl.java:232)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:83)\n        at org.mockito.Mockito.mock(Mockito.java:1954)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:45)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:74)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:48)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100)\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44) \n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192) \n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428) \n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507) \n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446) \n        at android.app.ActivityThread.access$1500(ActivityThread.java:301) \n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148) \n        at android.os.Handler.dispatchMessage(Handler.java:106) \n        at android.os.Looper.loop(Looper.java:246) \n        at android.app.ActivityThread.main(ActivityThread.java:8512) \n        at java.lang.reflect.Method.invoke(Native Method) \n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602) \n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130) \n     Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in sun.misc.CompoundEnumeration@67d84a2\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:57)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:65)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:50)\n        at org.mockito.internal.configuration.plugins.PluginRegistry.&lt;init&gt;(PluginRegistry.java:26)\n        at org.mockito.internal.configuration.plugins.Plugins.&lt;clinit&gt;(Plugins.java:20)\n        at org.mockito.internal.configuration.plugins.Plugins.getAnnotationEngine(Plugins.java:67)\n        at org.mockito.internal.configuration.GlobalConfiguration.tryGetPluginAnnotationEngine(GlobalConfiguration.java:57)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:81)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100) \n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44) \n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192) \n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428) \n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507) \n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446) \n        at android.app.ActivityThread.access$1500(ActivityThread.java:301) \n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148) \n        at android.os.Handler.dispatchMessage(Handler.java:106) \n        at android.os.Looper.loop(Looper.java:246) \n        at android.app.ActivityThread.main(ActivityThread.java:8512) \n        at java.lang.reflect.Method.invoke(Native Method) \n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602) \n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130) \n     Caused by: java.lang.reflect.InvocationTargetException\n2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr:     at java.lang.reflect.Constructor.newInstance0(Native Method)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:52)\n        \t... 21 more\n     Caused by: java.lang.ExceptionInInitializerError\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.of(JavaDispatcher.java:104)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.&lt;clinit&gt;(TypeDescription.java:8282)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.of(TypeDescription.java:8355)\n        at net.bytebuddy.implementation.bind.annotation.Super$Binder.&lt;clinit&gt;(Super.java:222)\n        at net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder.&lt;clinit&gt;(TargetMethodAnnotationDrivenBinder.java:166)\n        at net.bytebuddy.implementation.MethodDelegation.withDefaultConfiguration(MethodDelegation.java:601)\n        at net.bytebuddy.implementation.MethodDelegation.to(MethodDelegation.java:271)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:64)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:74)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.&lt;init&gt;(SubclassByteBuddyMockMaker.java:37)\n        at org.mockito.android.internal.creation.AndroidByteBuddyMockMaker.&lt;init&gt;(AndroidByteBuddyMockMaker.java:22)\n        \t... 24 more\n     Caused by: java.lang.IllegalStateException: Failed to create invoker for net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1270)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:431)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:420)\n        at java.security.AccessController.doPrivileged(AccessController.java:43)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.&lt;clinit&gt;(JavaDispatcher.java:65)\n        \t... 35 more\n     Caused by: java.lang.UnsupportedOperationException: can't load this type of class file\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:591)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1266)\"><pre class=\"notranslate\"><code>2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr: Exception encountered by: ourapp.package.testing.integrations.TestApplication@b4bbfaf. Dumping thread state to outputs and pining for the fjords.\n    org.mockito.exceptions.base.MockitoException: \n    Failed to release mocks\n    \n    This should not happen unless you are using a third-part mock maker\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\n        at android.os.Handler.dispatchMessage(Handler.java:106)\n        at android.os.Looper.loop(Looper.java:246)\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\n     Caused by: java.lang.IllegalStateException: Could not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\n        at org.mockito.internal.configuration.plugins.PluginLoader$1.invoke(PluginLoader.java:84)\n        at java.lang.reflect.Proxy.invoke(Proxy.java:1006)\n        at $Proxy3.isTypeMockable(Unknown Source)\n        at org.mockito.internal.util.MockUtil.typeMockabilityOf(MockUtil.java:33)\n        at org.mockito.internal.util.MockCreationValidator.validateType(MockCreationValidator.java:22)\n        at org.mockito.internal.creation.MockSettingsImpl.validatedSettings(MockSettingsImpl.java:250)\n        at org.mockito.internal.creation.MockSettingsImpl.build(MockSettingsImpl.java:232)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:83)\n        at org.mockito.Mockito.mock(Mockito.java:1954)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:45)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:74)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:48)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100)\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44) \n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192) \n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428) \n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507) \n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446) \n        at android.app.ActivityThread.access$1500(ActivityThread.java:301) \n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148) \n        at android.os.Handler.dispatchMessage(Handler.java:106) \n        at android.os.Looper.loop(Looper.java:246) \n        at android.app.ActivityThread.main(ActivityThread.java:8512) \n        at java.lang.reflect.Method.invoke(Native Method) \n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602) \n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130) \n     Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in sun.misc.CompoundEnumeration@67d84a2\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:57)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:65)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:50)\n        at org.mockito.internal.configuration.plugins.PluginRegistry.&lt;init&gt;(PluginRegistry.java:26)\n        at org.mockito.internal.configuration.plugins.Plugins.&lt;clinit&gt;(Plugins.java:20)\n        at org.mockito.internal.configuration.plugins.Plugins.getAnnotationEngine(Plugins.java:67)\n        at org.mockito.internal.configuration.GlobalConfiguration.tryGetPluginAnnotationEngine(GlobalConfiguration.java:57)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:81)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100) \n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44) \n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192) \n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428) \n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507) \n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446) \n        at android.app.ActivityThread.access$1500(ActivityThread.java:301) \n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148) \n        at android.os.Handler.dispatchMessage(Handler.java:106) \n        at android.os.Looper.loop(Looper.java:246) \n        at android.app.ActivityThread.main(ActivityThread.java:8512) \n        at java.lang.reflect.Method.invoke(Native Method) \n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602) \n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130) \n     Caused by: java.lang.reflect.InvocationTargetException\n2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr:     at java.lang.reflect.Constructor.newInstance0(Native Method)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:52)\n        \t... 21 more\n     Caused by: java.lang.ExceptionInInitializerError\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.of(JavaDispatcher.java:104)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.&lt;clinit&gt;(TypeDescription.java:8282)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.of(TypeDescription.java:8355)\n        at net.bytebuddy.implementation.bind.annotation.Super$Binder.&lt;clinit&gt;(Super.java:222)\n        at net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder.&lt;clinit&gt;(TargetMethodAnnotationDrivenBinder.java:166)\n        at net.bytebuddy.implementation.MethodDelegation.withDefaultConfiguration(MethodDelegation.java:601)\n        at net.bytebuddy.implementation.MethodDelegation.to(MethodDelegation.java:271)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:64)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:74)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.&lt;init&gt;(SubclassByteBuddyMockMaker.java:37)\n        at org.mockito.android.internal.creation.AndroidByteBuddyMockMaker.&lt;init&gt;(AndroidByteBuddyMockMaker.java:22)\n        \t... 24 more\n     Caused by: java.lang.IllegalStateException: Failed to create invoker for net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1270)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:431)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:420)\n        at java.security.AccessController.doPrivileged(AccessController.java:43)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.&lt;clinit&gt;(JavaDispatcher.java:65)\n        \t... 35 more\n     Caused by: java.lang.UnsupportedOperationException: can't load this type of class file\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:591)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1266)\n</code></pre></div>\n<p dir=\"auto\">I appreciate the above may not be enormously helpful, and I'm happy to try and provide more information on request.</p>\n<p dir=\"auto\">Mocked subjects by this runner are:</p>\n<ul dir=\"auto\">\n<li>an <code class=\"notranslate\">open class</code></li>\n<li>a sealed class</li>\n<li>various public interfaces</li>\n</ul>","resourcePath":"/mockito/mockito/issues/2340","createdAt":"2021-06-22T20:47:28Z","labels":{"edges":[]}}},{"node":{"number":2349,"url":"https://github.com/mockito/mockito/issues/2349","title":"mockito-inline:3.11.2 | Unsupported class file major version 62","bodyHTML":"<p dir=\"auto\">I'm using a Java 18 early access build and while using mockito-core:3.11.2 everything was working fine, but when I switched to mockito-inline:3.11.2 (in order to use static mocks), I got the following error for the previously working tests. However the tests involving only static mocks seem to work fine.</p>\n<p dir=\"auto\">I already tried to manually set the latest ByteBuddy dependency (1.11.5) in my build.gradle file, but that didn't help at all.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//LockSynchronization is a simple public class implementing a public interface\nLockSynchronization lockSynchronizationMock = mock(LockSynchronization.class);\"><pre class=\"notranslate\"><code>//LockSynchronization is a simple public class implementing a public interface\nLockSynchronization lockSynchronizationMock = mock(LockSynchronization.class);\n</code></pre></div>\n<p dir=\"auto\">causes</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Mockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\norg.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat com.ba.sequencer.OrderedSequencerProvider.provideArguments(OrderedSequencerProvider.java:22)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.arguments(ParameterizedTestExtension.java:137)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$2(ParameterizedTestExtension.java:88)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n\tSuppressed: org.junit.platform.commons.PreconditionViolationException: Configuration error: You must configure at least one set of arguments for this @ParameterizedTest\n\t\tat org.junit.platform.commons.util.Preconditions.condition(Preconditions.java:281)\n\t\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$6(ParameterizedTestExtension.java:94)\n\t\tat java.base/java.util.stream.AbstractPipeline.close(AbstractPipeline.java:323)\n\t\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\t\t... 76 more\nCaused by: org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 91 more\nCaused by: java.lang.IllegalStateException: \nByte Buddy could not instrument all classes within the mock's type hierarchy\n\nThis problem should never occur for javac-compiled classes. This problem has been observed for classes that are:\n - Compiled by older versions of scalac\n - Classes that are part of the Android distribution\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:280)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:213)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:391)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:351)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:330)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:58)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:84)\n\tat org.mockito.Mockito.mock(Mockito.java:1954)\n\tat org.mockito.Mockito.mock(Mockito.java:1865)\n\t... 91 more\nCaused by: java.lang.IllegalArgumentException: Unsupported class file major version 62\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:196)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:177)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:163)\n\tat net.bytebuddy.utility.OpenedClassReader.of(OpenedClassReader.java:86)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining.create(TypeWriter.java:3890)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default.make(TypeWriter.java:2167)\n\tat net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder.make(RedefinitionDynamicTypeBuilder.java:224)\n\tat net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder.make(AbstractInliningDynamicTypeBuilder.java:123)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3658)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:391)\n\tat java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)\n\tat java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n\tat java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:276)\n\t... 106 more\"><pre class=\"notranslate\"><code>Mockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\norg.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat com.ba.sequencer.OrderedSequencerProvider.provideArguments(OrderedSequencerProvider.java:22)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.arguments(ParameterizedTestExtension.java:137)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$2(ParameterizedTestExtension.java:88)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n\tSuppressed: org.junit.platform.commons.PreconditionViolationException: Configuration error: You must configure at least one set of arguments for this @ParameterizedTest\n\t\tat org.junit.platform.commons.util.Preconditions.condition(Preconditions.java:281)\n\t\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$6(ParameterizedTestExtension.java:94)\n\t\tat java.base/java.util.stream.AbstractPipeline.close(AbstractPipeline.java:323)\n\t\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\t\t... 76 more\nCaused by: org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 91 more\nCaused by: java.lang.IllegalStateException: \nByte Buddy could not instrument all classes within the mock's type hierarchy\n\nThis problem should never occur for javac-compiled classes. This problem has been observed for classes that are:\n - Compiled by older versions of scalac\n - Classes that are part of the Android distribution\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:280)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:213)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:391)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:351)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:330)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:58)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:84)\n\tat org.mockito.Mockito.mock(Mockito.java:1954)\n\tat org.mockito.Mockito.mock(Mockito.java:1865)\n\t... 91 more\nCaused by: java.lang.IllegalArgumentException: Unsupported class file major version 62\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:196)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:177)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:163)\n\tat net.bytebuddy.utility.OpenedClassReader.of(OpenedClassReader.java:86)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining.create(TypeWriter.java:3890)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default.make(TypeWriter.java:2167)\n\tat net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder.make(RedefinitionDynamicTypeBuilder.java:224)\n\tat net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder.make(AbstractInliningDynamicTypeBuilder.java:123)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3658)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:391)\n\tat java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)\n\tat java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n\tat java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:276)\n\t... 106 more\n</code></pre></div>\n<p dir=\"auto\">Is there a way to get these tests working under mockito-inline:3.11.2 or is Java 18 not supported?</p>","resourcePath":"/mockito/mockito/issues/2349","createdAt":"2021-07-01T17:59:46Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix verifyNoMoreInteractions inOrder invocations for spies","url":"https://github.com/mockito/mockito/pull/2395","resourcePath":"/mockito/mockito/pull/2395","createdAt":"2021-08-20T13:54:57Z","number":2395,"mergeCommit":{"oid":"da6e8f73d805b8ed845bae32e745e3d6bf35a261","message":"Fix verifyNoMoreInteractions inOrder invocations for spies (#2395)\n\nFixes #2394","commitUrl":"https://github.com/mockito/mockito/commit/da6e8f73d805b8ed845bae32e745e3d6bf35a261","parents":{"nodes":[{"oid":"a53c3d451e756b51a96700624f517f4fcdd07aed","message":"Bump versions.bytebuddy from 1.11.12 to 1.11.13 (#2393)\n\nBumps `versions.bytebuddy` from 1.11.12 to 1.11.13.\r\n\r\nUpdates `byte-buddy` from 1.11.12 to 1.11.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.12...byte-buddy-1.11.13)\r\n\r\nUpdates `byte-buddy-agent` from 1.11.12 to 1.11.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.12...byte-buddy-1.11.13)\r\n\r\nUpdates `byte-buddy-android` from 1.11.12 to 1.11.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.12...byte-buddy-1.11.13)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/InOrderImpl.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockitousage/spies/SpiesWithRealEqualsAndInOrderTest.java"}}]},"commits":{"edges":[{"node":{"id":"MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE2NzU3MTI4OjhmMTgxNDI0ZmNhMjU2YWNjZjNiYTRiMjE0NGRhNjIwMDk2NmU0YTg=","url":"https://github.com/mockito/mockito/pull/2395/commits/8f181424fca256accf3ba4b2144da6200966e4a8"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2394,"url":"https://github.com/mockito/mockito/issues/2394","title":"Regression with InOrder verification after #2369","bodyHTML":"<p dir=\"auto\">The following test starts failing after <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mockito/mockito/commit/123beb8311ed6303ba71d682cff8434fe36b7f0f/hovercard\" href=\"https://github.com/mockito/mockito/commit/123beb8311ed6303ba71d682cff8434fe36b7f0f\"><tt>123beb8</tt></a>. It looks like the change to call actual <code class=\"notranslate\">equals</code> and <code class=\"notranslate\">hashCode</code> methods is catching a call to <code class=\"notranslate\">equals</code> inside the implementation of <code class=\"notranslate\">InOrder</code>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.test;\n\nimport static org.mockito.Mockito.inOrder;\nimport static org.mockito.Mockito.spy;\n\nimport org.junit.Test;\nimport org.mockito.InOrder;\n\npublic class AppTest {\n\n  static class Foo {\n    void foo() {}\n  }\n\n  @Test\n  public void test() {\n    Foo mock1 = spy(new Foo());\n    Foo mock2 = spy(new Foo());\n    mock1.foo();\n    InOrder order = inOrder(mock1, mock2);\n    order.verify(mock1).foo();\n    order.verifyNoMoreInteractions();\n  }\n}\"><pre><span class=\"pl-k\">package</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">inOrder</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">spy</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">InOrder</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AppTest</span> {\n\n  <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">foo</span>() {}\n  }\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n    <span class=\"pl-smi\">Foo</span> <span class=\"pl-s1\">mock1</span> = <span class=\"pl-en\">spy</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Foo</span>());\n    <span class=\"pl-smi\">Foo</span> <span class=\"pl-s1\">mock2</span> = <span class=\"pl-en\">spy</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Foo</span>());\n    <span class=\"pl-s1\">mock1</span>.<span class=\"pl-en\">foo</span>();\n    <span class=\"pl-smi\">InOrder</span> <span class=\"pl-s1\">order</span> = <span class=\"pl-en\">inOrder</span>(<span class=\"pl-s1\">mock1</span>, <span class=\"pl-s1\">mock2</span>);\n    <span class=\"pl-s1\">order</span>.<span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock1</span>).<span class=\"pl-en\">foo</span>();\n    <span class=\"pl-s1\">order</span>.<span class=\"pl-en\">verifyNoMoreInteractions</span>();\n  }\n}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"No interactions wanted here:\n-&gt; at com.test.AppTest.test(AppTest.java:22)\nBut found this interaction on mock 'foo':\n-&gt; at java.base/java.util.LinkedList.indexOf(LinkedList.java:609)\n\tat com.test.AppTest.test(AppTest.java:22)\"><pre class=\"notranslate\"><code>No interactions wanted here:\n-&gt; at com.test.AppTest.test(AppTest.java:22)\nBut found this interaction on mock 'foo':\n-&gt; at java.base/java.util.LinkedList.indexOf(LinkedList.java:609)\n\tat com.test.AppTest.test(AppTest.java:22)\n</code></pre></div>","resourcePath":"/mockito/mockito/issues/2394","createdAt":"2021-08-19T20:39:25Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Make sure interface types are initialized before inline mocking to avoid blocking code of static initializers.","url":"https://github.com/mockito/mockito/pull/2505","resourcePath":"/mockito/mockito/pull/2505","createdAt":"2021-12-10T20:56:12Z","number":2505,"mergeCommit":{"oid":"a82d5c3f7e5747bc8b9fcea10a25aad7211351ca","message":"Merge pull request #2505 from mockito/initialize-interfaces\n\nMake sure interface types are initialized before inline mocking to avoid blocking code of static initializers.","commitUrl":"https://github.com/mockito/mockito/commit/a82d5c3f7e5747bc8b9fcea10a25aad7211351ca","parents":{"nodes":[{"oid":"dbcbb3f9df32e35eb32587ef30b353fe47056a34","message":"Bump org.eclipse.osgi from 3.17.0 to 3.17.100 (#2504)"},{"oid":"463578069863a7880953b14c509f9bdd71008fc9","message":"Make sure interface types are initialized before inline mocking to avoid blocking code of static initializers."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/HierarchyPreInitializationTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84vsqif2gAoNDYzNTc4MDY5ODYzYTc4ODA5NTNiMTRjNTA5ZjliZGQ3MTAwOGZjOQ","url":"https://github.com/mockito/mockito/pull/2505/commits/463578069863a7880953b14c509f9bdd71008fc9"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2499,"url":"https://github.com/mockito/mockito/issues/2499","title":"Obscure issue with mockito-inline:  mock object in a test seems to be corrupting mock in later test","bodyHTML":"<p dir=\"auto\">This is a very obscure issue, happens only when the planets are aligned. Can you possibly tell me if this is an issue with mockito-inline or if I'm doing something wrong. If its an issue, is there a workaround?</p>\n<p dir=\"auto\">I've simplified what I'm seeing as much as possible. I have 2 tests: Test1 and Test2. I mock MyClass in Test1 (calling clearInlineMocks in <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/afterclass/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/afterclass\">@afterclass</a>).  In Test2, I mock TestSubInterface which extends TestInterface, which creates an instance of the class I mocked in Test1. The issue is that the constructor for MyClass is not being called when mocking the TestSubInterface in Test2  (I guess because mockito-inline still sees MyClass as a mock from the previous test?). I initialize a variable in the MyClass constructor and later throw an error if it hasn't been initialized, resulting in a java.lang.NoClassDefFoundError when mocking.</p>\n<p dir=\"auto\">HOWEVER, the constructor for MyClass IS called when:</p>\n<ul dir=\"auto\">\n<li>I mock TestInterface directly instead of TestSubInterface OR</li>\n<li>I do NOT have a default method defined in TestInterface OR</li>\n<li>I use mockito-core instead of mockito-inline</li>\n</ul>\n<p dir=\"auto\">Here are the details:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoClassDefFoundError: Could not initialize class TestSubInterface$MockitoMock$1328129486\n        at jdk.internal.reflect.GeneratedSerializationConstructorAccessor2.newInstance(Unknown Source)\n        at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n        at org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:48)\n        at org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\n        at org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:21)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:360)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:62)\n        at org.mockito.Mockito.mock(Mockito.java:1951)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:46)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:47)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:49)\n        at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n        at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n        at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n        at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n        at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n        at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n        at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:564)\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\"><pre class=\"notranslate\"><code>java.lang.NoClassDefFoundError: Could not initialize class TestSubInterface$MockitoMock$1328129486\n        at jdk.internal.reflect.GeneratedSerializationConstructorAccessor2.newInstance(Unknown Source)\n        at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n        at org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:48)\n        at org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\n        at org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:21)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:360)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:62)\n        at org.mockito.Mockito.mock(Mockito.java:1951)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:46)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:47)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:49)\n        at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n        at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n        at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n        at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n        at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n        at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n        at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:564)\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\n</code></pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.junit.AfterClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.Silent.class)\npublic class Test1 {\n\n    @Mock\n    private MyClass foo;\n\n    @AfterClass\n    public static void after() {\n        Mockito.framework().clearInlineMocks();\n    }\n\n    @Test\n    public void test() {\n        System.out.println(&quot;test1!&quot;);\n    }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">AfterClass</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">MockitoJUnitRunner</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-s1\">Silent</span>.<span class=\"pl-s1\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test1</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">MyClass</span> <span class=\"pl-s1\">foo</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">AfterClass</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">after</span>() {\n        <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">framework</span>().<span class=\"pl-en\">clearInlineMocks</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"test1!\"</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class Test2 {\n\n    @Mock\n    TestSubInterface testInterface;\n\n    @Test\n    public void test() {\n        System.out.println(&quot;test2!&quot;);\n    }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">MockitoJUnitRunner</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-s1\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test2</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-smi\">TestSubInterface</span> <span class=\"pl-s1\">testInterface</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"test2!\"</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface TestSubInterface extends TestInterface {\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">TestSubInterface</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">TestInterface</span> {\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface TestInterface {\n\n    MyClass foo = MyClass.createMyNumber(8, &quot;someType&quot;).convertTo(&quot;someOtherType&quot;);\n\n    default boolean someMethod() {\n        return true;\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">TestInterface</span> {\n\n    <span class=\"pl-smi\">MyClass</span> <span class=\"pl-s1\">foo</span> = <span class=\"pl-s1\">MyClass</span>.<span class=\"pl-en\">createMyNumber</span>(<span class=\"pl-c1\">8</span>, <span class=\"pl-s\">\"someType\"</span>).<span class=\"pl-en\">convertTo</span>(<span class=\"pl-s\">\"someOtherType\"</span>);\n\n    <span class=\"pl-k\">default</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">someMethod</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MyClass {\n\n    private final double num;\n    private final String type;\n    private Object someInternalObj;\n\n    public static MyClass createMyNumber(double m, String  type) {\n        return new MyClass(m, type);\n    }\n\n    public MyClass(double num, String type) {\n        this.num = num;\n        this.type = type;\n        someInternalObj = new Object();\n        System.out.println(&quot;MyClass!!!!!!&quot;);\n    }\n\n    public MyClass convertTo(String to) {\n        if(someInternalObj == null)\n            throw new RuntimeException(&quot;someInternalObj was null&quot;);\n        return MyClass.createMyNumber(num, to);\n    }\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyClass</span> {\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">double</span> <span class=\"pl-s1\">num</span>;\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">type</span>;\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">someInternalObj</span>;\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">MyClass</span> <span class=\"pl-en\">createMyNumber</span>(<span class=\"pl-smi\">double</span> <span class=\"pl-s1\">m</span>, <span class=\"pl-smi\">String</span>  <span class=\"pl-s1\">type</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MyClass</span>(<span class=\"pl-s1\">m</span>, <span class=\"pl-s1\">type</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClass</span>(<span class=\"pl-smi\">double</span> <span class=\"pl-s1\">num</span>, <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">type</span>) {\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">num</span> = <span class=\"pl-s1\">num</span>;\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">type</span> = <span class=\"pl-s1\">type</span>;\n        <span class=\"pl-s1\">someInternalObj</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Object</span>();\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"MyClass!!!!!!\"</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClass</span> <span class=\"pl-en\">convertTo</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">to</span>) {\n        <span class=\"pl-k\">if</span>(<span class=\"pl-s1\">someInternalObj</span> == <span class=\"pl-c1\">null</span>)\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\">\"someInternalObj was null\"</span>);\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">MyClass</span>.<span class=\"pl-en\">createMyNumber</span>(<span class=\"pl-s1\">num</span>, <span class=\"pl-s1\">to</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;Test&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;15&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;15&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;4.13.2&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n            &lt;artifactId&gt;mockito-inline&lt;/artifactId&gt;\n            &lt;version&gt;3.9.0&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\"><pre>&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UTF-8<span class=\"pl-pds\">\"</span></span>?&gt;\n&lt;<span class=\"pl-ent\">project</span> <span class=\"pl-e\">xmlns</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">xsi</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xsi</span><span class=\"pl-e\">:</span><span class=\"pl-e\">schemaLocation</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">modelVersion</span>&gt;4.0.0&lt;/<span class=\"pl-ent\">modelVersion</span>&gt;\n\n    &lt;<span class=\"pl-ent\">groupId</span>&gt;org.example&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n    &lt;<span class=\"pl-ent\">artifactId</span>&gt;Test&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n    &lt;<span class=\"pl-ent\">version</span>&gt;1.0-SNAPSHOT&lt;/<span class=\"pl-ent\">version</span>&gt;\n\n    &lt;<span class=\"pl-ent\">properties</span>&gt;\n        &lt;<span class=\"pl-ent\">maven</span>.compiler.source&gt;15&lt;/<span class=\"pl-ent\">maven</span>.compiler.source&gt;\n        &lt;<span class=\"pl-ent\">maven</span>.compiler.target&gt;15&lt;/<span class=\"pl-ent\">maven</span>.compiler.target&gt;\n    &lt;/<span class=\"pl-ent\">properties</span>&gt;\n\n    &lt;<span class=\"pl-ent\">dependencies</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;junit&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;junit&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;4.13.2&lt;/<span class=\"pl-ent\">version</span>&gt;\n            &lt;<span class=\"pl-ent\">scope</span>&gt;test&lt;/<span class=\"pl-ent\">scope</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;org.mockito&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;mockito-inline&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;3.9.0&lt;/<span class=\"pl-ent\">version</span>&gt;\n            &lt;<span class=\"pl-ent\">scope</span>&gt;test&lt;/<span class=\"pl-ent\">scope</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n\n    &lt;/<span class=\"pl-ent\">dependencies</span>&gt;\n\n&lt;/<span class=\"pl-ent\">project</span>&gt;</pre></div>\n<p dir=\"auto\">I'm on windows 10</p>\n<p dir=\"auto\">java --version<br>\njava 17.0.1 2021-10-19 LTS<br>\nJava(TM) SE Runtime Environment (build 17.0.1+12-LTS-39)<br>\nJava HotSpot(TM) 64-Bit Server VM (build 17.0.1+12-LTS-39, mixed mode, sharing)</p>\n<p dir=\"auto\">check that</p>\n<ul dir=\"auto\">\n<li>[ x] The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li>[ x] The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li>[ x] Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li>[x ] Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li>[ x] Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2499","createdAt":"2021-12-07T07:09:28Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Remove all Incubating annotations","url":"https://github.com/mockito/mockito/pull/2437","resourcePath":"/mockito/mockito/pull/2437","createdAt":"2021-10-01T15:17:21Z","number":2437,"mergeCommit":{"oid":"7032574ce1fb65e5dbdcf24f65f87766d7124db3","message":"Remove all Incubating annotations (#2437)\n\nFor all of these APIs, we have been shipping them for at least 1 major\r\nrelease. We consider all of these APIs part of the public API contract\r\nnow and therefore we should mark them as such.\r\n\r\nThis PR removes all usages of the annotation. If we were to later remove\r\nan API, it will first have to be deprecated and then removed in a\r\nsubsequent major release. However, we have no plans to do so with any of\r\nthese APIs.","commitUrl":"https://github.com/mockito/mockito/commit/7032574ce1fb65e5dbdcf24f65f87766d7124db3","parents":{"nodes":[{"oid":"c8dbc10d2060d1b800cc4d0d558736439db57929","message":"Fix spelling in old release notes (#2439)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/Answer6.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/Stubbing.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/ValidableAnswer.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/VoidAnswer1.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/VoidAnswer2.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/VoidAnswer3.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/VoidAnswer4.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/VoidAnswer5.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/stubbing/VoidAnswer6.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/verification/VerificationEvent.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84skTXa2gAoNzBjOGY2Y2VjMzUyMTZmYTlhZjFiMjgwNGU5MjAwY2ZkNDAwZDI0Yg","url":"https://github.com/mockito/mockito/pull/2437/commits/70c8f6cec35216fa9af1b2804e9200cfd400d24b"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2433,"url":"https://github.com/mockito/mockito/issues/2433","title":"Roadmap for Mockito.MockedStatic<T>","bodyHTML":"<p dir=\"auto\">Hello.</p>\n<p dir=\"auto\">What is the current roadmap for <a href=\"https://github.com/mockito/mockito/blob/caf35b24e2764df0498469526ecb3e7ec68a0430/src/main/java/org/mockito/MockedStatic.java#L27\"><code class=\"notranslate\">Mockito.MockedStatic&lt;T&gt;</code></a>?</p>\n<p dir=\"auto\">Is it feature complete, or there are new features planned for it? Any other changes expected, before graduating?</p>\n<p dir=\"auto\">How stable is the current implementation?</p>\n<p dir=\"auto\">When is it expected for it to graduate out of incubation? Will it ever?</p>\n<p dir=\"auto\">What work should be done and in general what else needs to happen to reach that? Maybe the community can help with that work.</p>\n<p dir=\"auto\">Thanks a lot for your open-source contributions!<br>\n--Vasile</p>\n<hr>\n<p dir=\"auto\"><em>P.S. Don't know if these questions should be answered by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a>, who seems to be the author of <code class=\"notranslate\">Mockito.MockedStatic&lt;T&gt;</code> based on github history, or somebody else.</em></p>","resourcePath":"/mockito/mockito/issues/2433","createdAt":"2021-09-23T21:30:32Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix thread race on invocationForStubbing","url":"https://github.com/mockito/mockito/pull/2517","resourcePath":"/mockito/mockito/pull/2517","createdAt":"2021-12-16T13:14:28Z","number":2517,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84v8rn92gAoY2NmMmM1Y2E3YzE2YjJkYWViN2Q1ZGRlZTdmMGUzYmJiNDQ0OWQ4ZQ","url":"https://github.com/mockito/mockito/pull/2517/commits/ccf2c5ca7c16b2daeb7d5ddee7f0e3bbb4449d8e"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2516,"url":"https://github.com/mockito/mockito/issues/2516","title":"Thread race issue in `setInvocationForPotentialStubbing`","bodyHTML":"<p dir=\"auto\">Internally at Google, we discovered a thread race on <code class=\"notranslate\">setInvocationForPotentialStubbing</code>. A truncated stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    #0 org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:47 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:86 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \"><pre class=\"notranslate\"><code>    #0 org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:47 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:86 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \n</code></pre></div>\n<p dir=\"auto\">It raced with <code class=\"notranslate\">resetInvocationForPotentialStubbing</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    #0 org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:51 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:120 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \"><pre class=\"notranslate\"><code>    #0 org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:51 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:120 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \n</code></pre></div>","resourcePath":"/mockito/mockito/issues/2516","createdAt":"2021-12-16T12:57:07Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2389 : Parallel use of mocks with deep stubbing may lead to ConcurrentModificationException","url":"https://github.com/mockito/mockito/pull/2444","resourcePath":"/mockito/mockito/pull/2444","createdAt":"2021-10-12T01:56:23Z","number":2444,"mergeCommit":{"oid":"b77aee1a3f5c20ae4a85f31d6b6fc60e412ba7e4","message":"Fixes #2389: handle answers in a thread-safe manner (#2444)\n\nCo-authored-by: Mikaël Francoeur <mikael.francoeur@ticketmaster.com>","commitUrl":"https://github.com/mockito/mockito/commit/b77aee1a3f5c20ae4a85f31d6b6fc60e412ba7e4","parents":{"nodes":[{"oid":"929188bd38a2cde7b3684b251287671a8ed8daee","message":"Bump versions.bytebuddy from 1.11.19 to 1.11.20 (#2443)\n\nBumps `versions.bytebuddy` from 1.11.19 to 1.11.20.\r\n\r\nUpdates `byte-buddy` from 1.11.19 to 1.11.20\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.19...byte-buddy-1.11.20)\r\n\r\nUpdates `byte-buddy-agent` from 1.11.19 to 1.11.20\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.19...byte-buddy-1.11.20)\r\n\r\nUpdates `byte-buddy-android` from 1.11.19 to 1.11.20\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.19...byte-buddy-1.11.20)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsConcurrentTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84tC9L52gAoZmM1ZTBiMmEyOGU0ZWJhODY2ODgwYWUxNTRlNGNiYjU4MmEyZDNkOQ","url":"https://github.com/mockito/mockito/pull/2444/commits/fc5e0b2a28e4eba866880ae154e4cbb582a2d3d9"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2389,"url":"https://github.com/mockito/mockito/issues/2389","title":"Parallel use of mocks with deep stubbing may lead to ConcurrentModificationException","bodyHTML":"<p dir=\"auto\">Java8 / JUnit5<br>\nMockito version: 3.11.2</p>\n<p dir=\"auto\">Test class:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.junit.jupiter.api.RepeatedTest;\nimport org.mockito.Answers;\n\nimport java.util.List;\nimport java.util.stream.IntStream;\n\nimport static org.mockito.Mockito.mock;\n\nclass ConcurrencyTest {\n\n    @RepeatedTest(value = 1000)\n    void test() {\n        final Service mock = mock(Service.class, Answers.RETURNS_DEEP_STUBS);\n        IntStream.range(1, 100).parallel().forEach(i -&gt; mock.doSomething());\n    }\n\n    interface Service {\n        List&lt;String&gt; doSomething();\n    }\n}\n\"><pre class=\"notranslate\"><code>import org.junit.jupiter.api.RepeatedTest;\nimport org.mockito.Answers;\n\nimport java.util.List;\nimport java.util.stream.IntStream;\n\nimport static org.mockito.Mockito.mock;\n\nclass ConcurrencyTest {\n\n    @RepeatedTest(value = 1000)\n    void test() {\n        final Service mock = mock(Service.class, Answers.RETURNS_DEEP_STUBS);\n        IntStream.range(1, 100).parallel().forEach(i -&gt; mock.doSomething());\n    }\n\n    interface Service {\n        List&lt;String&gt; doSomething();\n    }\n}\n\n</code></pre></div>\n<p dir=\"auto\">Error: 30/5000 iterations fail with <code class=\"notranslate\">java.util.ConcurrentModificationException</code></p>\n<p dir=\"auto\">Stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.util.ConcurrentModificationException\n\tat java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:966)\n\tat java.util.LinkedList$ListItr.next(LinkedList.java:888)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.deepStub(ReturnsDeepStubs.java:85)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:75)\n\tat org.mockito.Answers.answer(Answers.java:99)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:110)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat ConcurrencyTest$Service$MockitoMock$351714249.doSomething(Unknown Source)\n\tat ConcurrencyTest.lambda$test$0(ConcurrencyTest.java:14)\n\tat java.util.stream.ForEachOps$ForEachOp$OfInt.accept(ForEachOps.java:204)\n\tat java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110)\n\tat java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n\tat java.util.stream.ForEachOps$ForEachTask.compute(ForEachOps.java:290)\n\tat java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:175)\"><pre class=\"notranslate\"><code>Caused by: java.util.ConcurrentModificationException\n\tat java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:966)\n\tat java.util.LinkedList$ListItr.next(LinkedList.java:888)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.deepStub(ReturnsDeepStubs.java:85)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:75)\n\tat org.mockito.Answers.answer(Answers.java:99)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:110)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat ConcurrencyTest$Service$MockitoMock$351714249.doSomething(Unknown Source)\n\tat ConcurrencyTest.lambda$test$0(ConcurrencyTest.java:14)\n\tat java.util.stream.ForEachOps$ForEachOp$OfInt.accept(ForEachOps.java:204)\n\tat java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110)\n\tat java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n\tat java.util.stream.ForEachOps$ForEachTask.compute(ForEachOps.java:290)\n\tat java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:175)\n</code></pre></div>\n<p dir=\"auto\">P.S. If the <code class=\"notranslate\">Answers.RETURNS_DEEP_STUBS</code> is removed, no error occurred.</p>","resourcePath":"/mockito/mockito/issues/2389","createdAt":"2021-08-06T21:01:48Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2548 : Makes InOrder able to verify static methods","url":"https://github.com/mockito/mockito/pull/2549","resourcePath":"/mockito/mockito/pull/2549","createdAt":"2022-01-24T21:02:43Z","number":2549,"mergeCommit":{"oid":"02d63565aa6ccca12a148c6f2f1ac5cf19357672","message":"Fixes #2548: make InOrder able to verify static methods (#2549)","commitUrl":"https://github.com/mockito/mockito/commit/02d63565aa6ccca12a148c6f2f1ac5cf19357672","parents":{"nodes":[{"oid":"e0a25cb14fd0cf97e38b3ee8de8ab92b87c61549","message":"Bump com.diffplug.spotless from 6.2.2 to 6.3.0 (#2567)\n\nBumps com.diffplug.spotless from 6.2.2 to 6.3.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/InOrder.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/InOrderImpl.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/InOrderVerificationTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84xhVwy2gAoOTQxNTNlY2FmMDY2ZTYxOTQwNjkzMWQyMWJjYmJhOTQxMjgzMzEyNA","url":"https://github.com/mockito/mockito/pull/2549/commits/94153ecaf066e619406931d21bcbba9412833124"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2548,"url":"https://github.com/mockito/mockito/issues/2548","title":"[PR open] Add feature to verify static methods calls in order","bodyHTML":"<p dir=\"auto\"><strong>TL;DR</strong> Mockito doesn't allow verifying static methods calls in order. I have implemented this feature here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1113136158\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2549\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2549/hovercard\" href=\"https://github.com/mockito/mockito/pull/2549\">#2549</a>. If possible, I'd like to contribute; or discuss other ways to achieve the same.</p>\n<hr>\n<p dir=\"auto\">Hey Mockito team.</p>\n<p dir=\"auto\">This discussion relates to: <a href=\"https://groups.google.com/g/mockito/c/wjd9jIj_oBs\" rel=\"nofollow\">https://groups.google.com/g/mockito/c/wjd9jIj_oBs</a>. Since I'm not sure that the Google group is active, I'm posting it here for now.</p>\n<p dir=\"auto\">This issue is about verifying static methods calls in order. I'm aware of the InOrder class, but we can't pass a MockedStatic instance. I had a closer look, and we can pass to it a Class instance. But the InOrder interface is not powerful enough to verify that a static method has been called:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface InOrder {\n  &lt;T&gt; T verify(T mock);\n  &lt;T&gt; T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\"><pre class=\"notranslate\"><code>public interface InOrder {\n  &lt;T&gt; T verify(T mock);\n  &lt;T&gt; T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\n</code></pre></div>\n<p dir=\"auto\">To verify static calls, using method references and lambdas, we likely need two more methods in the InOrder interface, with signatures similar to MockedStatic#verify:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface MockedStatic&lt;T&gt; extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\"><pre class=\"notranslate\"><code>public interface MockedStatic&lt;T&gt; extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\n</code></pre></div>\n<p dir=\"auto\">What do you think of the InOrder interface exposing two methods to deal with the MockedStatic objects that accept both the MockedStatic and the Verification instances to use? Like the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"void verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\"><pre class=\"notranslate\"><code>void verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\n</code></pre></div>\n<p dir=\"auto\">I made the above changes, and we can verify static methods, together with instance methods too. I have updated the tests as well in my PR.</p>\n<p dir=\"auto\">Let me know if you are aware of other ways to achieve the same. If it is not doable, then please share your thoughts about the above, and if I can contribute in case.</p>","resourcePath":"/mockito/mockito/issues/2548","createdAt":"2022-01-24T18:59:51Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Bump versions.errorprone from 2.10.0 to 2.12.1","url":"https://github.com/mockito/mockito/pull/2608","resourcePath":"/mockito/mockito/pull/2608","createdAt":"2022-04-05T11:45:52Z","number":2608,"mergeCommit":{"oid":"331ff01c5f840ff8a3c5b0859185ba78f9446cf0","message":"Bump versions.errorprone from 2.10.0 to 2.12.1 (#2608)\n\n* Bump versions.errorprone from 2.10.0 to 2.11.0\r\n\r\nBumps `versions.errorprone` from 2.10.0 to 2.11.0.\r\n\r\nUpdates `error_prone_core` from 2.10.0 to 2.11.0\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.10.0...v2.11.0)\r\n\r\nUpdates `error_prone_test_helpers` from 2.10.0 to 2.11.0\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.10.0...v2.11.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.google.errorprone:error_prone_core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n- dependency-name: com.google.errorprone:error_prone_test_helpers\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* Fix compilation for JDK 8\r\n\r\nThis also fixes #2554, by using `.withNoParameters()` instead.\r\n\r\n* Extract method for JDK 8\r\n\r\nFor some reason, Java 8 chooses the wrong subclass for this specific use\r\ncase. All other assertions are fine and this doesn't happen on JDK 11.\r\nTherefore, let's extract it into a method to force the correct type.\r\n\r\n* Fixes #2554: Upgrade Error Prone 2.11 -> 2.12\r\n\r\nSee:\r\n- https://github.com/google/error-prone/releases/tag/v2.12.0\r\n- https://github.com/google/error-prone/compare/v2.11.0...v2.12.0\r\n\r\n* Upgrade Error Prone 2.12.0 -> 2.12.1\r\n\r\nSee:\r\n- https://github.com/google/error-prone/releases/tag/v2.12.1\r\n- https://github.com/google/error-prone/compare/v2.12.0...v2.12.1\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Tim van der Lippe <tvanderlippe@google.com>","commitUrl":"https://github.com/mockito/mockito/commit/331ff01c5f840ff8a3c5b0859185ba78f9446cf0","parents":{"nodes":[{"oid":"0dd95d7840a2d1650a237107ced916f0364c9b14","message":"Bump kotlinVersion from 1.6.10 to 1.6.20 (#2607)\n\nBumps `kotlinVersion` from 1.6.10 to 1.6.20.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.6.10 to 1.6.20\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\nUpdates `kotlin-stdlib` from 1.6.10 to 1.6.20\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"build.gradle"}},{"node":{"changeType":"MODIFIED","path":"gradle/dependencies.gradle"}},{"node":{"changeType":"MODIFIED","path":"settings.gradle.kts"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/matchers/EqualsWithDelta.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/matchers/text/ValuePrinterTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/util/PlatformTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/StubbingWithThrowablesTest.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoAnyIncorrectPrimitiveType.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v841pqoT2gAoMzUzMTI5ZjMwN2M5NjM5YjcyYzJkZGQ4ZDY0Yjc1ZGU5MDE2MThiMw","url":"https://github.com/mockito/mockito/pull/2608/commits/353129f307c9639b72c2ddd8d64b75de901618b3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2554,"url":"https://github.com/mockito/mockito/issues/2554","title":"mockito-errorprone seems not compatible with ErrorProne 2.11.0","bodyHTML":"<p dir=\"auto\">We use mockito-errorprone of version 4.3.1 and it seems not compatible with ErrorProne of version 2.11.0.</p>\n<p dir=\"auto\">Our compilation got broken when we updated ErrorProne to 2.11.0 with such error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\"><pre class=\"notranslate\"><code>java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\n</code></pre></div>\n<details>\n  <summary>Take a look at the full error log</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.util.ServiceConfigurationError: com.google.errorprone.bugpatterns.BugChecker: Provider org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType could not be instantiated\n\tat java.base/java.util.ServiceLoader.fail(ServiceLoader.java:582)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:804)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:722)\n\tat java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1395)\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:52)\n\tat com.google.errorprone.scanner.ScannerSupplier.fromBugCheckerClasses(ScannerSupplier.java:71)\n\tat com.google.errorprone.ErrorPronePlugins.loadPlugins(ErrorPronePlugins.java:47)\n\tat com.google.errorprone.ErrorProneAnalyzer.lambda$scansPlugins$0(ErrorProneAnalyzer.java:77)\n\tat com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:183)\n\tat com.google.errorprone.ErrorProneAnalyzer.finished(ErrorProneAnalyzer.java:148)\n\tat jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1418)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1365)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:960)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0(JavacTaskImpl.java:104)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.handleExceptions(JavacTaskImpl.java:147)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:100)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:94)\n\tat org.gradle.internal.compiler.java.IncrementalCompileTask.call(IncrementalCompileTask.java:89)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessingCompileTask.call(AnnotationProcessingCompileTask.java:94)\n\tat org.gradle.api.internal.tasks.compile.ResourceCleaningCompilationTask.call(ResourceCleaningCompilationTask.java:57)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:54)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:39)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.delegateAndHandleErrors(NormalizingJavaCompiler.java:97)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:46)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:36)\n\tat org.gradle.jvm.toolchain.internal.DefaultToolchainJavaCompiler.execute(DefaultToolchainJavaCompiler.java:57)\n\tat org.gradle.api.tasks.compile.JavaCompile.lambda$createToolchainCompiler$1(JavaCompile.java:232)\n\tat org.gradle.api.internal.tasks.compile.CleaningJavaCompiler.execute(CleaningJavaCompiler.java:53)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalCompilerFactory.lambda$createRebuildAllCompiler$0(IncrementalCompilerFactory.java:52)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:67)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:41)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:66)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:52)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:59)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler.execute(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.api.tasks.compile.JavaCompile.performCompilation(JavaCompile.java:279)\n\tat org.gradle.api.tasks.compile.JavaCompile.performIncrementalCompilation(JavaCompile.java:165)\n\tat org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)\n\tat org.gradle.api.internal.project.taskfactory.IncrementalInputsTaskAction.doExecute(IncrementalInputsTaskAction.java:32)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)\n\tat org.gradle.api.internal.project.taskfactory.AbstractIncrementalTaskAction.execute(AbstractIncrementalTaskAction.java:25)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$2.run(TaskExecution.java:239)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:224)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:207)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:190)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:168)\n\tat org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)\n\tat org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)\n\tat org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)\n\tat org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)\n\tat org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:188)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)\n\tat org.gradle.internal.Either$Right.fold(Either.java:175)\n\tat org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:38)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:27)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:109)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)\n\tat org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:780)\n\t... 175 more\"><pre class=\"notranslate\"><code>java.util.ServiceConfigurationError: com.google.errorprone.bugpatterns.BugChecker: Provider org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType could not be instantiated\n\tat java.base/java.util.ServiceLoader.fail(ServiceLoader.java:582)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:804)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:722)\n\tat java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1395)\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:52)\n\tat com.google.errorprone.scanner.ScannerSupplier.fromBugCheckerClasses(ScannerSupplier.java:71)\n\tat com.google.errorprone.ErrorPronePlugins.loadPlugins(ErrorPronePlugins.java:47)\n\tat com.google.errorprone.ErrorProneAnalyzer.lambda$scansPlugins$0(ErrorProneAnalyzer.java:77)\n\tat com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:183)\n\tat com.google.errorprone.ErrorProneAnalyzer.finished(ErrorProneAnalyzer.java:148)\n\tat jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1418)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1365)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:960)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0(JavacTaskImpl.java:104)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.handleExceptions(JavacTaskImpl.java:147)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:100)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:94)\n\tat org.gradle.internal.compiler.java.IncrementalCompileTask.call(IncrementalCompileTask.java:89)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessingCompileTask.call(AnnotationProcessingCompileTask.java:94)\n\tat org.gradle.api.internal.tasks.compile.ResourceCleaningCompilationTask.call(ResourceCleaningCompilationTask.java:57)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:54)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:39)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.delegateAndHandleErrors(NormalizingJavaCompiler.java:97)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:46)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:36)\n\tat org.gradle.jvm.toolchain.internal.DefaultToolchainJavaCompiler.execute(DefaultToolchainJavaCompiler.java:57)\n\tat org.gradle.api.tasks.compile.JavaCompile.lambda$createToolchainCompiler$1(JavaCompile.java:232)\n\tat org.gradle.api.internal.tasks.compile.CleaningJavaCompiler.execute(CleaningJavaCompiler.java:53)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalCompilerFactory.lambda$createRebuildAllCompiler$0(IncrementalCompilerFactory.java:52)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:67)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:41)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:66)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:52)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:59)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler.execute(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.api.tasks.compile.JavaCompile.performCompilation(JavaCompile.java:279)\n\tat org.gradle.api.tasks.compile.JavaCompile.performIncrementalCompilation(JavaCompile.java:165)\n\tat org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)\n\tat org.gradle.api.internal.project.taskfactory.IncrementalInputsTaskAction.doExecute(IncrementalInputsTaskAction.java:32)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)\n\tat org.gradle.api.internal.project.taskfactory.AbstractIncrementalTaskAction.execute(AbstractIncrementalTaskAction.java:25)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$2.run(TaskExecution.java:239)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:224)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:207)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:190)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:168)\n\tat org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)\n\tat org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)\n\tat org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)\n\tat org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)\n\tat org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:188)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)\n\tat org.gradle.internal.Either$Right.fold(Either.java:175)\n\tat org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:38)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:27)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:109)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)\n\tat org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:780)\n\t... 175 more\n</code></pre></div>\n</details>\n<p dir=\"auto\">Versions:</p>\n<ul dir=\"auto\">\n<li>JDK 11.0.13</li>\n<li>mockito-errorprone:: 4.3.1</li>\n<li>ErrorProne: 2.11.0</li>\n</ul>","resourcePath":"/mockito/mockito/issues/2554","createdAt":"2022-01-27T07:19:21Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2557 : fix rare mock self equals","url":"https://github.com/mockito/mockito/pull/2558","resourcePath":"/mockito/mockito/pull/2558","createdAt":"2022-02-02T21:46:32Z","number":2558,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/ObjectMethodsGuru.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValuesTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84x_f4b2gAoMjUwYjhhMWY0YTllZmI5YmM4MDhlMDI3YzFmYWVmZWFiY2I3NTZiMw","url":"https://github.com/mockito/mockito/pull/2558/commits/250b8a1f4a9efb9bc808e027c1faefeabcb756b3"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2557,"url":"https://github.com/mockito/mockito/issues/2557","title":"Mock equals self not working","bodyHTML":"<p dir=\"auto\">Mock generated class, when calls equals, it uses MockMethodInterceptor.ForEquals interceptor that checks reference equality.<br>\nDuring my tests, in some unknown case, a mock equals method instead calls DispatcherDefaultingToRealMethod that resolves to return default answer for boolean return method, that is false... resulting in invalid self equals result.</p>\n<p dir=\"auto\">I don't have a reproductible test case, because I don't know how the generated mock class actually manages to call the dispatcher instead of ForEquals, only that if I debug this is what happens.</p>\n<p dir=\"auto\">mockito 3.12.0</p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2557","createdAt":"2022-02-02T21:44:52Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Restored spy equals/hashcode fix","url":"https://github.com/mockito/mockito/pull/2583","resourcePath":"/mockito/mockito/pull/2583","createdAt":"2022-03-05T16:57:07Z","number":2583,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/TypeCachingBytecodeGenerator.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/spies/SpyingOnRealObjectsTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v84z_jfO2gAoYzM3ZmRhY2ZhMzg5MTY3NjFiMTQ4NDhiODE0NzA5MjY4MWJlM2UzZA","url":"https://github.com/mockito/mockito/pull/2583/commits/c37fdacfa38916761b14848b8147092681be3e3d"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2331,"url":"https://github.com/mockito/mockito/issues/2331","title":"Spy doesn't forward hashcode/equals to actual object","bodyHTML":"<h3 dir=\"auto\">Mockito 3.11.1</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MockitoTest {\n\n    private static class ValueHolder {\n        private final String value;\n\n        public ValueHolder( String value ) {\n            this.value = value;\n        }\n\n        public String getValue() {\n            return value;\n        }\n\n        @Override public boolean equals( Object o ) {\n            if (this == o) return true;\n            if (!(o instanceof ValueHolder)) return false;\n            ValueHolder that = (ValueHolder) o;\n            return getValue().equals( that.getValue() );\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash( getValue() );\n        }\n    }\n\n    @Test\n    public void test() {\n        ValueHolder value = new ValueHolder( &quot;test&quot; );\n        ValueHolder spy = Mockito.spy( value );\n        assert value.equals( spy );\n        assert spy.equals( value ); //fails\n        assert value.hashCode() == spy.hashCode(); //fails\n    }\n}\"><pre class=\"notranslate\"><code>public class MockitoTest {\n\n    private static class ValueHolder {\n        private final String value;\n\n        public ValueHolder( String value ) {\n            this.value = value;\n        }\n\n        public String getValue() {\n            return value;\n        }\n\n        @Override public boolean equals( Object o ) {\n            if (this == o) return true;\n            if (!(o instanceof ValueHolder)) return false;\n            ValueHolder that = (ValueHolder) o;\n            return getValue().equals( that.getValue() );\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash( getValue() );\n        }\n    }\n\n    @Test\n    public void test() {\n        ValueHolder value = new ValueHolder( \"test\" );\n        ValueHolder spy = Mockito.spy( value );\n        assert value.equals( spy );\n        assert spy.equals( value ); //fails\n        assert value.hashCode() == spy.hashCode(); //fails\n    }\n}\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2331","createdAt":"2021-06-16T18:14:49Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Only run injection once","url":"https://github.com/mockito/mockito/pull/2603","resourcePath":"/mockito/mockito/pull/2603","createdAt":"2022-03-24T12:13:50Z","number":2603,"mergeCommit":null,"potentialMergeCommit":{"oid":"ccfc72e9a7a5e6ea4abe0cf2573731bbc5a2c057","message":"Merge 04bda90cdd1bef035884cde8f7e6fd28c77870f8 into 95b43e50101af2e598d247c618e334d0a6d8093e","commitUrl":"https://github.com/mockito/mockito/commit/ccfc72e9a7a5e6ea4abe0cf2573731bbc5a2c057","parents":{"nodes":[{"oid":"95b43e50101af2e598d247c618e334d0a6d8093e","message":"Bump versions.bytebuddy from 1.12.12 to 1.12.13 (#2719)\n\nBumps `versions.bytebuddy` from 1.12.12 to 1.12.13.\r\n\r\nUpdates `byte-buddy` from 1.12.12 to 1.12.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.12...byte-buddy-1.12.13)\r\n\r\nUpdates `byte-buddy-agent` from 1.12.12 to 1.12.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.12...byte-buddy-1.12.13)\r\n\r\nUpdates `byte-buddy-android` from 1.12.12 to 1.12.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.12...byte-buddy-1.12.13)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"},{"oid":"04bda90cdd1bef035884cde8f7e6fd28c77870f8","message":"Only run injection once\n\nAdd regression test that makers sure constructor injection is used when possible\nFixes #2602"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java"}},{"node":{"changeType":"DELETED","path":"src/test/java/org/mockito/internal/configuration/InjectingAnnotationEngineTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/junit-jupiter/src/test/java/org/mockitousage/InjectMocksTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v8408mve2gAoMDRiZGE5MGNkZDFiZWYwMzU4ODRjZGU4ZjdlNmZkMjhjNzc4NzBmOA","url":"https://github.com/mockito/mockito/pull/2603/commits/04bda90cdd1bef035884cde8f7e6fd28c77870f8"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2602,"url":"https://github.com/mockito/mockito/issues/2602","title":"mockito-core MockitoAnnotations::openMocks initializes class twice if said class has super class","bodyHTML":"<h2 dir=\"auto\">Short, Self Contained, Correct (Compilable), Example:</h2>\n<p dir=\"auto\">Have a look <a href=\"https://github.com/1-alex98/mre-mockito/tree/master/src/test/java\">here </a>.<br>\nYou will find a <code class=\"notranslate\">Works</code> class and a <code class=\"notranslate\">DoesNotWork</code> class. Both are essentially the same with a small difference being the <code class=\"notranslate\">DoesNotWork</code> class does fail and extends and empty class.</p>\n<h3 dir=\"auto\">DoesNotWork.java:</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ExtendWith({MockitoExtension.class})\npublic class DoesNotWork extends ToBeExtended{\n    @Mock\n    ToBeMocked toBeMocked;\n    @InjectMocks\n    ToBeInitialized toBeInitialized;\n\n    @Test\n    public void foo(){\n        assert toBeInitialized.toBeMocked == null;\n    }\n}\"><pre class=\"notranslate\"><code>@ExtendWith({MockitoExtension.class})\npublic class DoesNotWork extends ToBeExtended{\n    @Mock\n    ToBeMocked toBeMocked;\n    @InjectMocks\n    ToBeInitialized toBeInitialized;\n\n    @Test\n    public void foo(){\n        assert toBeInitialized.toBeMocked == null;\n    }\n}\n</code></pre></div>\n<h3 dir=\"auto\">ToBeInitialized.java:</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ToBeInitialized {\n    public ToBeMocked toBeMocked;\n\n    public ToBeInitialized(ToBeMocked toBeMocked) {\n        this.toBeMocked = null;\n    }\n}\"><pre class=\"notranslate\"><code>public class ToBeInitialized {\n    public ToBeMocked toBeMocked;\n\n    public ToBeInitialized(ToBeMocked toBeMocked) {\n        this.toBeMocked = null;\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Reading the docs that should work flawlessly. But it does not. As can be seen in <code class=\"notranslate\">Works.java</code> the reason is the <code class=\"notranslate\"> extends ToBeExtended</code> if you remove it everything works.</p>\n<h3 dir=\"auto\">Why does it not work</h3>\n<p dir=\"auto\">In the  <code class=\"notranslate\">DoesNotWork</code> the <code class=\"notranslate\">@InjectMocks</code> annotated instances are initialized twice. It does it twice, one time more for every super class there is. First the <code class=\"notranslate\">@InjectMocks</code> annotated instances are initialized via constructor injection. In a second round Mockito realizes that DoesNotWork.toBeInitialized is already initialized and therefore chooses Field injection over constructor injection. That makes sense if somebody does something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\n    @InjectMocks\n    Foo foo= new Foo();\n...\"><pre class=\"notranslate\"><code>...\n    @InjectMocks\n    Foo foo= new Foo();\n...\n</code></pre></div>\n<h3 dir=\"auto\">The code responsible</h3>\n<p dir=\"auto\">InjectingAnnotationEngine::processInjectMocks <div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/caf35b24e2764df0498469526ecb3e7ec68a0430/src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java#L56\">mockito/src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 56\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/mockito/mockito/commit/caf35b24e2764df0498469526ecb3e7ec68a0430\">caf35b2</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">AutoCloseable</span>&gt; <span class=\"pl-en\">processInjectMocks</span>( </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">The method is called by the MockitoExtension:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"processInjectMocks:61, InjectingAnnotationEngine (org.mockito.internal.configuration)\nprocess:48, InjectingAnnotationEngine (org.mockito.internal.configuration)\nopenMocks:82, MockitoAnnotations (org.mockito)\n&lt;init&gt;:43, DefaultMockitoSession (org.mockito.internal.framework)\nstartMocking:83, DefaultMockitoSessionBuilder (org.mockito.internal.session)\nbeforeEach:153, MockitoExtension (org.mockito.junit.jupiter)\"><pre class=\"notranslate\"><code>processInjectMocks:61, InjectingAnnotationEngine (org.mockito.internal.configuration)\nprocess:48, InjectingAnnotationEngine (org.mockito.internal.configuration)\nopenMocks:82, MockitoAnnotations (org.mockito)\n&lt;init&gt;:43, DefaultMockitoSession (org.mockito.internal.framework)\nstartMocking:83, DefaultMockitoSessionBuilder (org.mockito.internal.session)\nbeforeEach:153, MockitoExtension (org.mockito.junit.jupiter)\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    private List&lt;AutoCloseable&gt; processInjectMocks(\n            final Class&lt;?&gt; clazz, final Object testInstance) {\n        List&lt;AutoCloseable&gt; closeables = new ArrayList&lt;&gt;();\n        Class&lt;?&gt; classContext = clazz;\n        while (classContext != Object.class) {\n            closeables.add(injectCloseableMocks(testInstance));\n            classContext = classContext.getSuperclass();\n        }\n        return closeables;\n    }\"><pre class=\"notranslate\"><code>    private List&lt;AutoCloseable&gt; processInjectMocks(\n            final Class&lt;?&gt; clazz, final Object testInstance) {\n        List&lt;AutoCloseable&gt; closeables = new ArrayList&lt;&gt;();\n        Class&lt;?&gt; classContext = clazz;\n        while (classContext != Object.class) {\n            closeables.add(injectCloseableMocks(testInstance));\n            classContext = classContext.getSuperclass();\n        }\n        return closeables;\n    }\n</code></pre></div>\n<p dir=\"auto\">In this method for every super class the Test class has(<code class=\"notranslate\">classContext.getSuperclass()</code>) it triggers the injection(<code class=\"notranslate\"> injectCloseableMocks</code>) yet another time(<code class=\"notranslate\">while (classContext != Object.class)</code>). That might be clever if the super class has  <code class=\"notranslate\">@InjectMocks</code> annotated instances its-self. But it is odd to call <code class=\"notranslate\">closeables.add(injectCloseableMocks(testInstance));</code> instead of <code class=\"notranslate\">closeables.add(injectCloseableMocks(classContext));</code> then. For me it would make more sense to call it on the super class then instead of repeating the initialization yet another time. But I have not tested this change. I can not foresee what implications this would have. Fixing this concrete bug is probably better of in the hands of somebody that is more familiar with Mockito's internal workings.</p>\n<h2 dir=\"auto\">Why even care about this bug</h2>\n<p dir=\"auto\">Seems like it still initializes the instance right? Who does</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public ToBeInitialized(ToBeMocked toBeMocked) {\n    this.toBeMocked = null;\n }\"><pre class=\"notranslate\"><code>public ToBeInitialized(ToBeMocked toBeMocked) {\n    this.toBeMocked = null;\n }\n</code></pre></div>\n<p dir=\"auto\">anyways?</p>\n<p dir=\"auto\">Since newer Java versions get stricter in enforcing reflections over module borders this will increasingly become an issue. In my case Mockito does access a field via reflections it is not allowed to making it fail. But it should never have tried field injection since the class had a working constructor. Dues to the bug that is descripted here it did nevertheless.</p>\n<h2 dir=\"auto\">Versions:</h2>\n<p dir=\"auto\">JDK 17, Windows 11, Mockito Version 4.4.0 (Even though this all should be reproducible elsewhere and with different versions)</p>\n<p dir=\"auto\">Thank you for working on Mockito. Great Framework <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji><br>\nAny more questions? I am happy to help.</p>","resourcePath":"/mockito/mockito/issues/2602","createdAt":"2022-03-19T11:30:53Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Avoids starting mocks \"half-way\" if a superclass constructor is mocked but an unmocked subclass is initiated.","url":"https://github.com/mockito/mockito/pull/2682","resourcePath":"/mockito/mockito/pull/2682","createdAt":"2022-06-11T21:04:02Z","number":2682,"mergeCommit":{"oid":"a6e7132523d93d4974614167706f1e1ab271bd35","message":"Merge pull request #2682 from mockito/avoid-subclass-constructor-call\n\nAvoids starting mocks \"half-way\" if a superclass constructor is mocked but an unmocked subclass is initiated.","commitUrl":"https://github.com/mockito/mockito/commit/a6e7132523d93d4974614167706f1e1ab271bd35","parents":{"nodes":[{"oid":"3f9ea84ad056376dee9ad7cee2a46e9fa8cfdb69","message":"Clarify mocking error message and point to GitHub (#2693)\n\nFixes #2692"},{"oid":"02615ffb8e1977296ef66e445a09d7e6611898ea","message":"Avoids starting mocks \"half-way\" if a superclass constructor is mocked but an unmocked subclass is initiated."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/StackTraceChecker.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/StackWalkerChecker.java"}},{"node":{"changeType":"ADDED","path":"subprojects/inline/src/test/java/org/mockitoinline/SubconstructorMockTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v845gkG32gAoMDI2MTVmZmI4ZTE5NzcyOTZlZjY2ZTQ0NWEwOWQ3ZTY2MTE4OThlYQ","url":"https://github.com/mockito/mockito/pull/2682/commits/02615ffb8e1977296ef66e445a09d7e6611898ea"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2680,"url":"https://github.com/mockito/mockito/issues/2680","title":"MockedConstruction has side effects even after close() (with Sub-/Superclass)","bodyHTML":"<p dir=\"auto\">I am not 100% sure, but I think this is a bug. (Might be me just doing something wrong, but I don't see anything)</p>\n<p dir=\"auto\">I prepared a small example <a href=\"https://github.com/eNBeWe/mockito-bug\">here</a> with most recent versions of mockito-inline (4.6.1) and junit5 (5.8.2). I prepared it on Ubuntu, using OpenJDK 11, but I also experienced this issue on other systems.</p>\n<p dir=\"auto\">In short, I have two tests, each mocking constructors. The two constructors are related to each other, via inheritance. Both constructor mocks are auto-closed through try-with-resource.<br>\nIf I first mock the subclass constructor, close it again and then mock the superclass constructor and create a subclass object, my test fails. If I do it the other way around, my tests work.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class SuperClass {}\n\nclass SubClass extends SuperClass {\n\tpublic boolean isOtherValue() {\n\t\treturn true;\n\t}\n}\"><pre class=\"notranslate\"><code>class SuperClass {}\n\nclass SubClass extends SuperClass {\n\tpublic boolean isOtherValue() {\n\t\treturn true;\n\t}\n}\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@TestMethodOrder(OrderAnnotation.class)\nclass FailingTest {\n\n\t@Test\n\t@Order(1)\n\tvoid testThingsFirst() {\n\t\ttry (MockedConstruction&lt;SubClass&gt; mocked = Mockito.mockConstruction(SubClass.class)) {\n\t\t\tSystem.out.println(&quot;Running testCreateStuff&quot;);\n\t\t}\n\t}\n\n\t@Test\n\t@Order(2)\n\tvoid testThingsSecond() {\n\t\ttry (MockedConstruction&lt;SuperClass&gt; constructionMock = Mockito.mockConstruction(SuperClass.class)) {\n\t\t\tSystem.out.println(&quot;Running testOtherValue&quot;);\n\t\t\tSubClass testee = new SubClass();\n\t\t\tassertTrue(testee.isOtherValue());\n\t\t}\n\t}\n}\"><pre class=\"notranslate\"><code>@TestMethodOrder(OrderAnnotation.class)\nclass FailingTest {\n\n\t@Test\n\t@Order(1)\n\tvoid testThingsFirst() {\n\t\ttry (MockedConstruction&lt;SubClass&gt; mocked = Mockito.mockConstruction(SubClass.class)) {\n\t\t\tSystem.out.println(\"Running testCreateStuff\");\n\t\t}\n\t}\n\n\t@Test\n\t@Order(2)\n\tvoid testThingsSecond() {\n\t\ttry (MockedConstruction&lt;SuperClass&gt; constructionMock = Mockito.mockConstruction(SuperClass.class)) {\n\t\t\tSystem.out.println(\"Running testOtherValue\");\n\t\t\tSubClass testee = new SubClass();\n\t\t\tassertTrue(testee.isOtherValue());\n\t\t}\n\t}\n}\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.793 s &lt;&lt;&lt; FAILURE! - in de.enbewe.bug.mockito.FailingTest\n[ERROR] de.enbewe.bug.mockito.FailingTest.testThingsSecond  Time elapsed: 0.039 s  &lt;&lt;&lt; FAILURE!\norg.opentest4j.AssertionFailedError: expected: &lt;true&gt; but was: &lt;false&gt;\"><pre class=\"notranslate\"><code>[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.793 s &lt;&lt;&lt; FAILURE! - in de.enbewe.bug.mockito.FailingTest\n[ERROR] de.enbewe.bug.mockito.FailingTest.testThingsSecond  Time elapsed: 0.039 s  &lt;&lt;&lt; FAILURE!\norg.opentest4j.AssertionFailedError: expected: &lt;true&gt; but was: &lt;false&gt;\n</code></pre></div>\n<p dir=\"auto\">So it seems the old, closed subclass-constructor is becoming active again, when I mock the superclass.</p>\n<p dir=\"auto\">I tried to find some more info / debug more, but I don't really understand enough of the internals of Mockito.</p>","resourcePath":"/mockito/mockito/issues/2680","createdAt":"2022-06-11T11:42:34Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fix for Issue2656","url":"https://github.com/mockito/mockito/pull/2659","resourcePath":"/mockito/mockito/pull/2659","createdAt":"2022-05-31T22:20:16Z","number":2659,"mergeCommit":{"oid":"ff98622a8f4bbe96ef5405434b5d788fcd118bb4","message":"Restore behavior for mocks configured without strictness (#2659)\n\nFixes #2656","commitUrl":"https://github.com/mockito/mockito/commit/ff98622a8f4bbe96ef5405434b5d788fcd118bb4","parents":{"nodes":[{"oid":"1fbef57f8a54ec6ff3ffc1551b493351df81ab9e","message":"Bump groovy from 3.0.10 to 3.0.11 (#2660)\n\nBumps [groovy](https://github.com/apache/groovy) from 3.0.10 to 3.0.11.\r\n- [Release notes](https://github.com/apache/groovy/releases)\r\n- [Commits](https://github.com/apache/groovy/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.codehaus.groovy:groovy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/Mock.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/MockAnnotationProcessor.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/MockSettingsImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/settings/CreationSettings.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/MockTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/strictness/StrictnessMockAnnotationTest.java"}},{"node":{"changeType":"ADDED","path":"subprojects/junit-jupiter/src/test/java/org/mockitousage/ProductionCode.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/junit-jupiter/src/test/java/org/mockitousage/StrictnessTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v844xb4b2gAoYzdhZjFmYWE0Nzc4ZTE4MzAxYzI1YzRhZTcyYjAzOWI4OWVhZmMzZA","url":"https://github.com/mockito/mockito/pull/2659/commits/c7af1faa4778e18301c25c4ae72b039b89eafc3d"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2656,"url":"https://github.com/mockito/mockito/issues/2656","title":"Regression? Strictness set in `@MockitoSettings` ignored after upgrade from 4.5.1 to 4.6.0","bodyHTML":"<p dir=\"auto\">Upgrading from Mockito 4.5.1 to 4.6.0 and it looks to me as though <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1244556133\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2650\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2650/hovercard\" href=\"https://github.com/mockito/mockito/pull/2650\">#2650</a> or something around there has introduced a regression.</p>\n<p dir=\"auto\">I'm seeing <code class=\"notranslate\">PotentialStubbingProblem</code> exceptions where previously there were none, because the test class is annotated with <code class=\"notranslate\">@MockitoSettings(strictness = Strictness.LENIENT)</code>.</p>\n<p dir=\"auto\">The issue seems to be that <code class=\"notranslate\">StrictnessSelector</code> prefers the strictness set in the mock to the test level strictness, and the mock <em>defaults</em> to <code class=\"notranslate\">STRICT_STUBS</code>, so always overrides the strictness set in <code class=\"notranslate\">@MockitoSettings</code>.</p>\n<p dir=\"auto\">I've added a failing example test that demonstrates the issue here:  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1253595131\" data-permission-text=\"Title is private\" data-url=\"https://github.com/big-andy-coates/mockito/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/big-andy-coates/mockito/pull/1/hovercard\" href=\"https://github.com/big-andy-coates/mockito/pull/1\">big-andy-coates#1</a></p>\n<p dir=\"auto\">The above test fails with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"expected: \n  Optional.empty\n but was: \n  Optional[org.mockito.exceptions.misusing.PotentialStubbingProblem: \n  Strict stubbing argument mismatch. Please check:\n   - this invocation of 'test' method:\n      rootMock.test(&quot;Bar&quot;);\n      -&gt; at org.mockitousage.ProductionCode.simpleMethod(ProductionCode.java:9)\n   - has following stubbing(s) with different arguments:\n      1. rootMock.test(&quot;Foo&quot;);\n        -&gt; at org.mockitousage.StrictnessTest$LenientMockitoSettings.should_not_throw_on_potential_stubbing_issue(StrictnessTest.java:176)\n  Typically, stubbing argument mismatch indicates user mistake when writing tests.\n  Mockito fails early so that you can debug potential problem easily.\n  However, there are legit scenarios when this exception generates false negative signal:\n    - stubbing the same method multiple times using 'given().will()' or 'when().then()' API\n      Please use 'will().given()' or 'doReturn().when()' API for stubbing.\n    - stubbed method is intentionally invoked with different arguments by code under test\n      Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).\n  For more information see javadoc for PotentialStubbingProblem class.]\"><pre class=\"notranslate\"><code>expected: \n  Optional.empty\n but was: \n  Optional[org.mockito.exceptions.misusing.PotentialStubbingProblem: \n  Strict stubbing argument mismatch. Please check:\n   - this invocation of 'test' method:\n      rootMock.test(\"Bar\");\n      -&gt; at org.mockitousage.ProductionCode.simpleMethod(ProductionCode.java:9)\n   - has following stubbing(s) with different arguments:\n      1. rootMock.test(\"Foo\");\n        -&gt; at org.mockitousage.StrictnessTest$LenientMockitoSettings.should_not_throw_on_potential_stubbing_issue(StrictnessTest.java:176)\n  Typically, stubbing argument mismatch indicates user mistake when writing tests.\n  Mockito fails early so that you can debug potential problem easily.\n  However, there are legit scenarios when this exception generates false negative signal:\n    - stubbing the same method multiple times using 'given().will()' or 'when().then()' API\n      Please use 'will().given()' or 'doReturn().when()' API for stubbing.\n    - stubbed method is intentionally invoked with different arguments by code under test\n      Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).\n  For more information see javadoc for PotentialStubbingProblem class.]\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2656","createdAt":"2022-05-31T09:28:19Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Improve Varargs handling in AdditionalAnswers","url":"https://github.com/mockito/mockito/pull/2664","resourcePath":"/mockito/mockito/pull/2664","createdAt":"2022-06-02T00:20:24Z","number":2664,"mergeCommit":{"oid":"ce4e64dc782a132e4f32faf56a2630187a703a00","message":"Improve Varargs handling in AdditionalAnswers (#2664)\n\nFixes issues around vararg handling for the following methods in `AdditionalAnswers`:\r\n * `returnsFirstArg`\r\n * `returnsSecondArg`\r\n * `returnsLastArg`\r\n * `returnsArgAt`\r\n * `answer`\r\n * `answerVoid`\r\n\r\nThese methods were not correctly handling varargs. For example,\r\n\r\n```java\r\ndoAnswer(answerVoid(\r\n      (VoidAnswer2<String, Object[]>) logger::info\r\n   )).when(mock)\r\n      .info(any(), (Object[]) any());\r\n\r\nmock.info(\"Some message with {} {} {}\", \"three\", \"parameters\", \"\");\r\n```\r\n\r\nWould previously have resulted in a `ClassCastException` being thrown from the `mock.info` call.  This was because the `answerVoid` method was not taking into account that the second parameter was a varargs parameter and was attempting to pass the second actual argument `\"three\"`, rather than the second _raw_ argument `[\"three\", \"parameters\", \"\"]`.\r\n\r\nFixes #2644","commitUrl":"https://github.com/mockito/mockito/commit/ce4e64dc782a132e4f32faf56a2630187a703a00","parents":{"nodes":[{"oid":"5df5fbe32d9a2dae36c2fb2ec18bbd399a472de4","message":"Fix typo (#2681)"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/answers/AnswerFunctionalInterfaces.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/defaultanswers/ForwardsInvocations.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/invocation/Invocation.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/invocation/InvocationOnMock.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/IMethods.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/MethodsImpl.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/StubbingWithAdditionalAnswersTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v8447uuF2gAoN2VkOWIyNjZmMWFlYWJmMGJiODMxOWQ5MWI5ODM0NDIyMTQ0M2FkZA","url":"https://github.com/mockito/mockito/pull/2664/commits/7ed9b266f1aeabf0bb8319d91b98344221443add"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2644,"url":"https://github.com/mockito/mockito/issues/2644","title":"Varargs methods cause `ClassCastException` in `AnswerFunctionalInterfaces`","bodyHTML":"<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">The other day, I discovered that this code does not work:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        doAnswer(answerVoid((VoidAnswer2&lt;String, Object[]&gt;)\n                logger::info\n        )).when(mock)\n                .info(any(), (Object[]) any());\n\n        // This call will throw an exception\n        mock.info(&quot;Some message with {} {} {}&quot;, &quot;three&quot;, &quot;parameters&quot;, &quot;&quot;);\"><pre>        <span class=\"pl-en\">doAnswer</span>(<span class=\"pl-en\">answerVoid</span>((<span class=\"pl-smi\">VoidAnswer2</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>[]&gt;)\n                <span class=\"pl-s1\">logger</span>::<span class=\"pl-s1\">info</span>\n        )).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>)\n                .<span class=\"pl-en\">info</span>(<span class=\"pl-en\">any</span>(), (<span class=\"pl-smi\">Object</span>[]) <span class=\"pl-en\">any</span>());\n\n        <span class=\"pl-c\">// This call will throw an exception</span>\n        <span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\">\"Some message with {} {} {}\"</span>, <span class=\"pl-s\">\"three\"</span>, <span class=\"pl-s\">\"parameters\"</span>, <span class=\"pl-s\">\"\"</span>);</pre></div>\n<p dir=\"auto\">The exception details looks as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\njava.lang.ClassCastException: class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:97)\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:93)\n\tat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:42)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:103)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat org.slf4j.Logger$MockitoMock$f4Org7xs.info(Unknown Source)\n\tat LoggerMockingTest.logger_info_can_be_called_without_exceptions(LoggerMockingTest.java:34)\n        [...]\"><pre class=\"notranslate\"><code>class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\njava.lang.ClassCastException: class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:97)\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:93)\n\tat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:42)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:103)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat org.slf4j.Logger$MockitoMock$f4Org7xs.info(Unknown Source)\n\tat LoggerMockingTest.logger_info_can_be_called_without_exceptions(LoggerMockingTest.java:34)\n        [...]\n</code></pre></div>\n<p dir=\"auto\">The following <em>works</em>, but feels much less elegant:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        doAnswer( invocation -&gt; {\n            String format = invocation.getArgument( 0 );\n            Object[] allArguments = invocation.getArguments();\n            Object[] arguments = Arrays.copyOfRange( allArguments, 1, allArguments.length );\n            logger.info( format, arguments );\n            return null;\n        } ).when( mock )\n                .info( anyString(), (Object[])any() );\"><pre>        <span class=\"pl-en\">doAnswer</span>( <span class=\"pl-s1\">invocation</span> -&gt; {\n            <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">format</span> = <span class=\"pl-s1\">invocation</span>.<span class=\"pl-en\">getArgument</span>( <span class=\"pl-c1\">0</span> );\n            <span class=\"pl-smi\">Object</span>[] <span class=\"pl-s1\">allArguments</span> = <span class=\"pl-s1\">invocation</span>.<span class=\"pl-en\">getArguments</span>();\n            <span class=\"pl-smi\">Object</span>[] <span class=\"pl-s1\">arguments</span> = <span class=\"pl-s1\">Arrays</span>.<span class=\"pl-en\">copyOfRange</span>( <span class=\"pl-s1\">allArguments</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">allArguments</span>.<span class=\"pl-s1\">length</span> );\n            <span class=\"pl-s1\">logger</span>.<span class=\"pl-en\">info</span>( <span class=\"pl-s1\">format</span>, <span class=\"pl-s1\">arguments</span> );\n            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n        } ).<span class=\"pl-en\">when</span>( <span class=\"pl-s1\">mock</span> )\n                .<span class=\"pl-en\">info</span>( <span class=\"pl-en\">anyString</span>(), (<span class=\"pl-smi\">Object</span>[])<span class=\"pl-en\">any</span>() );</pre></div>\n<p dir=\"auto\">Is this to be considered a bug or a feature? <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png\">🙂</g-emoji> I get the feeling that varargs (<code class=\"notranslate\">Object[]</code> under the hood) parameters do not really work when used with the <code class=\"notranslate\">answerVoid()</code>-based approach as described above.</p>\n<h3 dir=\"auto\">Full MCVE</h3>\n<p dir=\"auto\"><a href=\"https://github.com/perlun/mockito-slf4-logging-example\">https://github.com/perlun/mockito-slf4-logging-example</a></p>\n<h3 dir=\"auto\">Issue checks</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information): Reproduced with latest Mockito, 4.5.1</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>","resourcePath":"/mockito/mockito/issues/2644","createdAt":"2022-05-17T09:15:40Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Reintroduce inheriting type annotations from interfaces if only one interface is mocked, including additional interfaces.","url":"https://github.com/mockito/mockito/pull/2645","resourcePath":"/mockito/mockito/pull/2645","createdAt":"2022-05-19T21:47:15Z","number":2645,"mergeCommit":{"oid":"d7a8ae040ec7f04e3011026857630aa9116f844d","message":"Merge pull request #2645 from mockito/interface-annotations\n\nReintroduce inheriting type annotations from interfaces if only one interface is mocked, including additional interfaces.","commitUrl":"https://github.com/mockito/mockito/commit/d7a8ae040ec7f04e3011026857630aa9116f844d","parents":{"nodes":[{"oid":"94e9797ba0b4c911a3e246bef68c2cb8ac2ab429","message":"Bump com.diffplug.spotless from 6.6.0 to 6.6.1 (#2643)\n\nBumps com.diffplug.spotless from 6.6.0 to 6.6.1.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"},{"oid":"a3d57fd73ac3dc4288cc93b4e2677975d0820a98","message":"Reintroduce inheriting type annotations from interfaces if only one interface is mocked, including additional interfaces.\n\nWithout this restriction, the first presented interface might determine the interfaces that are inherited by a subsequent mock that presents the interfaces in a different order. Also, it does not make semantic sense to decide on a particular interface to inherit annotations from. Fixes #2640."}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/creation/bytebuddy/SubclassByteBuddyMockMakerTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v844JpIm2gAoYTNkNTdmZDczYWMzZGM0Mjg4Y2M5M2I0ZTI2Nzc5NzVkMDgyMGE5OA","url":"https://github.com/mockito/mockito/pull/2645/commits/a3d57fd73ac3dc4288cc93b4e2677975d0820a98"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2640,"url":"https://github.com/mockito/mockito/issues/2640","title":"Mockito mock of interfaces lost annotation information","bodyHTML":"<p dir=\"auto\">I see some different behaviour after updating mockito, and I think it's a bug.<br>\nSee code below - the test fails because the mocked interface has lost the expected annotation.</p>\n<p dir=\"auto\">Making mocks of classes, keeps the annotation information.<br>\nMaking mocks of interfaces, annotation information is lost.</p>\n<p dir=\"auto\">Junit version: junit:junit:4.13.2<br>\nmockito version: org.mockito:mockito-core:4.5.1<br>\nopenJDK 11</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\"><pre class=\"notranslate\"><code>package com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\n</code></pre></div>\n<p dir=\"auto\">The test works on previous versions of mockito like, 4.4.0</p>","resourcePath":"/mockito/mockito/issues/2640","createdAt":"2022-05-11T07:28:36Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2623: Use zulu distribution and java 11 for release GHA job","url":"https://github.com/mockito/mockito/pull/2624","resourcePath":"/mockito/mockito/pull/2624","createdAt":"2022-04-21T00:26:59Z","number":2624,"mergeCommit":{"oid":"737f0a3517256af6ade37fd0e776a2bb230de553","message":"Fixes #2623: Use zulu distribution and java 11 for release GHA job (#2624)","commitUrl":"https://github.com/mockito/mockito/commit/737f0a3517256af6ade37fd0e776a2bb230de553","parents":{"nodes":[{"oid":"f48d794ad14982a134fd14dd2aef03477b699dc6","message":"Bump kotlinVersion from 1.6.20 to 1.6.21 (#2622)\n\nBumps `kotlinVersion` from 1.6.20 to 1.6.21.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.6.20 to 1.6.21\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\nUpdates `kotlin-stdlib` from 1.6.20 to 1.6.21\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":".github/workflows/ci.yml"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v842hnHH2gAoMDhmODYwOWFhY2U2MjU4MDkwMDJjNTJhZWZjYmMzYWJkYjg1NDA3ZA","url":"https://github.com/mockito/mockito/pull/2624/commits/08f8609aace625809002c52aefcbc3abdb85407d"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2623,"url":"https://github.com/mockito/mockito/issues/2623","title":"Missing errorprone module for 4.5.0 in central as release was done with jdk 8","bodyHTML":"<p dir=\"auto\">Error prone module is missing for 4.5.0 and not in the 4.5.0 bom.  Looking at the source code changes and release action, it appears jdk 8 was used to release and its ignored unless jdk 11 is used.  Can someone check?</p>","resourcePath":"/mockito/mockito/issues/2623","createdAt":"2022-04-20T03:09:27Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Fixes #2626 : Introduce MockSettings.mockMaker","url":"https://github.com/mockito/mockito/pull/2701","resourcePath":"/mockito/mockito/pull/2701","createdAt":"2022-07-04T19:47:55Z","number":2701,"mergeCommit":null,"potentialMergeCommit":{"oid":"c217f964a8eb20e8958252d2242d1751f5a3ccdd","message":"Merge a472ed0bd8c753bdbece68ae1d92ab39ebeca172 into 95b43e50101af2e598d247c618e334d0a6d8093e","commitUrl":"https://github.com/mockito/mockito/commit/c217f964a8eb20e8958252d2242d1751f5a3ccdd","parents":{"nodes":[{"oid":"95b43e50101af2e598d247c618e334d0a6d8093e","message":"Bump versions.bytebuddy from 1.12.12 to 1.12.13 (#2719)\n\nBumps `versions.bytebuddy` from 1.12.12 to 1.12.13.\r\n\r\nUpdates `byte-buddy` from 1.12.12 to 1.12.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.12...byte-buddy-1.12.13)\r\n\r\nUpdates `byte-buddy-agent` from 1.12.12 to 1.12.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.12...byte-buddy-1.12.13)\r\n\r\nUpdates `byte-buddy-android` from 1.12.12 to 1.12.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.12...byte-buddy-1.12.13)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"},{"oid":"a472ed0bd8c753bdbece68ae1d92ab39ebeca172","message":"fixup! Fixes #2626 : Introduce MockSettings.mockMaker"}]}},"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/MockCreationValidator.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/MockUtil.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/util/reflection/FieldInitializer.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/mock/MockCreationSettings.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/plugins/MockMaker.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/CustomMockMakerTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/util/MockCreationValidatorTest.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockito/internal/util/MockUtilTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockitousage/annotation/CustomMockMakerAnnotationTest.java"}},{"node":{"changeType":"MODIFIED","path":"subprojects/inline/src/test/java/org/mockitoinline/ConstructionMockTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v8460RGN2gAoYTQ3MmVkMGJkOGM3NTNiZGJlY2U2OGFlMWQ5MmFiMzllYmVjYTE3Mg","url":"https://github.com/mockito/mockito/pull/2701/commits/a472ed0bd8c753bdbece68ae1d92ab39ebeca172"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2626,"url":"https://github.com/mockito/mockito/issues/2626","title":"Introduce option to disable inline-mock-maker for a specific instance","bodyHTML":"<p dir=\"auto\">In order to ease the migration to the inline mock maker in big projects, it would nice if the mock make can be changed for individual mocks. This would allow projects to change the default mock maker to <code class=\"notranslate\">inline-mock-maker</code> without immediately fixing all edge cases where the new mock maker doesn't work.</p>\n<p dir=\"auto\">Such option could be provided over a new method on the <code class=\"notranslate\">MockSettings</code> class.</p>","resourcePath":"/mockito/mockito/issues/2626","createdAt":"2022-04-21T14:04:12Z","labels":{"edges":[]}}}]}}}},{"repository":{"pullRequest":{"title":"Allow @InjectMock into static/final fields (fixes #1417)","url":"https://github.com/mockito/mockito/pull/2700","resourcePath":"/mockito/mockito/pull/2700","createdAt":"2022-07-02T01:30:01Z","number":2700,"mergeCommit":null,"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/internal/configuration/injection/InjectUnsafeParser.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java"}},{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/configuration/injection/filter/TerminalMockCandidateFilter.java"}},{"node":{"changeType":"ADDED","path":"src/main/java/org/mockito/internal/util/reflection/StaticFinalOverrider.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/configuration/injection/InjectUnsafeParserTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/configuration/injection/PropertyAndSetterInjectionTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/configuration/injection/filter/TerminalMockCandidateFilterTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockito/internal/util/reflection/StaticFinalOverriderTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockitousage/annotation/InjectUnsafeTest.java"}},{"node":{"changeType":"ADDED","path":"src/test/java/org/mockitoutil/ExceptionHider.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v846vHle2gAoODAxZmM1OGRjNDFhYTc0M2Q4OGY5MDJhZGViMmU1NzI4NTM5YjdhNw","url":"https://github.com/mockito/mockito/pull/2700/commits/801fc58dc41aa743d88f902adeb2e5728539b7a7"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":1417,"url":"https://github.com/mockito/mockito/issues/1417","title":"Allow @InjectMock into static/final fields","bodyHTML":"<p dir=\"auto\">For some of my projects it would be nice if @InjectMock would work with spies on final/static fields.<br>\nUnfortunately I cannot refactor the code to use constructor/setter injection since this would alter the API (package-private is not sufficient).</p>\n<p dir=\"auto\">I can see that injecting into static final is problematic (unexpected test behavior on subsequent tests)...<br>\nbut injecting into just static <em>or</em> final fields should pose no problems - at least none I can see (care to enlighten if your opinion differs?).</p>","resourcePath":"/mockito/mockito/issues/1417","createdAt":"2018-06-29T23:05:38Z","labels":{"edges":[{"node":{"name":"injection"}}]}}}]}}}},{"repository":{"pullRequest":{"title":"RETURNS_SELF: Avoids returning mock when mock type is assignable to method return type, but method return type is Object.","url":"https://github.com/mockito/mockito/pull/2687","resourcePath":"/mockito/mockito/pull/2687","createdAt":"2022-06-14T15:12:24Z","number":2687,"mergeCommit":{"oid":"512ee3949484e4765038a0410cd7a7f1b73cc655","message":"Fix RETURNS_SELF for methods with generic return type (#2687)\n\nFixes #2686","commitUrl":"https://github.com/mockito/mockito/commit/512ee3949484e4765038a0410cd7a7f1b73cc655","parents":{"nodes":[{"oid":"14a1bb42babcf1519d45d7c6b3ba5b0627d5cafd","message":"Bump org.eclipse.osgi from 3.17.200 to 3.18.0 (#2688)\n\nBumps [org.eclipse.osgi](https://github.com/eclipse-equinox/equinox.binaries) from 3.17.200 to 3.18.0.\r\n- [Release notes](https://github.com/eclipse-equinox/equinox.binaries/releases)\r\n- [Commits](https://github.com/eclipse-equinox/equinox.binaries/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.platform:org.eclipse.osgi\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"}]}},"potentialMergeCommit":null,"files":{"edges":[{"node":{"changeType":"MODIFIED","path":"src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java"}},{"node":{"changeType":"MODIFIED","path":"src/test/java/org/mockitousage/stubbing/StubbingReturnsSelfTest.java"}}]},"commits":{"edges":[{"node":{"id":"PURC_lADOAF62v845pEwB2gAoOGE1M2MzZTRlMDczOTdiOGFkN2EyOTdkOTJmMWUzYWNiYTAwZjc0NA","url":"https://github.com/mockito/mockito/pull/2687/commits/8a53c3e4e07397b8ad7a297d92f1e3acba00f744"}}]},"closingIssuesReferences":{"edges":[{"node":{"number":2686,"url":"https://github.com/mockito/mockito/issues/2686","title":"RETURNS_SELF breaks methods with generic return type","bodyHTML":"<p dir=\"auto\">I'm trying to use RETURNS_SELF to mock a builder with a generic method:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static class HttpBuilder {\n  private String uri;\n  \n  public HttpBuilder withUri(String uri) {\n    this.uri = uri;\n    return this\n  }\n\n  ...\n\n  public &lt;T&gt; T request(T result) {\n    return result; // Do typed request\n  }\n}\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">HttpBuilder</span> {\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>;\n  \n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">HttpBuilder</span> <span class=\"pl-en\">withUri</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>) {\n    <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">uri</span> = <span class=\"pl-s1\">uri</span>;\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>\n  }\n\n  ...\n\n  <span class=\"pl-k\">public</span> &lt;<span class=\"pl-s1\">T</span>&gt; <span class=\"pl-smi\">T</span> <span class=\"pl-s1\">request</span>(<span class=\"pl-smi\">T</span> <span class=\"pl-s1\">result</span>) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>; <span class=\"pl-c\">// Do typed request</span>\n  }\n}</pre></div>\n<p dir=\"auto\">It is easy enough to mock using:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"val builder = mock(HttpBuilder.class, RETURNS_SELF);\"><pre><span class=\"pl-smi\">val</span> <span class=\"pl-s1\">builder</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">HttpBuilder</span>.<span class=\"pl-s1\">class</span>, <span class=\"pl-c1\">RETURNS_SELF</span>);</pre></div>\n<p dir=\"auto\">However this breaks:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"given(builder.request(anyString())).willAnswer(i → &quot;Mocked result&quot;);\"><pre><span class=\"pl-en\">given</span>(<span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">request</span>(<span class=\"pl-en\">anyString</span>())).<span class=\"pl-en\">willAnswer</span>(<span class=\"pl-s1\">i</span> → <span class=\"pl-s\">\"Mocked result\"</span>);</pre></div>\n<p dir=\"auto\">The problem is, that <code class=\"notranslate\">anyString()</code> infers <code class=\"notranslate\">builder.request</code> to have a <code class=\"notranslate\">String</code> return type, which infers <code class=\"notranslate\">given</code> to have a <code class=\"notranslate\">String methodCall</code> parameter.<br>\nHowever, at runtime a <code class=\"notranslate\">ClassCastException</code> is thrown as <code class=\"notranslate\">builder.request(anyString())</code> returns a <code class=\"notranslate\">HttpBuilder$MockitoMock</code> which cannot be cast to the the <code class=\"notranslate\">String</code> expected by <code class=\"notranslate\">given</code>.<br>\n(I think) this is caused by <code class=\"notranslate\">RETURNS_SELF</code> <a href=\"https://github.com/mockito/mockito/blob/6f9108b833323345bd926f10914224d3e0a11b80/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java#L23\">here</a> in the <code class=\"notranslate\">TriesToReturnSelf</code> class. The generic method has the return type <code class=\"notranslate\">Object</code> which is obviously assignable from <code class=\"notranslate\">mockType</code>. This causes mockito to always undesirably return <code class=\"notranslate\">this</code> with methods with generic return types when using <code class=\"notranslate\">RETURNS_SELF</code>.</p>\n<p dir=\"auto\">Is it possible for mockito to check whether the return type of the method  is generic? In that case I would suggest a fix to never return <code class=\"notranslate\">this</code> for methods with generic return types.<br>\nIf you think this would be a good solution, I am happy to contribute a fix.</p>\n<p dir=\"auto\">edit: What do you think of checking whether return type is of type <code class=\"notranslate\">Object.class</code>, which suggests that mockito should probable return the empty value instead of <code class=\"notranslate\">this</code></p>\n<p dir=\"auto\">edit 2: Added <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1270961760\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2687\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2687/hovercard\" href=\"https://github.com/mockito/mockito/pull/2687\">#2687</a> to demonstrate the issue with a test and solution proposal. Happy to update with any comments</p>","resourcePath":"/mockito/mockito/issues/2686","createdAt":"2022-06-14T14:25:44Z","labels":{"edges":[]}}}]}}}}]