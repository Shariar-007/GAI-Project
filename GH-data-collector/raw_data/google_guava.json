[
    {
        "repository": {
            "pullRequest": {
                "title": "Removed all references to now useless workaround",
                "url": "https://github.com/google/guava/pull/5265",
                "resourcePath": "/google/guava/pull/5265",
                "createdAt": "2020-10-07T19:17:36Z",
                "number": 5265,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Sets.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Collections2.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/FluentIterable.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Sets.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk5NDYzMjQwOjczMmNmZDY0ZjdmOGFhNDJlMjlkNzhhYmIwM2RmYjJmZTk4NGRmZGU=",
                                "url": "https://github.com/google/guava/pull/5265/commits/732cfd64f7f8aa42e29d78abb03dfb2fe984dfde"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3679,
                                "url": "https://github.com/google/guava/issues/3679",
                                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-s1\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png\">🙂</g-emoji></p>",
                                "resourcePath": "/google/guava/issues/3679",
                                "createdAt": "2019-11-04T03:09:47Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Clarified HashMultimap javadoc about concurrency",
                "url": "https://github.com/google/guava/pull/5261",
                "resourcePath": "/google/guava/pull/5261",
                "createdAt": "2020-10-02T22:34:20Z",
                "number": 5261,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/HashMultimap.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/HashMultimap.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk3MTYyOTk5OjQ3ZjgwMWU5Njc5NGYwN2VhOWFiYjI3YzhjNDQ0OWFlMDY4NzZlMzE=",
                                "url": "https://github.com/google/guava/pull/5261/commits/47f801e96794f07ea9abb27c8c4449ae06876e31"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3682,
                                "url": "https://github.com/google/guava/issues/3682",
                                "title": "MultiMap concurrency unclear Javadoc",
                                "bodyHTML": "<p dir=\"auto\">From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47418372\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/135\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/135/hovercard?comment_id=472966705&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/135#issuecomment-472966705\">#135 (comment)</a></p>\n<p dir=\"auto\">The <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/HashMultimap.html\" rel=\"nofollow\">javadoc for HashMultimap</a>  states:</p>\n<blockquote>\n<p dir=\"auto\">This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly.</p>\n</blockquote>\n<p dir=\"auto\">Does this mean that it is thread-safe if only one thread writes to the map (while any number of threads may read simultaniously) ? The javadoc for <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/ArrayListMultimap.html\" rel=\"nofollow\">other MultiMap implementations</a> is the same and i think it should be clearer on that.</p>",
                                "resourcePath": "/google/guava/issues/3682",
                                "createdAt": "2019-11-06T06:08:59Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=api-docs" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "#3679 - Removed all references to now useless workaround",
                "url": "https://github.com/google/guava/pull/5260",
                "resourcePath": "/google/guava/pull/5260",
                "createdAt": "2020-10-02T22:09:27Z",
                "number": 5260,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Sets.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Collections2.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/FluentIterable.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Sets.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk3MTU2MzMxOmM5MWY2MjNmNTg1YmE5OWEyZmI1Njg1ZDNmNmZhOTQwYmJkYzhhZGU=",
                                "url": "https://github.com/google/guava/pull/5260/commits/c91f623f585ba99a2fb5685d3f6fa940bbdc8ade"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3679,
                                "url": "https://github.com/google/guava/issues/3679",
                                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-s1\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png\">🙂</g-emoji></p>",
                                "resourcePath": "/google/guava/issues/3679",
                                "createdAt": "2019-11-04T03:09:47Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Clarified HashMultimap javadoc about concurrency",
                "url": "https://github.com/google/guava/pull/5266",
                "resourcePath": "/google/guava/pull/5266",
                "createdAt": "2020-10-07T19:21:14Z",
                "number": 5266,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/HashMultimap.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/HashMultimap.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk5NDY1MTM2Ojk3NTc3ZDIzN2U2OTNkMDFlNjExNWExMThlNjJiMTBkN2M4NDkwNTY=",
                                "url": "https://github.com/google/guava/pull/5266/commits/97577d237e693d01e6115a118e62b10d7c849056"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3682,
                                "url": "https://github.com/google/guava/issues/3682",
                                "title": "MultiMap concurrency unclear Javadoc",
                                "bodyHTML": "<p dir=\"auto\">From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47418372\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/135\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/135/hovercard?comment_id=472966705&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/135#issuecomment-472966705\">#135 (comment)</a></p>\n<p dir=\"auto\">The <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/HashMultimap.html\" rel=\"nofollow\">javadoc for HashMultimap</a>  states:</p>\n<blockquote>\n<p dir=\"auto\">This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly.</p>\n</blockquote>\n<p dir=\"auto\">Does this mean that it is thread-safe if only one thread writes to the map (while any number of threads may read simultaniously) ? The javadoc for <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/ArrayListMultimap.html\" rel=\"nofollow\">other MultiMap implementations</a> is the same and i think it should be clearer on that.</p>",
                                "resourcePath": "/google/guava/issues/3682",
                                "createdAt": "2019-11-06T06:08:59Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=api-docs" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "MOE Sync 2020-10-06",
                "url": "https://github.com/google/guava/pull/5264",
                "resourcePath": "/google/guava/pull/5264",
                "createdAt": "2020-10-06T16:08:42Z",
                "number": 5264,
                "mergeCommit": {
                    "oid": "392f6bf278d6baa907f3d737bb5a216f94ff0794",
                    "message": "Move gwt-user dep to test scope.\n\nWe no longer need it as a prod dependency (not even `provided`) after removing GWT-RPC support.\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nFixes https://github.com/google/truth/issues/637, if GitHub will let me get away with closing a Truth issue with a Guava commit :)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335644672",
                    "commitUrl": "https://github.com/google/guava/commit/392f6bf278d6baa907f3d737bb5a216f94ff0794",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "e8a8330bbf6805007038f9e407560f96e7fd3d69",
                                "message": "Remove a couple GwtSerializationDependencies classes from open-source Guava after all.\n\nAs noted in 0cb89dd110ce88770207889901e95ea2ac896932, this isn't necessary. As *also* noted there, we have *additional* FooGwtSerializationDependencies classes that I'm leaving in place because they are *supertypes* of the prod classes and thus harder to remove.\n\nBut I'm removing these 2 because it saves me a few lines in the Copybara config :)\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335047921"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-gwt/pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk4NjY5NjI3OjZhNjI4NWQxZTEyYjhkMmM2MmI4Yjc1MmQ2ZWUxYTQ0ZjQ4ZDBkYWM=",
                                "url": "https://github.com/google/guava/pull/5264/commits/6a6285d1e12b8d2c62b8b752d6ee1a44f48d0dac"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 637,
                                "url": "https://github.com/google/truth/issues/637",
                                "title": "Remove unnecessary dependency to gwt-user",
                                "bodyHTML": "<p dir=\"auto\">Our static dependency analysis tool detected an error <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"510910246\" data-permission-text=\"Title is private\" data-url=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/980\" data-hovercard-type=\"issue\" data-hovercard-url=\"/GoogleCloudPlatform/cloud-opensource-java/issues/980/hovercard\" href=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/980\">GoogleCloudPlatform/cloud-opensource-java#980</a> on gwt-user used by <code class=\"notranslate\"> com.google.truth:truth:1.0</code>.</p>\n<p dir=\"auto\">Discussed with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/netdpb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/netdpb\">@netdpb</a> , it seems that Truth declares unnecessary dependency:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    &lt;!-- Required only to build the -gwt sub-artifact. --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.google.gwt&lt;/groupId&gt;\n      &lt;artifactId&gt;gwt-user&lt;/artifactId&gt;\n      &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\"><pre class=\"notranslate\"><code>    &lt;!-- Required only to build the -gwt sub-artifact. --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.google.gwt&lt;/groupId&gt;\n      &lt;artifactId&gt;gwt-user&lt;/artifactId&gt;\n      &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\n</code></pre></div>\n<p dir=\"auto\">There's no \"-gwt sub-artifact\" found under com.google.truth: <a href=\"https://search.maven.org/search?q=g:com.google.truth\" rel=\"nofollow\">https://search.maven.org/search?q=g:com.google.truth</a> .</p>\n<p dir=\"auto\">Would you remove the dependency if not needed?</p>",
                                "resourcePath": "/google/truth/issues/637",
                                "createdAt": "2019-10-22T21:14:17Z",
                                "labels": {
                                    "edges": [{ "node": { "name": "P2" } }]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "#3679 - Removed all references to now useless workaround",
                "url": "https://github.com/google/guava/pull/5259",
                "resourcePath": "/google/guava/pull/5259",
                "createdAt": "2020-10-02T21:54:49Z",
                "number": 5259,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Sets.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Collections2.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/FluentIterable.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Sets.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk3MTUyMDE2OjdhMzA0NWIzNDZhM2Y0YzI2YjdjMTdmNDNjYWE0MGEzODM3YTg4ZjA=",
                                "url": "https://github.com/google/guava/pull/5259/commits/7a3045b346a3f4c26b7c17f43caa40a3837a88f0"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3679,
                                "url": "https://github.com/google/guava/issues/3679",
                                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-s1\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png\">🙂</g-emoji></p>",
                                "resourcePath": "/google/guava/issues/3679",
                                "createdAt": "2019-11-04T03:09:47Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "MOE Sync 2020-10-09",
                "url": "https://github.com/google/guava/pull/5268",
                "resourcePath": "/google/guava/pull/5268",
                "createdAt": "2020-10-09T13:30:14Z",
                "number": 5268,
                "mergeCommit": {
                    "oid": "be1c0d8a4fd00e6c5cc362cc0021db5e9e3d4fef",
                    "message": "Removed all references to now useless workaround\n\nFixes #3679\nFixes #5265\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336161257",
                    "commitUrl": "https://github.com/google/guava/commit/be1c0d8a4fd00e6c5cc362cc0021db5e9e3d4fef",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "62ea9014fcd19711dd235a3036650518f91fe017",
                                "message": "Clarify `HashMultimap` docs about concurrency.\n\nCloses #5266.\nFixes #3682.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336158810"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/Sets.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Collections2.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/FluentIterable.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/HashMultimap.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Iterables.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Lists.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Queues.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Sets.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTAwNTkxMjE5OjI2ZGEwOTQ5YzFjZjU0ZWI3MzA1NzhlNzVmZTA4N2Y2NzExMGVlNzE=",
                                "url": "https://github.com/google/guava/pull/5268/commits/26da0949c1cf54eb730578e75fe087f67110ee71"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3679,
                                "url": "https://github.com/google/guava/issues/3679",
                                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-s1\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f642.png\">🙂</g-emoji></p>",
                                "resourcePath": "/google/guava/issues/3679",
                                "createdAt": "2019-11-04T03:09:47Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 3682,
                                "url": "https://github.com/google/guava/issues/3682",
                                "title": "MultiMap concurrency unclear Javadoc",
                                "bodyHTML": "<p dir=\"auto\">From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47418372\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/135\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/135/hovercard?comment_id=472966705&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/135#issuecomment-472966705\">#135 (comment)</a></p>\n<p dir=\"auto\">The <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/HashMultimap.html\" rel=\"nofollow\">javadoc for HashMultimap</a>  states:</p>\n<blockquote>\n<p dir=\"auto\">This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly.</p>\n</blockquote>\n<p dir=\"auto\">Does this mean that it is thread-safe if only one thread writes to the map (while any number of threads may read simultaniously) ? The javadoc for <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/ArrayListMultimap.html\" rel=\"nofollow\">other MultiMap implementations</a> is the same and i think it should be clearer on that.</p>",
                                "resourcePath": "/google/guava/issues/3682",
                                "createdAt": "2019-11-06T06:08:59Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=api-docs" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "MOE Sync 2020-10-01",
                "url": "https://github.com/google/guava/pull/5256",
                "resourcePath": "/google/guava/pull/5256",
                "createdAt": "2020-10-01T14:33:55Z",
                "number": 5256,
                "mergeCommit": {
                    "oid": "52882ad975d2a55bb624143f02387515b3b01f46",
                    "message": "Mark BigDecimalMathTest as fully @GwtIncompatible.\n\nCurrently it has every member annotated as @GwtIncompatible. This works fine internally, but the external GWT tests (which we run only at release time) complain about the resulting empty BigDecimalMathTest_gwt:\nhttps://github.com/google/guava/blob/master/guava-gwt/test/com/google/common/math/BigDecimalMathTest_gwt.java\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334778309",
                    "commitUrl": "https://github.com/google/guava/commit/52882ad975d2a55bb624143f02387515b3b01f46",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "0cb89dd110ce88770207889901e95ea2ac896932",
                                "message": "Fully remove GWT-RPC support externally.\n\nReally, really closes https://github.com/google/guava/issues/3680.\n\nPossible future work:\n- Be consistent about whether we put @GwtCompatible on the remaining internal CustomFieldSerializer classes. (For those files, it probably acts only as documentation (of something that is pretty obvious :)). Our open-source build used to take action when it saw `@GwtCompatible(emulated=true)`, but (a) it doesn't anymore, (b) those files don't exist externally anymore, and (c) they weren't `emulated=true` :) I believe that our internal build requires @GwtCompatible on most files in our GWT target, but I think there's an exception for GWT-target-only sources.)\n- Remove some of the GwtSerializationDependencies classes. However, some of these classe are set up as *supertypes* of our prod classes, so this would require some surgery. Keeping them is harmless: It doesn't actually make the classes GWT-serializable.\n- Remove the usages of serializable=true on @GwtCompatible, at least externally but maybe just entirely.\n\nRELNOTES=[Guava types can no longer be sent over GWT-RPC.](https://groups.google.com/d/msg/guava-announce/zHZTFg7YF3o/rQNnwdHeEwAJ) Even the earlier, temporary way to reenable support (`guava.gwt.emergency_reenable_rpc`) no longer has an effect.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334598649"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/SingletonImmutableSet_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/SingletonImmutableTable_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/SparseImmutableTable_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/Table_CustomFieldSerializerBase.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/TreeBasedTable_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/TreeMultimap_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/collect/UsingToStringOrdering_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/src/com/google/common/primitives/UnsignedLong_CustomFieldSerializer.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava-gwt/test/com/google/common/math/BigDecimalMathTest_gwt.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/math/BigDecimalMathTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk2MzA5NTM3OjBmOWVlNThkOGNhYThhMTJhYzc3ZmUwMWUwOTdlMzkzODYxNTdkMmM=",
                                "url": "https://github.com/google/guava/pull/5256/commits/0f9ee58d8caa8a12ac77fe01e097e39386157d2c"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3680,
                                "url": "https://github.com/google/guava/issues/3680",
                                "title": "Remove GWT-RPC support",
                                "bodyHTML": "<p dir=\"auto\">In January, <a href=\"https://groups.google.com/d/topic/guava-announce/zHZTFg7YF3o/discussion\" rel=\"nofollow\">we announced that we'd remove it</a> at the beginning of 2020. We've already laid some groundwork for that.</p>\n<p dir=\"auto\">I'm filing this issue as an additional way of raising awareness. I'll try to also mention it from relevant CLs.</p>",
                                "resourcePath": "/google/guava/issues/3680",
                                "createdAt": "2019-11-05T15:18:45Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=other" } },
                                        {
                                            "node": {
                                                "name": "package=general"
                                            }
                                        },
                                        { "node": { "name": "platform=gwt" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "#3951 - Joiner implements Collector",
                "url": "https://github.com/google/guava/pull/5287",
                "resourcePath": "/google/guava/pull/5287",
                "createdAt": "2020-10-17T23:29:43Z",
                "number": 5287,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/base/JoinerTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/base/Joiner.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTA1MzYxOTgxOjdiNWNlMDU4OTI4OGQzODFjMDAyMGYxMTM0NTUwZDJlNTEwYmJhZDQ=",
                                "url": "https://github.com/google/guava/pull/5287/commits/7b5ce0589288d381c0020f1134550d2e510bbad4"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3951,
                                "url": "https://github.com/google/guava/issues/3951",
                                "title": "Provide Joiner as Collector",
                                "bodyHTML": "<p dir=\"auto\">The main advantage of Guava <code class=\"notranslate\">Joiner</code> over JDKs <code class=\"notranslate\">Collectors.joining(...)</code> or <code class=\"notranslate\">StringJoiner</code> that it can handle arbitrary objects and has a convenient builder api to express e.g. <code class=\"notranslate\">useForNull(nullText)</code>.</p>\n<p dir=\"auto\">Thus allow the usage of Joiner when streams come into play and get rid of cumbersome expressions like <code class=\"notranslate\">filter(Objects::nonNull).map(Object::toString)</code>.</p>\n<p dir=\"auto\">E.g. with factory method <em>joiningOn(...)</em>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"objectStream.collect(joiningOn(&quot;, &quot;).skipNulls());\nobjectStream.collect(joiningOn(&quot;, &quot;).useForNull(&quot;&lt;N/A&gt;&quot;));\"><pre class=\"notranslate\"><code>objectStream.collect(joiningOn(\", \").skipNulls());\nobjectStream.collect(joiningOn(\", \").useForNull(\"&lt;N/A&gt;\"));\n</code></pre></div>\n<p dir=\"auto\">Alternatively <code class=\"notranslate\">Joiner</code> could implement Collector interface.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"objectStream.collect(Joiner.on(&quot;, &quot;).skipNulls());\nobjectStream.collect(Joiner.on(&quot;, &quot;).useForNull(&quot;&lt;N/A&gt;&quot;));\"><pre class=\"notranslate\"><code>objectStream.collect(Joiner.on(\", \").skipNulls());\nobjectStream.collect(Joiner.on(\", \").useForNull(\"&lt;N/A&gt;\"));\n</code></pre></div>",
                                "resourcePath": "/google/guava/issues/3951",
                                "createdAt": "2020-07-03T07:46:32Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=addition" } },
                                        { "node": { "name": "package=base" } },
                                        {
                                            "node": { "name": "platform=java8" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "#5284 - Fixed different result when closing encoding stream twice",
                "url": "https://github.com/google/guava/pull/5288",
                "resourcePath": "/google/guava/pull/5288",
                "createdAt": "2020-10-17T23:52:30Z",
                "number": 5288,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/io/BaseEncodingTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/io/BaseEncoding.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/io/BaseEncodingTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/io/BaseEncoding.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTA1MzYzOTg5OmZiYmE3MmViNmU0YTRlMWY2ZGVmMjQ1YjQ4MTEyZmZjYjViMzQ5NzU=",
                                "url": "https://github.com/google/guava/pull/5288/commits/fbba72eb6e4a4e1f6def245b48112ffcb5b34975"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5284,
                                "url": "https://github.com/google/guava/issues/5284",
                                "title": "BaseEncoding.encodingStream().close() is non-idempotent",
                                "bodyHTML": "<p dir=\"auto\"><a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/Closeable.html#close()\" rel=\"nofollow\"><code class=\"notranslate\">Closeable.close</code></a> says:</p>\n<blockquote>\n<p dir=\"auto\">If the stream is already closed then invoking this method has no effect.</p>\n</blockquote>\n<p dir=\"auto\">Code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"StringWriter w = new StringWriter();\nOutputStream out = BaseEncoding.base64().encodingStream(w);\nout.write(0);\nout.close();\nSystem.out.println(w);\nout.close();\nSystem.out.println(w);\"><pre class=\"notranslate\"><code>StringWriter w = new StringWriter();\nOutputStream out = BaseEncoding.base64().encodingStream(w);\nout.write(0);\nout.close();\nSystem.out.println(w);\nout.close();\nSystem.out.println(w);\n</code></pre></div>\n<p dir=\"auto\">Output:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"AA==\nAA==A===\"><pre class=\"notranslate\"><code>AA==\nAA==A===\n</code></pre></div>",
                                "resourcePath": "/google/guava/issues/5284",
                                "createdAt": "2020-10-16T13:53:01Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=io" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "#3945 - Fixed parent.relativePath issue in guava-bom",
                "url": "https://github.com/google/guava/pull/5349",
                "resourcePath": "/google/guava/pull/5349",
                "createdAt": "2020-12-05T19:19:26Z",
                "number": 5349,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-bom/pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMzMDc5NzAzOjM4MzMwY2I1Y2NjYjcxN2U3NTNjZGJjZjJmYmZjY2QxMGQ5OTRiZWY=",
                                "url": "https://github.com/google/guava/pull/5349/commits/38330cb5cccb717e753cdbcf2fbfccd10d994bef"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3945,
                                "url": "https://github.com/google/guava/issues/3945",
                                "title": "parent.relativePath'  points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent",
                                "bodyHTML": "<p dir=\"auto\">[WARNING]<br>\n[WARNING] Some problems were encountered while building the effective model for com.google.guava:guava-bom:pom:HEAD-jre-SNAPSHOT<br>\n[WARNING] 'parent.relativePath' of POM com.google.guava:guava-bom:HEAD-jre-SNAPSHOT (/home/elharo/guava/guava-bom/pom.xml) points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent, please verify your project structure @ line 14, column 11<br>\n[WARNING]<br>\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.<br>\n[WARNING]<br>\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.<br>\n[WARNING]</p>",
                                "resourcePath": "/google/guava/issues/3945",
                                "createdAt": "2020-06-29T13:04:18Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Adds HttpStatus API",
                "url": "https://github.com/google/guava/pull/5359",
                "resourcePath": "/google/guava/pull/5359",
                "createdAt": "2020-12-16T19:37:56Z",
                "number": 5359,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "android/guava-tests/test/com/google/common/net/HttpStatusTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "android/guava/src/com/google/common/net/HttpStatus.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "guava-tests/test/com/google/common/net/HttpStatusTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "ADDED",
                                "path": "guava/src/com/google/common/net/HttpStatus.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQxMzk0NjMzOjEzNTgzZWNjMzI4N2U2NzE1NDQyM2ZjYTM1MjU4NWM2YzczNTUzNTk=",
                                "url": "https://github.com/google/guava/pull/5359/commits/13583ecc3287e67154423fca352585c6c7355359"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 927,
                                "url": "https://github.com/google/guava/issues/927",
                                "title": "Add HTTP status codes",
                                "bodyHTML": "<p dir=\"auto\"><em><a href=\"https://code.google.com/p/guava-libraries/issues/detail?id=927\" rel=\"nofollow\">Original issue</a> created by <strong>electrum</strong> on 2012-03-09 at 07:58 PM</em></p>\n<hr>\n<p dir=\"auto\">The new HttpHeaders and MediaType classes are great!  Can we get a similar HttpStatusCodes class?  The JAX-RS Response.Status class could be a good starting point.</p>",
                                "resourcePath": "/google/guava/issues/927",
                                "createdAt": "2014-10-31T17:29:04Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=net" } },
                                        { "node": { "name": "type=addition" } },
                                        {
                                            "node": {
                                                "name": "status=research"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "MOE Sync 2020-12-10",
                "url": "https://github.com/google/guava/pull/5352",
                "resourcePath": "/google/guava/pull/5352",
                "createdAt": "2020-12-10T15:21:40Z",
                "number": 5352,
                "mergeCommit": {
                    "oid": "fbbec2bf00619d88b83e4a5a3fd007765c08a172",
                    "message": "Fix `relativePath` warning for guava-bom.\n\nFixes #3945.\nCloses #5349.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=346096869",
                    "commitUrl": "https://github.com/google/guava/commit/fbbec2bf00619d88b83e4a5a3fd007765c08a172",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "7e01b017e1dff7c0005748d7139c8d96a5d69206",
                                "message": "First step in cleaning up PSL handling. Next stage will be to change the template to store the trie string as a separate static constant, so that I can write a unit test that verifies that.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345716528"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-bom/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/thirdparty/publicsuffix/PublicSuffixType.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-bom/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/thirdparty/publicsuffix/PublicSuffixType.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTM2MDE0MDE2OmFhODBlMjM2YzYyNTFiN2E4ZmU1MjlhYmMzZDEwZTI2OTU5NGJhZjI=",
                                "url": "https://github.com/google/guava/pull/5352/commits/aa80e236c6251b7a8fe529abc3d10e269594baf2"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3945,
                                "url": "https://github.com/google/guava/issues/3945",
                                "title": "parent.relativePath'  points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent",
                                "bodyHTML": "<p dir=\"auto\">[WARNING]<br>\n[WARNING] Some problems were encountered while building the effective model for com.google.guava:guava-bom:pom:HEAD-jre-SNAPSHOT<br>\n[WARNING] 'parent.relativePath' of POM com.google.guava:guava-bom:HEAD-jre-SNAPSHOT (/home/elharo/guava/guava-bom/pom.xml) points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent, please verify your project structure @ line 14, column 11<br>\n[WARNING]<br>\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.<br>\n[WARNING]<br>\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.<br>\n[WARNING]</p>",
                                "resourcePath": "/google/guava/issues/3945",
                                "createdAt": "2020-06-29T13:04:18Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix compatibility between the cache compute methods and a load",
                "url": "https://github.com/google/guava/pull/5348",
                "resourcePath": "/google/guava/pull/5348",
                "createdAt": "2020-12-05T06:56:29Z",
                "number": 5348,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/cache/LocalCacheMapComputeTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/cache/LocalCache.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMyOTM0ODQwOmVkMWU4ZTQyZTVlODIxM2U2MDMwODE1NTkzNWM0M2I2ZjlkYjNhZjQ=",
                                "url": "https://github.com/google/guava/pull/5348/commits/ed1e8e42e5e8213e60308155935c43b6f9db3af4"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 2827,
                                "url": "https://github.com/google/guava/issues/2827",
                                "title": "Cache load + compute methods are incompatible",
                                "bodyHTML": "<p dir=\"auto\">A <code class=\"notranslate\">Map.compute</code> may return <code class=\"notranslate\">null</code> to indicate the entry should be removed if present. The <code class=\"notranslate\">valueReference</code> is stored within the cache, allowing a subsequent <code class=\"notranslate\">LoadingCache.get</code> to wait on it. This results in <code class=\"notranslate\">LocalCache.waitForLoadingValue</code> to throw an <code class=\"notranslate\">InvalidCacheLoadException</code> with the message <code class=\"notranslate\">CacheLoader returned null for key</code>. Since the cache loader was not invoked, this message is incorrect and means the two methods cannot be used together, concurrently.</p>\n<p dir=\"auto\">The user expectation would be that the load proceeds by retrying the load if <code class=\"notranslate\">null</code> from a computation (but fails if from a cache loader). That may require using a sentinel value.</p>\n<p dir=\"auto\">You can checkout this <a href=\"https://github.com/ben-manes/caffeine/commit/764df3aac6aacb78a4fc5a2134f911fd60dfa9f9\">commit</a> and run <code class=\"notranslate\">MultiThreadedTest</code> using <code class=\"notranslate\">./gradlew slowGuavaTest</code>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Expected: is an empty collection\n     but: &lt;[Failed: key 15 on operation com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$3/841283083@91eee99\ncom.google.common.cache.CacheLoader$InvalidCacheLoadException: CacheLoader returned null for key 15.\n\tat com.google.common.cache.LocalCache$Segment.waitForLoadingValue(LocalCache.java:2321)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2206)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4147)\n\tat com.google.common.cache.LocalCache.getAll(LocalCache.java:4210)\n\tat com.google.common.cache.LocalCache$LocalLoadingCache.getAll(LocalCache.java:5154)\n\tat com.github.benmanes.caffeine.cache.testing.GuavaCacheFromContext$GuavaLoadingCache.getAll(GuavaCacheFromContext.java:422)\n\tat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$1(MultiThreadedTest.java:101)\n\tat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\"><pre><span class=\"pl-s1\">Expected</span>: <span class=\"pl-smi\">is</span> <span class=\"pl-s1\">an</span> <span class=\"pl-smi\">empty</span> <span class=\"pl-s1\">collection</span>\n     <span class=\"pl-s1\">but</span>: &lt;[<span class=\"pl-s1\">Failed</span>: <span class=\"pl-smi\">key</span> <span class=\"pl-c1\">15</span> <span class=\"pl-s1\">on</span> <span class=\"pl-s1\">operation</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest$$Lambda$3</span>/<span class=\"pl-c1\">841283083</span><span class=\"pl-c1\">@</span><span class=\"pl-c1\">91</span><span class=\"pl-c1\">eee99</span>\n<span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">CacheLoader$InvalidCacheLoadException</span>: <span class=\"pl-s1\">CacheLoader</span> <span class=\"pl-smi\">returned</span> <span class=\"pl-s1\">null</span> <span class=\"pl-s1\">for</span> <span class=\"pl-s1\">key</span> <span class=\"pl-c1\">15.</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-en\">waitForLoadingValue</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2321</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-s1\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2206</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4147</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4210</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$LocalLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">5154</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">GuavaCacheFromContext$GuavaLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">GuavaCacheFromContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">422</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest</span>.<span class=\"pl-en\">lambda$1</span>(<span class=\"pl-smi\">MultiThreadedTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">101</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">Threads$Thrasher</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">Threads</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">149</span>)</pre></div>",
                                "resourcePath": "/google/guava/issues/2827",
                                "createdAt": "2017-05-24T21:30:43Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=cache" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 5342,
                                "url": "https://github.com/google/guava/issues/5342",
                                "title": "Cache.asMap() interface makes it possible to map NULL values into the cache",
                                "bodyHTML": "<p dir=\"auto\">Through the <code class=\"notranslate\">asMap()</code> interface it is possible in certain situations to partially map NULL values into the <code class=\"notranslate\">Cache</code> which results in an unpredictable state. When using <code class=\"notranslate\">ConcurrentMap.compute</code> and <code class=\"notranslate\">ConcurrentMap.computeIfPresent</code> it possible to remap a previous value to null rather than removing it, which I think would be the expected behaviour here.</p>\n<p dir=\"auto\">Attached <a href=\"https://github.com/google/guava/files/5636058/CacheNullValueTest.java.zip\">CacheNullValueTest.java.zip</a> contains test cases that reproduces this problem, tested on 30.0-jre</p>",
                                "resourcePath": "/google/guava/issues/5342",
                                "createdAt": "2020-12-03T12:38:49Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=cache" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix assertion for `FilesTest.testCopyIdenticalFiles()`.",
                "url": "https://github.com/google/guava/pull/5386",
                "resourcePath": "/google/guava/pull/5386",
                "createdAt": "2021-01-19T17:43:27Z",
                "number": 5386,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/io/FilesTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/io/FilesTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU3NjAwMjE1OjIwZmVhZmY5MmUyMTYyZWI5MGM0ODM1OTEwZDBkMDE0YzZlOWE4NjI=",
                                "url": "https://github.com/google/guava/pull/5386/commits/20feaff92e2162eb90c4835910d0d014c6e9a862"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5381,
                                "url": "https://github.com/google/guava/issues/5381",
                                "title": "Small improvement in Files test (FilesTest.testCopyIdenticalFiles)",
                                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">In the following test</p>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/io/FilesTest.java#L192\">https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/io/FilesTest.java#L192</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void testCopyIdenticalFiles() throws IOException {\n    File temp1 = createTempFile();\n    Files.write(ASCII, temp1, Charsets.UTF_8);\n    File temp2 = createTempFile();\n    Files.write(ASCII, temp2, Charsets.UTF_8);\n    Files.copy(temp1, temp2);\n    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\n  }\"><pre class=\"notranslate\"><code>public void testCopyIdenticalFiles() throws IOException {\n    File temp1 = createTempFile();\n    Files.write(ASCII, temp1, Charsets.UTF_8);\n    File temp2 = createTempFile();\n    Files.write(ASCII, temp2, Charsets.UTF_8);\n    Files.copy(temp1, temp2);\n    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\n  }\n</code></pre></div>\n<p dir=\"auto\">Wouldn't it be better to use <code class=\"notranslate\">temp2</code> in the final assert:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\"><pre class=\"notranslate\"><code>    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\n</code></pre></div>\n<p dir=\"auto\">=&gt;</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    assertEquals(ASCII, Files.toString(temp2, Charsets.UTF_8));\"><pre class=\"notranslate\"><code>    assertEquals(ASCII, Files.toString(temp2, Charsets.UTF_8));\n</code></pre></div>\n<p dir=\"auto\">Thanks,</p>",
                                "resourcePath": "/google/guava/issues/5381",
                                "createdAt": "2021-01-16T11:10:13Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "status=fixed" } },
                                        { "node": { "name": "package=io" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix compatibility between the cache compute methods and a load.",
                "url": "https://github.com/google/guava/pull/5406",
                "resourcePath": "/google/guava/pull/5406",
                "createdAt": "2021-02-12T15:47:18Z",
                "number": 5406,
                "mergeCommit": {
                    "oid": "42bf4f4eb7d299d635838296e322ec7e1e77a440",
                    "message": "Fix compatibility between the cache compute methods and a load.\n\nFixes #5348\nFixes #5342\nFixes #2827\nResolves underlying cause of #2108\n\nRELNOTES=Fix compatibility between the cache compute methods and a load.\nPiperOrigin-RevId: 357192480",
                    "commitUrl": "https://github.com/google/guava/commit/42bf4f4eb7d299d635838296e322ec7e1e77a440",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "7c566b5f6d4f5eb5f780152e80ba69e0ea4f9036",
                                "message": "Assign or use the result of a primitive wrapper method invocation (it will soon be an ERROR to ignore it).\n\nRELNOTES=N/A\nPiperOrigin-RevId: 356761994"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 2827,
                                "url": "https://github.com/google/guava/issues/2827",
                                "title": "Cache load + compute methods are incompatible",
                                "bodyHTML": "<p dir=\"auto\">A <code class=\"notranslate\">Map.compute</code> may return <code class=\"notranslate\">null</code> to indicate the entry should be removed if present. The <code class=\"notranslate\">valueReference</code> is stored within the cache, allowing a subsequent <code class=\"notranslate\">LoadingCache.get</code> to wait on it. This results in <code class=\"notranslate\">LocalCache.waitForLoadingValue</code> to throw an <code class=\"notranslate\">InvalidCacheLoadException</code> with the message <code class=\"notranslate\">CacheLoader returned null for key</code>. Since the cache loader was not invoked, this message is incorrect and means the two methods cannot be used together, concurrently.</p>\n<p dir=\"auto\">The user expectation would be that the load proceeds by retrying the load if <code class=\"notranslate\">null</code> from a computation (but fails if from a cache loader). That may require using a sentinel value.</p>\n<p dir=\"auto\">You can checkout this <a href=\"https://github.com/ben-manes/caffeine/commit/764df3aac6aacb78a4fc5a2134f911fd60dfa9f9\">commit</a> and run <code class=\"notranslate\">MultiThreadedTest</code> using <code class=\"notranslate\">./gradlew slowGuavaTest</code>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Expected: is an empty collection\n     but: &lt;[Failed: key 15 on operation com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$3/841283083@91eee99\ncom.google.common.cache.CacheLoader$InvalidCacheLoadException: CacheLoader returned null for key 15.\n\tat com.google.common.cache.LocalCache$Segment.waitForLoadingValue(LocalCache.java:2321)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2206)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4147)\n\tat com.google.common.cache.LocalCache.getAll(LocalCache.java:4210)\n\tat com.google.common.cache.LocalCache$LocalLoadingCache.getAll(LocalCache.java:5154)\n\tat com.github.benmanes.caffeine.cache.testing.GuavaCacheFromContext$GuavaLoadingCache.getAll(GuavaCacheFromContext.java:422)\n\tat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$1(MultiThreadedTest.java:101)\n\tat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\"><pre><span class=\"pl-s1\">Expected</span>: <span class=\"pl-smi\">is</span> <span class=\"pl-s1\">an</span> <span class=\"pl-smi\">empty</span> <span class=\"pl-s1\">collection</span>\n     <span class=\"pl-s1\">but</span>: &lt;[<span class=\"pl-s1\">Failed</span>: <span class=\"pl-smi\">key</span> <span class=\"pl-c1\">15</span> <span class=\"pl-s1\">on</span> <span class=\"pl-s1\">operation</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest$$Lambda$3</span>/<span class=\"pl-c1\">841283083</span><span class=\"pl-c1\">@</span><span class=\"pl-c1\">91</span><span class=\"pl-c1\">eee99</span>\n<span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">CacheLoader$InvalidCacheLoadException</span>: <span class=\"pl-s1\">CacheLoader</span> <span class=\"pl-smi\">returned</span> <span class=\"pl-s1\">null</span> <span class=\"pl-s1\">for</span> <span class=\"pl-s1\">key</span> <span class=\"pl-c1\">15.</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-en\">waitForLoadingValue</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2321</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-s1\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2206</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4147</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4210</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$LocalLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">5154</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">GuavaCacheFromContext$GuavaLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">GuavaCacheFromContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">422</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest</span>.<span class=\"pl-en\">lambda$1</span>(<span class=\"pl-smi\">MultiThreadedTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">101</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">Threads$Thrasher</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">Threads</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">149</span>)</pre></div>",
                                "resourcePath": "/google/guava/issues/2827",
                                "createdAt": "2017-05-24T21:30:43Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=cache" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 5342,
                                "url": "https://github.com/google/guava/issues/5342",
                                "title": "Cache.asMap() interface makes it possible to map NULL values into the cache",
                                "bodyHTML": "<p dir=\"auto\">Through the <code class=\"notranslate\">asMap()</code> interface it is possible in certain situations to partially map NULL values into the <code class=\"notranslate\">Cache</code> which results in an unpredictable state. When using <code class=\"notranslate\">ConcurrentMap.compute</code> and <code class=\"notranslate\">ConcurrentMap.computeIfPresent</code> it possible to remap a previous value to null rather than removing it, which I think would be the expected behaviour here.</p>\n<p dir=\"auto\">Attached <a href=\"https://github.com/google/guava/files/5636058/CacheNullValueTest.java.zip\">CacheNullValueTest.java.zip</a> contains test cases that reproduces this problem, tested on 30.0-jre</p>",
                                "resourcePath": "/google/guava/issues/5342",
                                "createdAt": "2020-12-03T12:38:49Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=cache" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Set `-source 8 -target 8` in the open-source build, and remove Java8Usage.",
                "url": "https://github.com/google/guava/pull/5444",
                "resourcePath": "/google/guava/pull/5444",
                "createdAt": "2021-03-23T18:45:02Z",
                "number": 5444,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "android/guava/src/com/google/common/base/Java8Usage.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/base/Preconditions.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "DELETED",
                                "path": "guava/src/com/google/common/base/Java8Usage.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/base/Preconditions.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTk5MDk3MTcyOmQ3MDU4YTQ1OWU1MGIxYWYxMDIwMjAyYjg0NmY5ZmJmMjdlN2JlYjU=",
                                "url": "https://github.com/google/guava/pull/5444/commits/d7058a459e50b1af1020202b846f9fbf27e7beb5"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5269,
                                "url": "https://github.com/google/guava/issues/5269",
                                "title": "Build Android flavor with `-source 8 -target 8` (but still avoid Java 7+ APIs)",
                                "bodyHTML": "<p dir=\"auto\">Currently, our \"Android\" flavor of Guava supports 2 use cases:</p>\n<ul dir=\"auto\">\n<li>Android users (API level 15 (Ice Cream Sandwich) and up)</li>\n<li>Java 7 users</li>\n</ul>\n<p dir=\"auto\">We are definitely <em>not</em> going to start using Java 8 <em>APIs</em>. Thus, we are <em>not</em> going to increase our minimum Android version to 24, nor are we going to require our users to enable <a href=\"https://developer.android.com/studio/write/java8-support-table\" rel=\"nofollow\">library desugaring</a>. In short: We'll continue to support older versions of Android with no changes on users' part.</p>\n<p dir=\"auto\">However, we <em>are</em> investigating whether to stop supporting <em>non</em>-Android users who use Java 7. This would let us simplify some implementations (mainly by using lambdas), but more importantly, it would let us make some API improvements -- like <code class=\"notranslate\">default</code> methods on interfaces and type annotations (such as for nullness).</p>\n<p dir=\"auto\">This is part of a larger effort by many Google projects to consider dropping support for Java 7. Please let us know if you anticipate problems from this change -- mainly, if you are using Guava in your library or app and you support Java 7. Thanks.</p>\n<p dir=\"auto\">(Please also spread the word. I will additionally <a href=\"https://groups.google.com/g/guava-announce/c/EIMDZF4dIdY\" rel=\"nofollow\">announce this on our mailing list</a>. Later, we may also try to introduce some warnings when Guava is run under Java 7.)</p>",
                                "resourcePath": "/google/guava/issues/5269",
                                "createdAt": "2020-10-09T14:21:18Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=other" } },
                                        {
                                            "node": {
                                                "name": "package=general"
                                            }
                                        },
                                        {
                                            "node": { "name": "platform=java8" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Mark `Abstract*.delegate` methods in `graph` as package-private.",
                "url": "https://github.com/google/guava/pull/5452",
                "resourcePath": "/google/guava/pull/5452",
                "createdAt": "2021-03-29T17:12:02Z",
                "number": 5452,
                "mergeCommit": {
                    "oid": "98d35bc16ff8efd5404d8f8b493ba4bca0f59b63",
                    "message": "Mark `Abstract*.delegate` methods in `graph` as package-private.\n\nThe method was exposing the package-private `BaseGraph` type through the public type `ImmutableGraph`.\n\n(But it was exposing it only as `protected`, and no one could subclass `ImmutableGraph` outside the package. So this should be mostly academic.)\n\nFixes https://github.com/google/guava/issues/5450\n\nRELNOTES=n/a\nPiperOrigin-RevId: 365607207",
                    "commitUrl": "https://github.com/google/guava/commit/98d35bc16ff8efd5404d8f8b493ba4bca0f59b63",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "018796b79b314b5b7790c9320c1a7c89140af76d",
                                "message": "Update Public Suffix data.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 364934301"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/graph/ForwardingValueGraph.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/graph/Graphs.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/graph/ImmutableGraph.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/graph/StandardMutableGraph.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/graph/ForwardingGraph.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/graph/ForwardingNetwork.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/graph/ForwardingValueGraph.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/graph/Graphs.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/graph/ImmutableGraph.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/graph/StandardMutableGraph.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjAyOTQ2NzExOjk4ZDM1YmMxNmZmOGVmZDU0MDRkOGY4YjQ5M2JhNGJjYTBmNTliNjM=",
                                "url": "https://github.com/google/guava/pull/5452/commits/98d35bc16ff8efd5404d8f8b493ba4bca0f59b63"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5450,
                                "url": "https://github.com/google/guava/issues/5450",
                                "title": "ImmutableGraph.delegate() exposes package-private BaseGraph",
                                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">com.google.common.graph.ImmutableGraph</code> inherits and overrides the method <code class=\"notranslate\">delegate()</code> which returns the package-private type <code class=\"notranslate\">BaseGraph</code>:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/018796b79b314b5b7790c9320c1a7c89140af76d/guava/src/com/google/common/graph/ImmutableGraph.java#L103\">guava/guava/src/com/google/common/graph/ImmutableGraph.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 103\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/018796b79b314b5b7790c9320c1a7c89140af76d\">018796b</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L103\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"103\"></td>\n          <td id=\"LC103\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">BaseGraph</span>&lt;<span class=\"pl-smi\">N</span>&gt; <span class=\"pl-en\">delegate</span>() { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It looks like the method is only used within the same package, so this could be fixed by making both <code class=\"notranslate\">ForwardingGraph.delegate()</code> and <code class=\"notranslate\">ImmutableGraph.delegate()</code> package-private.</p>",
                                "resourcePath": "/google/guava/issues/5450",
                                "createdAt": "2021-03-29T16:01:54Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "package=graph" } },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix a rounding bug in `UnsignedLong.doubleValue()` and `.floatValue()`.",
                "url": "https://github.com/google/guava/pull/5490",
                "resourcePath": "/google/guava/pull/5490",
                "createdAt": "2021-04-14T00:32:46Z",
                "number": 5490,
                "mergeCommit": {
                    "oid": "e61cf2e8d76eb4f7b6bb457cb0e964667de773a7",
                    "message": "Fix a rounding bug in `UnsignedLong.doubleValue()` and `.floatValue()`.\n\nSee the bug report for a detailed analysis.\n\nFixes https://github.com/google/guava/issues/5375. Thanks to @harpocrates (Alex Theriault) for the bug report and suggested fix.\n\nRELNOTES=Fixed a rounding bug in `UnsignedLong.doubleValue()`.\nPiperOrigin-RevId: 368332108",
                    "commitUrl": "https://github.com/google/guava/commit/e61cf2e8d76eb4f7b6bb457cb0e964667de773a7",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "1054847679c75c0688369ec93c9d845affa7a762",
                                "message": "Fix comment in Converter.\n\nConverter.apply is annotated as returning null, so it's sound. The LegacyConverter problem arises only if users view the converter as a Function<A, B>, since Function<A, B>.apply is *not* annotated as returning null (and yet a LegacyConverter may do so, even given a non-null input).\n\nRELNOTES=n/a\nPiperOrigin-RevId: 368219982"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5375,
                                "url": "https://github.com/google/guava/issues/5375",
                                "title": "UnsignedLong to double conversion does not always round correctly",
                                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">UnsignedLong.doubleValue</code> method claims to convert <code class=\"notranslate\">long</code> to <code class=\"notranslate\">double</code> with correct rounding. Assuming \"correct rounding\" means produces the <code class=\"notranslate\">double</code> whose real value is the closest to the real value of the <code class=\"notranslate\">long</code>, here is a counter example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"double guavaDouble = UnsignedLong.fromLongBits(0xfffffffffffff402L).doubleValue();\nSystem.out.println(&quot;Original:      &quot; + java.lang.Long.toUnsignedString(0xfffffffffffff402L));\nSystem.out.println(&quot;Guava double:  &quot; + new java.math.BigDecimal(guavaDouble));\nSystem.out.println(&quot;Closer double: &quot; + new java.math.BigDecimal(18446744073709549568d));\"><pre><span class=\"pl-smi\">double</span> <span class=\"pl-s1\">guavaDouble</span> = <span class=\"pl-s1\">UnsignedLong</span>.<span class=\"pl-en\">fromLongBits</span>(<span class=\"pl-c1\">0xfffffffffffff402L</span>).<span class=\"pl-en\">doubleValue</span>();\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Original:      \"</span> + <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">Long</span>.<span class=\"pl-en\">toUnsignedString</span>(<span class=\"pl-c1\">0xfffffffffffff402L</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Guava double:  \"</span> + <span class=\"pl-k\">new</span> <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">math</span>.<span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-s1\">guavaDouble</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Closer double: \"</span> + <span class=\"pl-k\">new</span> <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">math</span>.<span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-c1\">18446744073709549568d</span>));</pre></div>\n<p dir=\"auto\">This outputs</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Original:      18446744073709548546\nGuava double:  18446744073709547520\nCloser double: 18446744073709549568\"><pre class=\"notranslate\"><code>Original:      18446744073709548546\nGuava double:  18446744073709547520\nCloser double: 18446744073709549568\n</code></pre></div>\n<p dir=\"auto\">The double that Guava produces is 26 away from the original value, but there was a closer double only 22 away from the original value. (There are no closer values - <code class=\"notranslate\">18446744073709547520</code> and <code class=\"notranslate\">18446744073709549568</code> are successive doubles: <code class=\"notranslate\">Math.nextAfter(18446744073709547520d, java.lang.Double.MAX_VALUE) == 18446744073709549568d</code>)</p>\n<hr>\n<p dir=\"auto\">Assuming this isn't desired behaviour, <code class=\"notranslate\">UnsignedLong.doubleValue</code> could be fixed by using the following implementation (<a href=\"https://github.com/WebAssembly/spec/blob/5475b7015684a07ba69762f8438e3bcff2647686/interpreter/exec/f64_convert.ml#L27-L32\">based on the reference WebAssembly interpreter's implementation of the <code class=\"notranslate\">f64.convert_i64_u</code> instruction</a>). Here, the rounding is to the nearest double, with ties going to even.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Override\npublic double doubleValue() {\n  if (value &gt;= 0) {\n    @SuppressWarnings(&quot;cast&quot;)\n    return (double) value;\n  } else {\n    @SuppressWarnings(&quot;cast&quot;)\n    return (double) ((value &gt;&gt;&gt; 1) | (value &amp; 1L)) * 2.0;\n  }\n}\"><pre><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">double</span> <span class=\"pl-s1\">doubleValue</span>() {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">value</span> &gt;= <span class=\"pl-c1\">0</span>) {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"cast\"</span>)\n    <span class=\"pl-smi\">return</span> (<span class=\"pl-smi\">double</span>) <span class=\"pl-s1\">value</span>;\n  } <span class=\"pl-k\">else</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"cast\"</span>)\n    <span class=\"pl-smi\">return</span> (<span class=\"pl-smi\">double</span>) ((<span class=\"pl-s1\">value</span> &gt;&gt;&gt; <span class=\"pl-c1\">1</span>) | (<span class=\"pl-s1\">value</span> &amp; <span class=\"pl-c1\">1L</span>)) * <span class=\"pl-c1\">2.0</span>;\n  }\n}</pre></div>",
                                "resourcePath": "/google/guava/issues/5375",
                                "createdAt": "2020-12-31T17:29:14Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        {
                                            "node": {
                                                "name": "package=primitives"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove `@Beta` from `EventBus` and related classes.",
                "url": "https://github.com/google/guava/pull/5515",
                "resourcePath": "/google/guava/pull/5515",
                "createdAt": "2021-04-19T20:12:10Z",
                "number": 5515,
                "mergeCommit": {
                    "oid": "781ac8a447256fe0185ffdecd0fc993bbf84889f",
                    "message": "Remove `@Beta` from `EventBus` and related classes.\n\nNote that we're primarily removing this because we do not intend to make further changes to the package, and we're discouraging its use. (See https://github.com/google/guava/commit/82a3ecf42cf63f2ea4db5c605d80c4478d8877ae.) We're not going to actually `@Deprecate` it, though, because that would be unnecessarily disruptive especially given that migrating to another solution is not necessarily straightforward.\n\nFixes https://github.com/google/guava/issues/3360.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369293158",
                    "commitUrl": "https://github.com/google/guava/commit/781ac8a447256fe0185ffdecd0fc993bbf84889f",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "48b72fca2af117c3282e185407e2484f75aba2b2",
                                "message": "Fix exception message in `CacheBuilderSpec`.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369289369"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3360,
                                "url": "https://github.com/google/guava/issues/3360",
                                "title": "Remove @Beta from EventBus",
                                "bodyHTML": "<p dir=\"auto\">EventBus has been marked as Beta for 8 years already (since Jul 25, 2011).</p>",
                                "resourcePath": "/google/guava/issues/3360",
                                "createdAt": "2019-01-07T12:57:16Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "status=fixed" } },
                                        {
                                            "node": {
                                                "name": "package=eventbus"
                                            }
                                        },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Delete the `FileBackedOutputStream` temp file if writing to it fails.",
                "url": "https://github.com/google/guava/pull/5519",
                "resourcePath": "/google/guava/pull/5519",
                "createdAt": "2021-04-20T13:29:06Z",
                "number": 5519,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/io/FileBackedOutputStream.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/io/FileBackedOutputStream.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE5MzI3MDc1OjRlOTQwYTI1MDFmNTIyNzQ3NjA2MmRlZDBkMjgzODE0MjJkYzU4YzQ=",
                                "url": "https://github.com/google/guava/pull/5519/commits/4e940a2501f5227476062ded0d28381422dc58c4"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 1664,
                                "url": "https://github.com/google/guava/issues/1664",
                                "title": "com.google.common.io.FileBackedOutputStream.update resource leak",
                                "bodyHTML": "<p dir=\"auto\"><em><a href=\"https://code.google.com/p/guava-libraries/issues/detail?id=1664\" rel=\"nofollow\">Original issue</a> created by <strong>cherio</strong> on 2014-02-11 at 03:19 AM</em></p>\n<hr>\n<p dir=\"auto\">FileBackedOutputStream.update(int) method creates a temporary file. When resetOnFinalize=false then the next line is trying to create FileOutputStream. In case it fails (e.g. disk is full, or for some other reason) the file will remain in the file system as litter. This is a resource leak.</p>\n<p dir=\"auto\">Temporary file management in this case should be a subject for try{...}catch{...}.</p>\n<p dir=\"auto\">It may also be a good idea to try and delete the file (if not null) in close().</p>",
                                "resourcePath": "/google/guava/issues/1664",
                                "createdAt": "2014-10-31T17:54:48Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=io" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Clarify what \"different equivalence relations\" means.",
                "url": "https://github.com/google/guava/pull/5517",
                "resourcePath": "/google/guava/pull/5517",
                "createdAt": "2021-04-19T21:13:39Z",
                "number": 5517,
                "mergeCommit": {
                    "oid": "12a3d4fd4a36f02daad88e057f7b153a3c083982",
                    "message": "Clarify what \"different equivalence relations\" means.\n\nFixes https://github.com/google/guava/issues/3808.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369303576",
                    "commitUrl": "https://github.com/google/guava/commit/12a3d4fd4a36f02daad88e057f7b153a3c083982",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "6f764671680d56b264dee6ab32e18420b6465398",
                                "message": "Fix typo.\n\nhttps://github.com/google/guava/pull/5502#discussion_r616031995\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369302184"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3808,
                                "url": "https://github.com/google/guava/issues/3808",
                                "title": "Some methods' description of behavior for different equivalence relations is unclear",
                                "bodyHTML": "<p dir=\"auto\">Some methods dealing with Sets declare that their results are undefined when passing Sets that are based on different equivalence relations, and give HashSet as an example. Unless I'm missing something, I believe that HashSet is not an example of this and should be removed from the examples (TreeSet and the keySet of IdentityHashMap are, however, examples of Sets using different equivalence relations.)</p>\n<p dir=\"auto\">An example from Sets.java:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/87a383e06a30c89e1e07689c2ea7a005a1379743/guava/src/com/google/common/collect/Sets.java#L721-L723\">guava/guava/src/com/google/common/collect/Sets.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 721 to 723\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/87a383e06a30c89e1e07689c2ea7a005a1379743\">87a383e</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L721\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"721\"></td>\n          <td id=\"LC721\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">   * &lt;p&gt;Results are undefined if {@code set1} and {@code set2} are sets based on different</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L722\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"722\"></td>\n          <td id=\"LC722\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">   * equivalence relations (as {@link HashSet}, {@link TreeSet}, and the {@link Map#keySet} of an</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L723\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"723\"></td>\n          <td id=\"LC723\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">   * {@code IdentityHashMap} all are).</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                                "resourcePath": "/google/guava/issues/3808",
                                "createdAt": "2020-02-25T22:39:17Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=api-docs" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Make `MoreFiles.deleteRecursively()` throw `NoSuchFileException` when the `path` argument itself doesn't exist.",
                "url": "https://github.com/google/guava/pull/5521",
                "resourcePath": "/google/guava/pull/5521",
                "createdAt": "2021-04-20T19:57:27Z",
                "number": 5521,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/io/MoreFilesTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/io/MoreFiles.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE5NjM4OTI4OmIxYTg2Nzk3ZTEwZDE4YTU5YWQyYTZhM2ZiMjA5MDBkMmViYjk2ZmQ=",
                                "url": "https://github.com/google/guava/pull/5521/commits/b1a86797e10d18a59ad2a6a3fb20900d2ebb96fd"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3203,
                                "url": "https://github.com/google/guava/issues/3203",
                                "title": "MoreFiles.deleteRecursively() doesn't throw NoSuchFileException if the given path doesn't exist",
                                "bodyHTML": "<p dir=\"auto\">Instead, it throws a <code class=\"notranslate\">FileSystemException</code> with a <code class=\"notranslate\">NoSuchFileException</code> suppressed, making it impossible to distinguish \"the root path doesn't exist\" from \"impossible to delete one of the children of the root path\". That would be the way to implement \"deleteRecursivelyIfExists\" kind of operation, atomic with regard to the root existence:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"try {\n  MoreFiles.deleteRecursively(path);\n} catch (NoSuchFileException e) {\n  // ignore\n}\"><pre><span class=\"pl-k\">try</span> {\n  <span class=\"pl-s1\">MoreFiles</span>.<span class=\"pl-en\">deleteRecursively</span>(<span class=\"pl-s1\">path</span>);\n} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">NoSuchFileException</span> <span class=\"pl-s1\">e</span>) {\n  <span class=\"pl-c\">// ignore</span>\n}</pre></div>\n<p dir=\"auto\">BTW, it's not obvious what does <em>(optional specific exception)</em> construction mean in Javadocs, and I didn't find the definition or elaboration of this construction.</p>",
                                "resourcePath": "/google/guava/issues/3203",
                                "createdAt": "2018-07-13T13:59:22Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "package=io" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Update pom.xml CI info.",
                "url": "https://github.com/google/guava/pull/5564",
                "resourcePath": "/google/guava/pull/5564",
                "createdAt": "2021-05-18T16:32:31Z",
                "number": 5564,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2OTE0MjM1OjczNzhmN2RlNDI1NDE4NDEzMmFmMDdlNGM1OGIwMjZjYWNiNjVjZjI=",
                                "url": "https://github.com/google/guava/pull/5564/commits/7378f7de4254184132af07e4c58b026cacb65cf2"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5558,
                                "url": "https://github.com/google/guava/issues/5558",
                                "title": "`pom.xml` should refer to GitHub Actions rather than Travis CI",
                                "bodyHTML": "<p dir=\"auto\">Currently in file <code class=\"notranslate\">pom.xml</code>, it has the following section:</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &lt;ciManagement&gt;\n    &lt;system&gt;Travis CI&lt;/system&gt;\n    &lt;url&gt;https://travis-ci.org/google/guava&lt;/url&gt;\n  &lt;/ciManagement&gt;\"><pre>  &lt;<span class=\"pl-ent\">ciManagement</span>&gt;\n    &lt;<span class=\"pl-ent\">system</span>&gt;Travis CI&lt;/<span class=\"pl-ent\">system</span>&gt;\n    &lt;<span class=\"pl-ent\">url</span>&gt;https://travis-ci.org/google/guava&lt;/<span class=\"pl-ent\">url</span>&gt;\n  &lt;/<span class=\"pl-ent\">ciManagement</span>&gt;</pre></div>\n<p dir=\"auto\">It should probably be changed to GitHub Actions now.</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &lt;ciManagement&gt;\n    &lt;system&gt;GitHub Actions&lt;/system&gt;\n    &lt;url&gt;https://github.com/google/guava/actions&lt;/url&gt;\n  &lt;/ciManagement&gt;\"><pre>  &lt;<span class=\"pl-ent\">ciManagement</span>&gt;\n    &lt;<span class=\"pl-ent\">system</span>&gt;GitHub Actions&lt;/<span class=\"pl-ent\">system</span>&gt;\n    &lt;<span class=\"pl-ent\">url</span>&gt;https://github.com/google/guava/actions&lt;/<span class=\"pl-ent\">url</span>&gt;\n  &lt;/<span class=\"pl-ent\">ciManagement</span>&gt;</pre></div>",
                                "resourcePath": "/google/guava/issues/5558",
                                "createdAt": "2021-05-15T16:01:33Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=general"
                                            }
                                        },
                                        {
                                            "node": {
                                                "name": "type=documentation"
                                            }
                                        },
                                        {
                                            "node": {
                                                "name": "status=in-progress"
                                            }
                                        },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove `@Beta` from `Interner` and `Interners`.",
                "url": "https://github.com/google/guava/pull/5603",
                "resourcePath": "/google/guava/pull/5603",
                "createdAt": "2021-06-14T22:11:45Z",
                "number": 5603,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5594,
                                "url": "https://github.com/google/guava/issues/5594",
                                "title": "Remove @Beta from Interners",
                                "bodyHTML": "<p dir=\"auto\">Interning has been part of Guava for quite some time and in my experience pretty stable.</p>\n<p dir=\"auto\">Can the <code class=\"notranslate\">@Beta</code>  be removed from this component?</p>",
                                "resourcePath": "/google/guava/issues/5594",
                                "createdAt": "2021-06-07T07:35:19Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Add an explicit project URL to Guava's main `pom.xml`.",
                "url": "https://github.com/google/guava/pull/5620",
                "resourcePath": "/google/guava/pull/5620",
                "createdAt": "2021-06-21T15:12:22Z",
                "number": 5620,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5618,
                                "url": "https://github.com/google/guava/issues/5618",
                                "title": "wrong url in pom file",
                                "bodyHTML": "<p dir=\"auto\">guava does not define a project URL in the pom file. In that case, maven inherits the value of the parent pom and appends the artifact id (see <a href=\"https://maven.apache.org/ref/3.6.1/maven-model-builder/\" rel=\"nofollow\">maven documentation</a>).<br>\nBy that maven resolves the URL to <a href=\"https://github.com/google/guava/guava\">https://github.com/google/guava/guava</a>, which does not exist.</p>\n<h2 dir=\"auto\">Suggested Solution</h2>\n<p dir=\"auto\">Add an URL tag to <code class=\"notranslate\">guava/pom.xml</code></p>",
                                "resourcePath": "/google/guava/issues/5618",
                                "createdAt": "2021-06-21T07:10:23Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Added url to guava pom",
                "url": "https://github.com/google/guava/pull/5619",
                "resourcePath": "/google/guava/pull/5619",
                "createdAt": "2021-06-21T07:12:05Z",
                "number": 5619,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc0Mjg0NzMzOjE2NTc4YjQ4MTljNmRlMDZmZGIwMWNlZjg1YThmZDZlYjA0NDhjNDk=",
                                "url": "https://github.com/google/guava/pull/5619/commits/16578b4819c6de06fdb01cef85a8fd6eb0448c49"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5618,
                                "url": "https://github.com/google/guava/issues/5618",
                                "title": "wrong url in pom file",
                                "bodyHTML": "<p dir=\"auto\">guava does not define a project URL in the pom file. In that case, maven inherits the value of the parent pom and appends the artifact id (see <a href=\"https://maven.apache.org/ref/3.6.1/maven-model-builder/\" rel=\"nofollow\">maven documentation</a>).<br>\nBy that maven resolves the URL to <a href=\"https://github.com/google/guava/guava\">https://github.com/google/guava/guava</a>, which does not exist.</p>\n<h2 dir=\"auto\">Suggested Solution</h2>\n<p dir=\"auto\">Add an URL tag to <code class=\"notranslate\">guava/pom.xml</code></p>",
                                "resourcePath": "/google/guava/issues/5618",
                                "createdAt": "2021-06-21T07:10:23Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Deprecate buggy `murmur3_32` and introduce `murmur3_32_fixed`.",
                "url": "https://github.com/google/guava/pull/5657",
                "resourcePath": "/google/guava/pull/5657",
                "createdAt": "2021-07-26T21:06:42Z",
                "number": 5657,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/hash/HashFunctionEnum.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/hash/HashingTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/hash/Murmur3Hash32Test.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/hash/Hashing.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/hash/Murmur3_32HashFunction.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/hash/HashFunctionEnum.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/hash/HashingTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/hash/Murmur3Hash32Test.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/Hashing.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/Murmur3_32HashFunction.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njk3MzUyNzAyOjVlZjA0NzVmOWExMGUzNTAxNmYzMjNhYmZiYWIzNGQ2OTFhMjkyYTA=",
                                "url": "https://github.com/google/guava/pull/5657/commits/5ef0475f9a10e35016f323abfbab34d691a292a0"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5648,
                                "url": "https://github.com/google/guava/issues/5648",
                                "title": "Incorrect hash result from murmur3_32 with String input containing surrogate pairs",
                                "bodyHTML": "<p dir=\"auto\">Here is the test program comparing behavior of</p>\n<ul dir=\"auto\">\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashBytes(str.getBytes(encoding))</code></li>\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashString(str, encoding)</code></li>\n<li>Airlift's <code class=\"notranslate\">Murmur3Hash32.hash(str.getBytes(encoding))</code> (<a href=\"https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java\">https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java</a>)</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(&quot;plan ascii&quot;, &quot;BMP Piękna łąka w 東京都&quot;,  &quot;surrogate pair 💰&quot;)) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(&quot;airliftValue = &quot; + airliftValue);\n                System.out.println(&quot;guavaValue1  = &quot; + guavaValue1);\n                System.out.println(&quot;guavaValue2  = &quot; + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\"><pre class=\"notranslate\"><code>public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(\"plan ascii\", \"BMP Piękna łąka w 東京都\",  \"surrogate pair 💰\")) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(\"airliftValue = \" + airliftValue);\n                System.out.println(\"guavaValue1  = \" + guavaValue1);\n                System.out.println(\"guavaValue2  = \" + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Results when run with Guava <code class=\"notranslate\">30.1-jre</code> and Airlift Slice <code class=\"notranslate\">0.40</code>:</p>\n<p dir=\"auto\">Note that results agree except for the last case. I expect them to agree in all cases, especially between the two Guava alternative API methods.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair 💰, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair 💰, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\"><pre class=\"notranslate\"><code>string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair 💰, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair 💰, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\n</code></pre></div>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/losipiuk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/losipiuk\">@losipiuk</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wendigo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wendigo\">@wendigo</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/alexjo2144/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexjo2144\">@alexjo2144</a></p>",
                                "resourcePath": "/google/guava/issues/5648",
                                "createdAt": "2021-07-16T15:07:10Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "P4" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix murmur3_32 with UTF-8 encoding for input with non-BMP character",
                "url": "https://github.com/google/guava/pull/5649",
                "resourcePath": "/google/guava/pull/5649",
                "createdAt": "2021-07-16T17:32:27Z",
                "number": 5649,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/hash/Murmur3Hash32Test.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/Murmur3_32HashFunction.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjkxNjQ0Mzk0OjZhYzA5MDkyYTkyYjY0NmI5MjQ5MTRjZjg4OTg2ODcyNjIxNDJkNjg=",
                                "url": "https://github.com/google/guava/pull/5649/commits/6ac09092a92b646b924914cf8898687262142d68"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5648,
                                "url": "https://github.com/google/guava/issues/5648",
                                "title": "Incorrect hash result from murmur3_32 with String input containing surrogate pairs",
                                "bodyHTML": "<p dir=\"auto\">Here is the test program comparing behavior of</p>\n<ul dir=\"auto\">\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashBytes(str.getBytes(encoding))</code></li>\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashString(str, encoding)</code></li>\n<li>Airlift's <code class=\"notranslate\">Murmur3Hash32.hash(str.getBytes(encoding))</code> (<a href=\"https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java\">https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java</a>)</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(&quot;plan ascii&quot;, &quot;BMP Piękna łąka w 東京都&quot;,  &quot;surrogate pair 💰&quot;)) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(&quot;airliftValue = &quot; + airliftValue);\n                System.out.println(&quot;guavaValue1  = &quot; + guavaValue1);\n                System.out.println(&quot;guavaValue2  = &quot; + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\"><pre class=\"notranslate\"><code>public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(\"plan ascii\", \"BMP Piękna łąka w 東京都\",  \"surrogate pair 💰\")) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(\"airliftValue = \" + airliftValue);\n                System.out.println(\"guavaValue1  = \" + guavaValue1);\n                System.out.println(\"guavaValue2  = \" + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Results when run with Guava <code class=\"notranslate\">30.1-jre</code> and Airlift Slice <code class=\"notranslate\">0.40</code>:</p>\n<p dir=\"auto\">Note that results agree except for the last case. I expect them to agree in all cases, especially between the two Guava alternative API methods.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair 💰, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair 💰, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\"><pre class=\"notranslate\"><code>string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Piękna łąka w 東京都, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair 💰, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair 💰, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\n</code></pre></div>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/losipiuk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/losipiuk\">@losipiuk</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wendigo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wendigo\">@wendigo</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/alexjo2144/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexjo2144\">@alexjo2144</a></p>",
                                "resourcePath": "/google/guava/issues/5648",
                                "createdAt": "2021-07-16T15:07:10Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "P4" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix bug in `TopKSelector` call to `Arrays.sort`.",
                "url": "https://github.com/google/guava/pull/5696",
                "resourcePath": "/google/guava/pull/5696",
                "createdAt": "2021-08-26T16:53:41Z",
                "number": 5696,
                "mergeCommit": {
                    "oid": "f79d923a38734bb584707ed77a98fb6d84d2aa28",
                    "message": "Fix bug in `TopKSelector` call to `Arrays.sort`.\n\nFixes #5691\nFixes #5692\n\nRELNOTES=n/a\nPiperOrigin-RevId: 393150511",
                    "commitUrl": "https://github.com/google/guava/commit/f79d923a38734bb584707ed77a98fb6d84d2aa28",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "d2c202add26837e05a931bb281a65e9ea1f29f56",
                                "message": "Mention the dangers of minimization/optimization for EventBus users.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 392914141"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/collect/TopKSelectorTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/collect/TopKSelector.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/collect/TopKSelectorTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/TopKSelector.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIwNjg5Nzk5OmY3OWQ5MjNhMzg3MzRiYjU4NDcwN2VkNzdhOThmYjZkODRkMmFhMjg=",
                                "url": "https://github.com/google/guava/pull/5696/commits/f79d923a38734bb584707ed77a98fb6d84d2aa28"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5692,
                                "url": "https://github.com/google/guava/issues/5692",
                                "title": "TopKSelector is unstable when quicksort fallback to Arrays.sort.",
                                "bodyHTML": "<p dir=\"auto\">Related PR : <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"974581919\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/5691\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/guava/pull/5691/hovercard\" href=\"https://github.com/google/guava/pull/5691\">#5691</a><br>\nThe result of <code class=\"notranslate\">TopKSelector</code> may be wrong when <code class=\"notranslate\">trim()</code> is invoked and quiksort fallback to <code class=\"notranslate\">Arrasys.sort()</code>. Because <code class=\"notranslate\">Arrasys.sort()</code> is been used by mistake there.<br>\nFollowing test case can trigger this bug.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n    int n = 10000;\n    int k = 10000;\n    int testIteration = 10;\n    Random random = new Random(System.currentTimeMillis());\n    for (int iter = 0; iter &lt; testIteration; iter ++) {\n      // target array to be sorted using TopKSelector\n      List&lt;Integer&gt; target = new ArrayList&lt;&gt;();\n      for (int i = 0; i &lt; 9; i++) {\n        List&lt;Integer&gt; sortedArray = new ArrayList();\n        for (int j = 0; j &lt; n; j++) {\n          sortedArray.add(random.nextInt());\n        }\n        sortedArray.sort(Integer::compareTo);\n        target.addAll(sortedArray);\n      }\n\n      TopKSelector&lt;Integer&gt; top = TopKSelector.least(k, Integer::compareTo);\n      for (int value : target) {\n        top.offer(value);\n      }\n\n      target.sort(Integer::compareTo);\n      assertEquals(top.topK(), target.subList(0, k));\n    }\n  }\"><pre class=\"notranslate\"><code>{\n    int n = 10000;\n    int k = 10000;\n    int testIteration = 10;\n    Random random = new Random(System.currentTimeMillis());\n    for (int iter = 0; iter &lt; testIteration; iter ++) {\n      // target array to be sorted using TopKSelector\n      List&lt;Integer&gt; target = new ArrayList&lt;&gt;();\n      for (int i = 0; i &lt; 9; i++) {\n        List&lt;Integer&gt; sortedArray = new ArrayList();\n        for (int j = 0; j &lt; n; j++) {\n          sortedArray.add(random.nextInt());\n        }\n        sortedArray.sort(Integer::compareTo);\n        target.addAll(sortedArray);\n      }\n\n      TopKSelector&lt;Integer&gt; top = TopKSelector.least(k, Integer::compareTo);\n      for (int value : target) {\n        top.offer(value);\n      }\n\n      target.sort(Integer::compareTo);\n      assertEquals(top.topK(), target.subList(0, k));\n    }\n  }\n</code></pre></div>",
                                "resourcePath": "/google/guava/issues/5692",
                                "createdAt": "2021-08-19T12:31:15Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Reject non-ASCII digits in `HostAndPort` port numbers.",
                "url": "https://github.com/google/guava/pull/5685",
                "resourcePath": "/google/guava/pull/5685",
                "createdAt": "2021-08-12T16:40:27Z",
                "number": 5685,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/net/HostAndPortTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/net/InetAddressesTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/net/HostAndPort.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/net/InetAddresses.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/net/HostAndPortTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/net/InetAddressesTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/HostAndPort.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/InetAddresses.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzExMjMxNjUyOjYzNWJjMDQ0MTU0MzM3OTA4M2JlZTZhNzNjYTA4YzA5MzJiMDJjYzE=",
                                "url": "https://github.com/google/guava/pull/5685/commits/635bc0441543379083bee6a73ca08c0932b02cc1"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5681,
                                "url": "https://github.com/google/guava/issues/5681",
                                "title": "`HostAndPort.fromString(String)` parses non-ASCII ports",
                                "bodyHTML": "<p dir=\"auto\">The method <code class=\"notranslate\">HostAndPort.fromString(String)</code> parses non-ASCII ports due to its usage of <code class=\"notranslate\">Integer.parseInt</code>:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/2b6b844683e6ff63fc8ba676692cf636f74504fd/guava/src/com/google/common/net/HostAndPort.java#L195\">guava/guava/src/com/google/common/net/HostAndPort.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 195\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/2b6b844683e6ff63fc8ba676692cf636f74504fd\">2b6b844</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L195\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"195\"></td>\n          <td id=\"LC195\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">port</span> = <span class=\"pl-s1\">Integer</span>.<span class=\"pl-en\">parseInt</span>(<span class=\"pl-s1\">portString</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">For example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// 127.0.0.1:80\nSystem.out.println(HostAndPort.fromString(&quot;127.0.0.1:8\\u0660&quot;));\"><pre><span class=\"pl-c\">// 127.0.0.1:80</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">HostAndPort</span>.<span class=\"pl-en\">fromString</span>(<span class=\"pl-s\">\"127.0.0.1:8\\u0660\"</span>));</pre></div>\n<p dir=\"auto\">Whether that is the intended behavior depends on which RFC this method wants to comply with (if any). Though for example <a href=\"https://datatracker.ietf.org/doc/html/rfc3986#appendix-A\" rel=\"nofollow\">RFC 3986</a> specifying the URI syntax defines port as <code class=\"notranslate\">*DIGIT</code> (where <code class=\"notranslate\">DIGIT</code> is <code class=\"notranslate\">0</code>-<code class=\"notranslate\">9</code> as defined by <a href=\"https://datatracker.ietf.org/doc/html/rfc2234#section-6.1\" rel=\"nofollow\">RFC 2234</a>).<br>\nFor reference, Java's <code class=\"notranslate\">URI</code> class does not parse non-ASCII ports, but <code class=\"notranslate\">URL</code> does (violating <a href=\"https://datatracker.ietf.org/doc/html/rfc1738#section-5\" rel=\"nofollow\">RFC 1738</a>).</p>\n<p dir=\"auto\">(Possibly relevant for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"301964873\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3052\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3052/hovercard\" href=\"https://github.com/google/guava/issues/3052\">#3052</a>)</p>",
                                "resourcePath": "/google/guava/issues/5681",
                                "createdAt": "2021-08-10T04:18:25Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=net" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 5682,
                                "url": "https://github.com/google/guava/issues/5682",
                                "title": "`InetAddresses.forString(String)` parses non-ASCII decimals",
                                "bodyHTML": "<p dir=\"auto\">The method <code class=\"notranslate\">InetAddresses.forString(String)</code> parses non-ASCII decimals due to its usage of <code class=\"notranslate\">Character.digit(...)</code>.<br>\nFor example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// /127.0.0.1\nSystem.out.println(InetAddresses.forString(&quot;127.0.0.\\u0661&quot;));\n// /0:0:0:0:0:0:0:1\nSystem.out.println(InetAddresses.forString(&quot;0:0:0:0:0:0:0:\\u0661&quot;));\"><pre><span class=\"pl-c\">// /127.0.0.1</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">InetAddresses</span>.<span class=\"pl-en\">forString</span>(<span class=\"pl-s\">\"127.0.0.\\u0661\"</span>));\n<span class=\"pl-c\">// /0:0:0:0:0:0:0:1</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">InetAddresses</span>.<span class=\"pl-en\">forString</span>(<span class=\"pl-s\">\"0:0:0:0:0:0:0:\\u0661\"</span>));</pre></div>\n<p dir=\"auto\">While it appears there is no RFC which strictly specifies the syntax, related RFCs, such as <a href=\"https://datatracker.ietf.org/doc/html/rfc3986#appendix-A\" rel=\"nofollow\">RFC 3986</a> specifying the URI syntax, explicitly only allow ASCII <code class=\"notranslate\">0</code>-<code class=\"notranslate\">9</code> (respectively <code class=\"notranslate\">f</code> for IPv6).<br>\nAdditionally there is <a href=\"https://datatracker.ietf.org/doc/html/draft-main-ipaddr-text-rep-00#section-3\" rel=\"nofollow\">this draft</a> which also only permits ASCII digits.</p>\n<p dir=\"auto\">Note however, that Java's <code class=\"notranslate\">InetAddress.getByName(String)</code> does support non-ASCII digits as well, though it is not clear whether that is intended or just an oversight.</p>\n<p dir=\"auto\">(This issue might be relevant for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"425075724\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3417\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3417/hovercard\" href=\"https://github.com/google/guava/issues/3417\">#3417</a>)</p>",
                                "resourcePath": "/google/guava/issues/5682",
                                "createdAt": "2021-08-10T04:40:29Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=net" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Use a single Supplier instance inside a configured MultiMapBuilder",
                "url": "https://github.com/google/guava/pull/5676",
                "resourcePath": "/google/guava/pull/5676",
                "createdAt": "2021-08-09T11:08:28Z",
                "number": 5676,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/MultimapBuilder.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzA2NDI0ODMxOmU4ZmQ0YWNkZWNlNWM1NTU4MGVlNjYyZmM3N2E4NmQ2YTFkMzQ1NTY=",
                                "url": "https://github.com/google/guava/pull/5676/commits/e8fd4acdece5c55580ee662fc77a86d6a1d34556"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5673,
                                "url": "https://github.com/google/guava/issues/5673",
                                "title": "MultimapBuilder creates unnecessary objects",
                                "bodyHTML": "<p dir=\"auto\">Looking at high memory usage in one of our components, we noticed that for every MultiMap created by a MultimapBuilder, we have a Supplier too (in our case it is a HashSetSupplier, but it applies to other Suppliers too)</p>\n<p dir=\"auto\">the reason for that is that we do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  public static final MultimapBuilder.SetMultimapBuilder&lt;Object, Object&gt; RELATIONS_MAP_BUILDER = MultimapBuilder\n      .hashKeys(2)\n      .hashSetValues(1);\"><pre class=\"notranslate\"><code>  public static final MultimapBuilder.SetMultimapBuilder&lt;Object, Object&gt; RELATIONS_MAP_BUILDER = MultimapBuilder\n      .hashKeys(2)\n      .hashSetValues(1);\n</code></pre></div>\n<p dir=\"auto\">which in turn calls this Guava code</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public SetMultimapBuilder&lt;K0, Object&gt; hashSetValues(final int expectedValuesPerKey) {\n      checkNonnegative(expectedValuesPerKey, &quot;expectedValuesPerKey&quot;);\n      return new SetMultimapBuilder&lt;K0, Object&gt;() {\n        @Override\n        public &lt;K extends K0, V&gt; SetMultimap&lt;K, V&gt; build() {\n          return Multimaps.newSetMultimap(\n              MultimapBuilderWithKeys.this.&lt;K, V&gt;createMap(),\n              new HashSetSupplier&lt;V&gt;(expectedValuesPerKey));\n        }\n      };\n    }\"><pre class=\"notranslate\"><code>    public SetMultimapBuilder&lt;K0, Object&gt; hashSetValues(final int expectedValuesPerKey) {\n      checkNonnegative(expectedValuesPerKey, \"expectedValuesPerKey\");\n      return new SetMultimapBuilder&lt;K0, Object&gt;() {\n        @Override\n        public &lt;K extends K0, V&gt; SetMultimap&lt;K, V&gt; build() {\n          return Multimaps.newSetMultimap(\n              MultimapBuilderWithKeys.this.&lt;K, V&gt;createMap(),\n              new HashSetSupplier&lt;V&gt;(expectedValuesPerKey));\n        }\n      };\n    }\n</code></pre></div>\n<p dir=\"auto\">This creates a new <code class=\"notranslate\">hashSetSupplier</code> every time build is invoked.<br>\nThis looks incorrect to me, and the suppliers should be properties of the newly returned builder, shouldn't they?</p>",
                                "resourcePath": "/google/guava/issues/5673",
                                "createdAt": "2021-08-07T10:27:07Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        {
                                            "node": {
                                                "name": "type=performance"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Copy the `setUp` and `tearDown` from the parent builder to derived test suites.",
                "url": "https://github.com/google/guava/pull/5690",
                "resourcePath": "/google/guava/pull/5690",
                "createdAt": "2021-08-18T22:28:43Z",
                "number": 5690,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/ListTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/SetTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/SortedMapTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/SortedSetTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/google/MultisetTestSuiteBuilder.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/test/com/google/common/collect/testing/MapTestSuiteBuilderTests.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE1NDU3NzEzOjM3NTg2ZjZkNzY4MzM2ZmY1ZWRkNzA2YWYxMTg4Y2FkZTU2MjVhZTM=",
                                "url": "https://github.com/google/guava/pull/5690/commits/37586f6d768336ff5edd706af1188cade5625ae3"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5674,
                                "url": "https://github.com/google/guava/issues/5674",
                                "title": "collect.testing does not pass setUp/tearDown to derived tests",
                                "bodyHTML": "<p dir=\"auto\">When testing collections the supplied <code class=\"notranslate\">setUp</code> and <code class=\"notranslate\">tearDown</code> are not executed for derived suites such as keySet, values, and entrySet. I believe the expected behavior is to pass the parent's instances to the children, e.g. in <code class=\"notranslate\">MapTestSuiteBuilder</code></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/88b1bdcb613de9f985cf3f873b7eec0a2e13741b/guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java#L129-L135\">guava/guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 129 to 135\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/88b1bdcb613de9f985cf3f873b7eec0a2e13741b\">88b1bdc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L129\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"129\"></td>\n          <td id=\"LC129\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">derivedSuites</span>.<span class=\"pl-en\">add</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L130\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"130\"></td>\n          <td id=\"LC130\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">createDerivedEntrySetSuite</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L131\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"131\"></td>\n          <td id=\"LC131\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MapEntrySetGenerator</span>&lt;<span class=\"pl-smi\">K</span>, <span class=\"pl-smi\">V</span>&gt;(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getSubjectGenerator</span>())) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L132\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"132\"></td>\n          <td id=\"LC132\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">withFeatures</span>(<span class=\"pl-en\">computeEntrySetFeatures</span>(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getFeatures</span>())) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L133\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"133\"></td>\n          <td id=\"LC133\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">named</span>(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getName</span>() + <span class=\"pl-s\">\" entrySet\"</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L134\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"134\"></td>\n          <td id=\"LC134\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">suppressing</span>(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getSuppressedTests</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L135\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"135\"></td>\n          <td id=\"LC135\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">createTestSuite</span>()); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">For example, the below test has a generator that depends the call to <code class=\"notranslate\">setUp()</code> to initialize its state. This fails with an NPE when the derived tests are executed,</p>\n<details>\n<summary>\nCode sample\n<p dir=\"auto\">A test generator that depends the call to setUp() to initialize will fail with an NPE when the derived tests are executed\n</p></summary>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import static com.google.common.base.Preconditions.checkNotNull;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.atomic.AtomicReference;\n\nimport com.google.common.collect.testing.MapTestSuiteBuilder;\nimport com.google.common.collect.testing.TestStringMapGenerator;\nimport com.google.common.collect.testing.features.CollectionFeature;\nimport com.google.common.collect.testing.features.CollectionSize;\nimport com.google.common.collect.testing.features.MapFeature;\n\nimport junit.framework.Test;\nimport junit.framework.TestCase;\n\npublic final class MapTests extends TestCase {\n  public static Test suite() {\n    var generator = new MapGenerator();\n    return MapTestSuiteBuilder\n        .using(generator)\n        .named(&quot;HashMap&quot;)\n        .withFeatures(\n            MapFeature.GENERAL_PURPOSE,\n            MapFeature.ALLOWS_NULL_KEYS,\n            MapFeature.ALLOWS_NULL_VALUES,\n            MapFeature.ALLOWS_NULL_ENTRY_QUERIES,\n            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n            CollectionSize.ZERO)\n        .withSetUp(generator::setUp)\n        .withTearDown(generator::tearDown)\n        .createTestSuite();\n  }\n\n  static final class MapGenerator extends TestStringMapGenerator {\n    Map&lt;String, String&gt; map;\n\n    @Override\n    protected Map&lt;String, String&gt; create(Map.Entry&lt;String, String&gt;[] entries) {\n      checkNotNull(map, &quot;Map was not initialized&quot;);\n      map.clear();\n      for (var entry : entries) {\n        map.put(entry.getKey(), entry.getValue());\n      }\n      return map;\n    }\n\n    void setUp() {\n      map = new HashMap&lt;&gt;();\n    }\n\n    void tearDown() {\n      map = null;\n    }\n  }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">base</span>.<span class=\"pl-s1\">Preconditions</span>.<span class=\"pl-s1\">checkNotNull</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">HashMap</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Map</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">atomic</span>.<span class=\"pl-s1\">AtomicReference</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">MapTestSuiteBuilder</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">TestStringMapGenerator</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">features</span>.<span class=\"pl-s1\">CollectionFeature</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">features</span>.<span class=\"pl-s1\">CollectionSize</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">features</span>.<span class=\"pl-s1\">MapFeature</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">framework</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">framework</span>.<span class=\"pl-s1\">TestCase</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MapTests</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">TestCase</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Test</span> <span class=\"pl-en\">suite</span>() {\n    <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">generator</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MapGenerator</span>();\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">MapTestSuiteBuilder</span>\n        .<span class=\"pl-en\">using</span>(<span class=\"pl-s1\">generator</span>)\n        .<span class=\"pl-en\">named</span>(<span class=\"pl-s\">\"HashMap\"</span>)\n        .<span class=\"pl-en\">withFeatures</span>(\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">GENERAL_PURPOSE</span>,\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">ALLOWS_NULL_KEYS</span>,\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">ALLOWS_NULL_VALUES</span>,\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">ALLOWS_NULL_ENTRY_QUERIES</span>,\n            <span class=\"pl-smi\">CollectionFeature</span>.<span class=\"pl-c1\">SUPPORTS_ITERATOR_REMOVE</span>,\n            <span class=\"pl-smi\">CollectionSize</span>.<span class=\"pl-c1\">ZERO</span>)\n        .<span class=\"pl-en\">withSetUp</span>(<span class=\"pl-s1\">generator</span>::<span class=\"pl-s1\">setUp</span>)\n        .<span class=\"pl-en\">withTearDown</span>(<span class=\"pl-s1\">generator</span>::<span class=\"pl-s1\">tearDown</span>)\n        .<span class=\"pl-en\">createTestSuite</span>();\n  }\n\n  <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MapGenerator</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">TestStringMapGenerator</span> {\n    <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">map</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n    <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">create</span>(<span class=\"pl-smi\">Map</span>.<span class=\"pl-smi\">Entry</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;[] <span class=\"pl-s1\">entries</span>) {\n      <span class=\"pl-en\">checkNotNull</span>(<span class=\"pl-s1\">map</span>, <span class=\"pl-s\">\"Map was not initialized\"</span>);\n      <span class=\"pl-s1\">map</span>.<span class=\"pl-en\">clear</span>();\n      <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">entry</span> : <span class=\"pl-s1\">entries</span>) {\n        <span class=\"pl-s1\">map</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">getKey</span>(), <span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">getValue</span>());\n      }\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">map</span>;\n    }\n\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setUp</span>() {\n      <span class=\"pl-s1\">map</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HashMap</span>&lt;&gt;();\n    }\n\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">tearDown</span>() {\n      <span class=\"pl-s1\">map</span> = <span class=\"pl-c1\">null</span>;\n    }\n  }\n}</pre></div>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/378614/128649963-1b4367e3-45fa-4026-9489-f6afe8bf2c1e.png\"><img width=\"1680\" alt=\"Screen Shot 2021-08-08 at 5 15 00 PM\" src=\"https://user-images.githubusercontent.com/378614/128649963-1b4367e3-45fa-4026-9489-f6afe8bf2c1e.png\" style=\"max-width: 100%;\"></a>\n</details>\n<p dir=\"auto\">That is not to imply that having a generator depend on external initialization logic is desirable, e.g. by instead creating a new map for each invocation. However the gap here is the surprise that the setUp and tearDown only apply to some test cases and not to others.</p>",
                                "resourcePath": "/google/guava/issues/5674",
                                "createdAt": "2021-08-09T00:19:52Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        {
                                            "node": {
                                                "name": "package=testing"
                                            }
                                        },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Debeta xmlEscapers",
                "url": "https://github.com/google/guava/pull/5752",
                "resourcePath": "/google/guava/pull/5752",
                "createdAt": "2021-10-11T17:24:23Z",
                "number": 5752,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/xml/XmlEscapers.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4tB-a12gAoNDhiNGZkN2EyNTBhZTgyODQ5ODQ2NjhiM2QzNThmZjFmZTE2Yjc3Yw",
                                "url": "https://github.com/google/guava/pull/5752/commits/48b4fd7a250ae8284984668b3d358ff1fe16b77c"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5744,
                                "url": "https://github.com/google/guava/issues/5744",
                                "title": "Remove @Beta from XmlEscapers",
                                "bodyHTML": "<p dir=\"auto\">9 years ago com.google.common.xml.XmlEscapers was marked as Beta. Maybe 2021 is the good year to remove this annotation?</p>",
                                "resourcePath": "/google/guava/issues/5744",
                                "createdAt": "2021-09-30T21:01:15Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Override MapMakerInternalMap#compute",
                "url": "https://github.com/google/guava/pull/5769",
                "resourcePath": "/google/guava/pull/5769",
                "createdAt": "2021-11-01T23:16:20Z",
                "number": 5769,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/MapMakerInternalMap.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4t9AXv2gAoNDE3Nzg2ZDBmNDA1NGU1YjViZThlZTM1YjIyZDMwNWVmNjMwMTFkYQ",
                                "url": "https://github.com/google/guava/pull/5769/commits/417786d0f4054e5b5be8ee35b22d305ef63011da"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5766,
                                "url": "https://github.com/google/guava/issues/5766",
                                "title": "Efficient implementation for MapMakerInternalMap#compute",
                                "bodyHTML": "<p dir=\"auto\">The map created by <code class=\"notranslate\">MapMaker#build</code> currently use the inefficient <code class=\"notranslate\">compute</code> implementation from <code class=\"notranslate\">ConcurrentMap</code>. I assume that it could be optimized for atomic operations by reducing lookups and locking it. Contention will also cause the mapping function to be ran multiple time, preventing atomic update.</p>",
                                "resourcePath": "/google/guava/issues/5766",
                                "createdAt": "2021-10-29T22:32:06Z",
                                "labels": { "edges": [] }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix small style issues.",
                "url": "https://github.com/google/guava/pull/5802",
                "resourcePath": "/google/guava/pull/5802",
                "createdAt": "2021-12-01T18:44:11Z",
                "number": 5802,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-testlib/test/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilderTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/test/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilderTest.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4vRGMr2gAoMDE5MTBkNzI4NDVhYzk5Yzg5YzExZDhjNzJhNDEzNjAxNmYxNjVjMA",
                                "url": "https://github.com/google/guava/pull/5802/commits/01910d72845ac99c89c11d8c72a4136016f165c0"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5795,
                                "url": "https://github.com/google/guava/issues/5795",
                                "title": "Review code style in FeatureSpecificTestSuiteBuilderTest",
                                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">testWasRun</code> should be private. Array type declaration should not look like this: <code class=\"notranslate\">boolean setUp[]</code></p>",
                                "resourcePath": "/google/guava/issues/5795",
                                "createdAt": "2021-11-29T06:52:47Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix Javadoc search on JDK 11:",
                "url": "https://github.com/google/guava/pull/5805",
                "resourcePath": "/google/guava/pull/5805",
                "createdAt": "2021-12-03T15:33:32Z",
                "number": 5805,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4vXhX52gAoNWMyYjY3ZDc1N2ZkMmUxN2RkMWFlNGZkOWEyZmZlNGM2ZGNkM2EyOQ",
                                "url": "https://github.com/google/guava/pull/5805/commits/5c2b67d757fd2e17dd1ae4fd9a2ffe4c6dcd3a29"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5457,
                                "url": "https://github.com/google/guava/issues/5457",
                                "title": "Broken link in Javadoc",
                                "bodyHTML": "<ol dir=\"auto\">\n<li>Go to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/</a></li>\n<li>Search for \"unsignedbytes\"</li>\n<li>Get redirected to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html</a> which returns HTTP 404.</li>\n</ol>",
                                "resourcePath": "/google/guava/issues/5457",
                                "createdAt": "2021-03-31T03:04:20Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        {
                                            "node": {
                                                "name": "package=general"
                                            }
                                        },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Implemented the following methods for",
                "url": "https://github.com/google/guava/pull/5790",
                "resourcePath": "/google/guava/pull/5790",
                "createdAt": "2021-11-24T17:39:18Z",
                "number": 5790,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/util/concurrent/AtomicDoubleTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/util/concurrent/AtomicDouble.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/util/concurrent/AtomicDoubleArray.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4u-q182gAoZDIxYzA2NTk0MmU1ZDk2NTZmMGY4NzU1NmVjMjRjNjNkOTQ1ZjUyNA",
                                "url": "https://github.com/google/guava/pull/5790/commits/d21c065942e5d9656f0f87556ec24c63d945f524"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5742,
                                "url": "https://github.com/google/guava/issues/5742",
                                "title": "AtomicDouble/AtomicDoubleArray accumulate and update methods",
                                "bodyHTML": "<p dir=\"auto\">The built-in Java classes AtomicInteger, AtomicLong, AtomicIntegerArray, and AtomicLongArray all implement the methods accumulateAndGet(), getAndAccumulate(), updateAndGet(), and getAndUpdate(). The Guava classes AtomicDouble and AtomicDoubleArray do not currently implement any of those methods.</p>",
                                "resourcePath": "/google/guava/issues/5742",
                                "createdAt": "2021-09-29T22:44:22Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=addition" } },
                                        {
                                            "node": {
                                                "name": "package=concurrent"
                                            }
                                        },
                                        {
                                            "node": { "name": "platform=java8" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Init lockFreeBitArray with length to reduce memory",
                "url": "https://github.com/google/guava/pull/5799",
                "resourcePath": "/google/guava/pull/5799",
                "createdAt": "2021-12-01T15:24:21Z",
                "number": 5799,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/BloomFilter.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4vQYBv2gAoNTAxMDNlMjQ0ZjUwNjhiMmM5ZmVhNTkyM2U4N2RlYmExNzAwYjdkNA",
                                "url": "https://github.com/google/guava/pull/5799/commits/50103e244f5068b2c9fea5923e87deba1700b7d4"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5770,
                                "url": "https://github.com/google/guava/issues/5770",
                                "title": "Halve memory used by BloomFilter.java : readFrom()",
                                "bodyHTML": "<p dir=\"auto\">guava/src/com/google/common/hash/BloomFilter.java</p>\n<p dir=\"auto\">readFrom allocates a temporary bitmap (data) of the size required, fills it and then passes that to new LockFreeBitArray(data) which allocates the same amount of memory and copies the bitmap (data) which is then discarded.<br>\nIf the bitmap (data) is say 100MB in size, then double that of memory used during this process (along with extra CPU in the copy).</p>\n<p dir=\"auto\">The readFrom could allocate the LockFreeBitArray(data) itself and read the data directly into that bitmap instead of using a temporary intermediate bitmap.</p>",
                                "resourcePath": "/google/guava/issues/5770",
                                "createdAt": "2021-11-02T21:14:41Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=hash" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        {
                                            "node": {
                                                "name": "type=performance"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Fix Javadoc search on JDK 11:",
                "url": "https://github.com/google/guava/pull/5800",
                "resourcePath": "/google/guava/pull/5800",
                "createdAt": "2021-12-01T16:07:59Z",
                "number": 5800,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4vQja42gAoN2QxYzJmZmRlMmM5MzExYTlmZGIzZDAwNzY5OTI2OGM2NjAyMmYyYg",
                                "url": "https://github.com/google/guava/pull/5800/commits/7d1c2ffde2c9311a9fdb3d007699268c66022f2b"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5457,
                                "url": "https://github.com/google/guava/issues/5457",
                                "title": "Broken link in Javadoc",
                                "bodyHTML": "<ol dir=\"auto\">\n<li>Go to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/</a></li>\n<li>Search for \"unsignedbytes\"</li>\n<li>Get redirected to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html</a> which returns HTTP 404.</li>\n</ol>",
                                "resourcePath": "/google/guava/issues/5457",
                                "createdAt": "2021-03-31T03:04:20Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        {
                                            "node": {
                                                "name": "package=general"
                                            }
                                        },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove `@Beta` from APIs in `Files`. Add `@InlineMe` where we can.",
                "url": "https://github.com/google/guava/pull/5834",
                "resourcePath": "/google/guava/pull/5834",
                "createdAt": "2021-12-16T17:00:47Z",
                "number": 5834,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/io/Files.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/io/Resources.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/io/Files.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/io/Resources.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4v9iVR2gAoMmZhMDQyYmYzZjI3ZjY1NDRkYWJkNjRlMGZmNmRjODdlOGVhNmE5Mw",
                                "url": "https://github.com/google/guava/pull/5834/commits/2fa042bf3f27f6544dabd64e0ff6dc87e8ea6a93"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3285,
                                "url": "https://github.com/google/guava/issues/3285",
                                "title": "Remove @Beta from Files",
                                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">Files</code> class has been around since 1.0, so it would be nice to remove it from beta.<br>\n(FYI, our main need at the moment is the <code class=\"notranslate\">asByteSource</code> method [related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"367312224\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3284\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3284/hovercard\" href=\"https://github.com/google/guava/issues/3284\">#3284</a>]).</p>",
                                "resourcePath": "/google/guava/issues/3285",
                                "createdAt": "2018-10-05T18:05:14Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "package=io" } },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove `@Beta` from a number of `com.google.common.testing` classes.",
                "url": "https://github.com/google/guava/pull/5824",
                "resourcePath": "/google/guava/pull/5824",
                "createdAt": "2021-12-13T22:57:54Z",
                "number": 5824,
                "mergeCommit": {
                    "oid": "93a8f02f5601178273d0e38be418540f066bd405",
                    "message": "Remove `@Beta` from a number of `com.google.common.testing` classes.\n\nFixes https://github.com/google/guava/issues/3452\n\nRELNOTES=Several classes in `com.google.common.testing` that were previously marked `@Beta` are now fully supported.\nPiperOrigin-RevId: 416320108",
                    "commitUrl": "https://github.com/google/guava/commit/93a8f02f5601178273d0e38be418540f066bd405",
                    "parents": {
                        "nodes": [
                            {
                                "oid": "261ac7afbf04dce2bd7e20a2085338e1f9a857d8",
                                "message": "De-beta APIs in com.google.common.net\n\nFixes https://github.com/google/guava/issues/3052\nFixes https://github.com/google/guava/issues/3414\nFixes https://github.com/google/guava/issues/3417\nFixes https://github.com/google/guava/issues/3423\n\nRELNOTES=`net`: Removed `@Beta` from APIs in net.\nPiperOrigin-RevId: 416312524"
                            }
                        ]
                    }
                },
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3452,
                                "url": "https://github.com/google/guava/issues/3452",
                                "title": "Would you promote EqualsTester as not @Beta?",
                                "bodyHTML": "<p dir=\"auto\">Would you promote EqualsTester as not <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/beta/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/beta\">@beta</a>?</p>\n<p dir=\"auto\">I think the class has been there for a while and I believe it has been useful for many users. Do you think it's good time to remove <code class=\"notranslate\">@Beta</code> from EqualsTester?</p>",
                                "resourcePath": "/google/guava/issues/3452",
                                "createdAt": "2019-05-03T13:13:11Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "package=testing"
                                            }
                                        },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "De-beta APIs in com.google.common.net",
                "url": "https://github.com/google/guava/pull/5826",
                "resourcePath": "/google/guava/pull/5826",
                "createdAt": "2021-12-14T16:21:57Z",
                "number": 5826,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/net/InternetDomainName.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/net/MediaType.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/net/PercentEscaper.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/HostAndPort.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/HostSpecifier.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/HttpHeaders.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/InetAddresses.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/InternetDomainName.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/MediaType.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/net/PercentEscaper.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4v1XMK2gAoYzU2MTNjOThhMGYxMmMxYzA3ZTgzOTFhZjYxMmU4YjY2NDUyMzFjYg",
                                "url": "https://github.com/google/guava/pull/5826/commits/c5613c98a0f12c1c07e8391af612e8b6645231cb"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 3052,
                                "url": "https://github.com/google/guava/issues/3052",
                                "title": "De-beta-ify HostAndPort",
                                "bodyHTML": "<p dir=\"auto\">Apache jclouds makes extensive use of HostAndPort.  Could you promote this?</p>",
                                "resourcePath": "/google/guava/issues/3052",
                                "createdAt": "2018-03-03T03:41:18Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=net" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 3414,
                                "url": "https://github.com/google/guava/issues/3414",
                                "title": "Remove @Beta from MediaType",
                                "bodyHTML": "<p dir=\"auto\">Possible concerns:</p>\n<ul dir=\"auto\">\n<li>MediaType isn't lenient enough for real-world media types (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47425788\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1726\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1726/hovercard\" href=\"https://github.com/google/guava/issues/1726\">#1726</a>).</li>\n<li>It's still arguably kind of sad that \"withParameter(s)\" deletes things.</li>\n<li>Do we have any hope that this would ever be suitable for use on Android? (And do enough people use/want it there that we'd bother?) We would at least need to convert the constants to static methods, but even then, we'd be pulling in a lot of code through ImmutableListMultimap, Multimaps.transformValues, and perhaps other APIs we use. (We could probably avoid transformValues if that's significant, but ImmutableListMultimap is baked deep in, and justifiably so.)</li>\n<li>We have an internal spreadsheet called \"Media Type Audit.\" I think it mostly covers features that we could add (without changing any existing API), but we could check.</li>\n</ul>",
                                "resourcePath": "/google/guava/issues/3414",
                                "createdAt": "2019-03-25T19:10:32Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=net" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 3417,
                                "url": "https://github.com/google/guava/issues/3417",
                                "title": "Remove @Beta from InetAddresses.forString",
                                "bodyHTML": "<p dir=\"auto\">I'm not very familiar with this method, but I see issues that sound like they affect it:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"314732269\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3116\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3116/hovercard\" href=\"https://github.com/google/guava/issues/3116\">#3116</a></li>\n<li><del><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"180522000\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/2587\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/2587/hovercard\" href=\"https://github.com/google/guava/issues/2587\">#2587</a> (and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47424922\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1557\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1557/hovercard\" href=\"https://github.com/google/guava/issues/1557\">#1557</a>?)</del></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47425143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1604\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1604/hovercard\" href=\"https://github.com/google/guava/issues/1604\">#1604</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47421973\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/986\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/986/hovercard\" href=\"https://github.com/google/guava/issues/986\">#986</a></li>\n</ul>",
                                "resourcePath": "/google/guava/issues/3417",
                                "createdAt": "2019-03-25T19:24:46Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=net" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        },
                        {
                            "node": {
                                "number": 3423,
                                "url": "https://github.com/google/guava/issues/3423",
                                "title": "Remove @Beta from InternetDomainName",
                                "bodyHTML": "<p dir=\"auto\">I fear that we're not close here: <a href=\"https://github.com/google/guava/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+internetdomainname\">https://github.com/google/guava/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+internetdomainname</a></p>\n<p dir=\"auto\">Plus, we have an old internal doc called \"Registry Suffixes in InternetDomainName\" that proposed splitting the class in two, which would be very involved.</p>",
                                "resourcePath": "/google/guava/issues/3423",
                                "createdAt": "2019-03-25T19:47:31Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=net" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Remove `@Beta` from various Escapers and Escaper accessories.",
                "url": "https://github.com/google/guava/pull/5876",
                "resourcePath": "/google/guava/pull/5876",
                "createdAt": "2022-01-18T17:19:26Z",
                "number": 5876,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": { "edges": [] },
                "commits": { "edges": [] },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5744,
                                "url": "https://github.com/google/guava/issues/5744",
                                "title": "Remove @Beta from XmlEscapers",
                                "bodyHTML": "<p dir=\"auto\">9 years ago com.google.common.xml.XmlEscapers was marked as Beta. Maybe 2021 is the good year to remove this annotation?</p>",
                                "resourcePath": "/google/guava/issues/5744",
                                "createdAt": "2021-09-30T21:01:15Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "P3" } },
                                        { "node": { "name": "type=debeta" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.",
                "url": "https://github.com/google/guava/pull/5869",
                "resourcePath": "/google/guava/pull/5869",
                "createdAt": "2022-01-13T16:51:31Z",
                "number": 5869,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/hash/BloomFilterTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/hash/BloomFilter.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/hash/BloomFilterStrategies.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/hash/BloomFilterTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/BloomFilter.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/BloomFilterStrategies.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4w8mpW2gAoZDQ4YTE2MzRjODYwYTI2ZDQ3NTJmYTk5NTNlNzUyNGU3ZGQxM2I4MQ",
                                "url": "https://github.com/google/guava/pull/5869/commits/d48a1634c860a26d4752fa9953e7524e7dd13b81"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5770,
                                "url": "https://github.com/google/guava/issues/5770",
                                "title": "Halve memory used by BloomFilter.java : readFrom()",
                                "bodyHTML": "<p dir=\"auto\">guava/src/com/google/common/hash/BloomFilter.java</p>\n<p dir=\"auto\">readFrom allocates a temporary bitmap (data) of the size required, fills it and then passes that to new LockFreeBitArray(data) which allocates the same amount of memory and copies the bitmap (data) which is then discarded.<br>\nIf the bitmap (data) is say 100MB in size, then double that of memory used during this process (along with extra CPU in the copy).</p>\n<p dir=\"auto\">The readFrom could allocate the LockFreeBitArray(data) itself and read the data directly into that bitmap instead of using a temporary intermediate bitmap.</p>",
                                "resourcePath": "/google/guava/issues/5770",
                                "createdAt": "2021-11-02T21:14:41Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=hash" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        {
                                            "node": {
                                                "name": "type=performance"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "#5842 stopTimers capture in ServiceManager",
                "url": "https://github.com/google/guava/pull/5873",
                "resourcePath": "/google/guava/pull/5873",
                "createdAt": "2022-01-17T17:20:47Z",
                "number": 5873,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/util/concurrent/ServiceManager.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4xKYO52gAoOGM5NmY0ZmViN2VlYjVkOGZkMWM3YmY4MzZlODg5N2Y2ZTE2OWE5Yw",
                                "url": "https://github.com/google/guava/pull/5873/commits/8c96f4feb7eeb5d8fd1c7bf836e8897f6e169a9c"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5842,
                                "url": "https://github.com/google/guava/issues/5842",
                                "title": "Provide ServiceManager.stopTimes() to enable debugging slow ServiceManager shutdowns",
                                "bodyHTML": "<p dir=\"auto\">Consider providing <code class=\"notranslate\">ServiceManager.stopTimes()</code> to enable debugging slow ServiceManager shutdowns.</p>\n<p dir=\"auto\">There currently exists <code class=\"notranslate\">serviceManager.startupTimes()</code> for startup time, this would be the equivalent for the shutdown process.</p>",
                                "resourcePath": "/google/guava/issues/5842",
                                "createdAt": "2021-12-22T02:15:58Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=addition" } },
                                        {
                                            "node": {
                                                "name": "package=concurrent"
                                            }
                                        },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Do not allow `CacheLoader.loadAll` to modify the given set of keys.",
                "url": "https://github.com/google/guava/pull/5858",
                "resourcePath": "/google/guava/pull/5858",
                "createdAt": "2022-01-05T21:54:40Z",
                "number": 5858,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/cache/LocalCache.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/cache/LocalCache.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4wlPXV2gAoYWIzYjdhMmY1ODAzNjliOWQ1NTYzMjIzMzlkNmJhYjliMjk1MjcxMQ",
                                "url": "https://github.com/google/guava/pull/5858/commits/ab3b7a2f580369b9d556322339d6bab9b2952711"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5810,
                                "url": "https://github.com/google/guava/issues/5810",
                                "title": "CacheLoader.loadAll should not be allowed to modify the keys",
                                "bodyHTML": "<p dir=\"auto\">I noticed this mistake in Caffeine and my new tests fail for Guava. In both cases the mutable set of keys to load is provided to the user, who might downcast and add or remove an element. By doing so the loop iterating on them will not have the expected behavior. I believe wrapping with <code class=\"notranslate\">Collections.unmodifiableSet(set)</code> would be a simple change and it is doubtful anyone did this.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/3072f4fe6dd57678886ba800efc9da4667abc366/guava/src/com/google/common/cache/LocalCache.java#L4034-L4043\">guava/guava/src/com/google/common/cache/LocalCache.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 4034 to 4043\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/google/guava/commit/3072f4fe6dd57678886ba800efc9da4667abc366\">3072f4f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L4034\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4034\"></td>\n          <td id=\"LC4034\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">keysToLoad</span>.<span class=\"pl-en\">isEmpty</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4035\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4035\"></td>\n          <td id=\"LC4035\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4036\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4036\"></td>\n          <td id=\"LC4036\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">K</span>, <span class=\"pl-smi\">V</span>&gt; <span class=\"pl-s1\">newEntries</span> = <span class=\"pl-en\">loadAll</span>(<span class=\"pl-s1\">keysToLoad</span>, <span class=\"pl-s1\">defaultLoader</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4037\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4037\"></td>\n          <td id=\"LC4037\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">K</span> <span class=\"pl-s1\">key</span> : <span class=\"pl-s1\">keysToLoad</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4038\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4038\"></td>\n          <td id=\"LC4038\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-smi\">V</span> <span class=\"pl-s1\">value</span> = <span class=\"pl-s1\">newEntries</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">key</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4039\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4039\"></td>\n          <td id=\"LC4039\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">value</span> == <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4040\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4040\"></td>\n          <td id=\"LC4040\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">InvalidCacheLoadException</span>(<span class=\"pl-s\">\"loadAll failed to return a value for \"</span> + <span class=\"pl-s1\">key</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4041\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4041\"></td>\n          <td id=\"LC4041\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4042\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4042\"></td>\n          <td id=\"LC4042\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-s1\">key</span>, <span class=\"pl-s1\">value</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4043\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4043\"></td>\n          <td id=\"LC4043\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                                "resourcePath": "/google/guava/issues/5810",
                                "createdAt": "2021-12-05T02:00:50Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=defect" } },
                                        { "node": { "name": "package=cache" } },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.",
                "url": "https://github.com/google/guava/pull/5866",
                "resourcePath": "/google/guava/pull/5866",
                "createdAt": "2022-01-11T19:13:04Z",
                "number": 5866,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava/src/com/google/common/hash/BloomFilter.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/hash/BloomFilter.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4w0Tnc2gAoMjE0ZGVkOTdiYmQzMzFjODU2MjMwNmQ4NTA5YWQwMjA2NzFiMTNiNg",
                                "url": "https://github.com/google/guava/pull/5866/commits/214ded97bbd331c8562306d8509ad020671b13b6"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5770,
                                "url": "https://github.com/google/guava/issues/5770",
                                "title": "Halve memory used by BloomFilter.java : readFrom()",
                                "bodyHTML": "<p dir=\"auto\">guava/src/com/google/common/hash/BloomFilter.java</p>\n<p dir=\"auto\">readFrom allocates a temporary bitmap (data) of the size required, fills it and then passes that to new LockFreeBitArray(data) which allocates the same amount of memory and copies the bitmap (data) which is then discarded.<br>\nIf the bitmap (data) is say 100MB in size, then double that of memory used during this process (along with extra CPU in the copy).</p>\n<p dir=\"auto\">The readFrom could allocate the LockFreeBitArray(data) itself and read the data directly into that bitmap instead of using a temporary intermediate bitmap.</p>",
                                "resourcePath": "/google/guava/issues/5770",
                                "createdAt": "2021-11-02T21:14:41Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "package=hash" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        {
                                            "node": {
                                                "name": "type=performance"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Change access modifier of the Strategy interface to public, so that users can customize flexible Strategies",
                "url": "https://github.com/google/guava/pull/5870",
                "resourcePath": "/google/guava/pull/5870",
                "createdAt": "2022-01-14T10:12:57Z",
                "number": 5870,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/base/Splitter.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4xBcn42gAoNGE5MzRlZGRlMzIzMTQ4MDgzYWEwMGI3NmQ2OTkzZWY5YWE5ZTIzZA",
                                "url": "https://github.com/google/guava/pull/5870/commits/4a934edde323148083aa00b76d6993ef9aa9e23d"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5850,
                                "url": "https://github.com/google/guava/issues/5850",
                                "title": "It is necessary to set Strategy in Splitter to public so that users can customize flexible Strategies.",
                                "bodyHTML": "<p dir=\"auto\">It is necessary to set Strategy in Splitter to public，so that users can customize flexible Strategies.<br>\n<code class=\"notranslate\">public interface Strategy { Iterator&lt;String&gt; iterator(Splitter splitter, CharSequence toSplit); }</code></p>\n<p dir=\"auto\">Or provide other ways for users to programmatically define Strategies.<br>\nOtherwise we would have been seeing some of the following requirements, some of which I really needed</p>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/issues/3491\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3491/hovercard\">#3491</a>、<a href=\"https://github.com/google/guava/issues/1900\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1900/hovercard\">#1900</a>、... ...</p>\n<p dir=\"auto\">more issues see: <a href=\"https://github.com/google/guava/issues?q=is%3Aissue+is%3Aopen+splitter\">Splitter related issues</a></p>",
                                "resourcePath": "/google/guava/issues/5850",
                                "createdAt": "2021-12-27T01:59:29Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "type=enhancement"
                                            }
                                        },
                                        { "node": { "name": "package=base" } },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Import PR https://github.com/google/guava/pull/5877: Unify unmodifiable map behavior",
                "url": "https://github.com/google/guava/pull/5889",
                "resourcePath": "/google/guava/pull/5889",
                "createdAt": "2022-01-21T19:45:47Z",
                "number": 5889,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/collect/MapsTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Maps.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4xZyeg2gAoMzAzNmY3M2ExYWNlZTIxNGRkOTllZTZmYThmOGJkM2RkZTk5NDliOA",
                                "url": "https://github.com/google/guava/pull/5889/commits/3036f73a1acee214dd99ee6fa8f8bd3dde9949b8"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5874,
                                "url": "https://github.com/google/guava/issues/5874",
                                "title": "Inconsistency in behavior between unmodifiable and immutable maps",
                                "bodyHTML": "<p dir=\"auto\">Hi, it might be not a real issue, but I am just rising it.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// JDK\n\nfinal TreeMap&lt;Integer, String&gt; baseMap = new TreeMap&lt;&gt;() {{put(1, &quot;one&quot;);}};\n\nfinal NavigableMap&lt;Object, Object&gt; jdkUnmodifiableNavigableMap = Collections.unmodifiableNavigableMap(baseMap);\njdkUnmodifiableNavigableMap.compute(null, (k, v) -&gt; v);\n\nfinal SortedMap&lt;Object, Object&gt; jdkUnmodifiableSortedMap = Collections.unmodifiableSortedMap(baseMap);\njdkUnmodifiableSortedMap.compute(null, (k, v) -&gt; v);\n\nfinal Map&lt;Object, Object&gt; jdkUnmodifiableMap = Collections.unmodifiableMap(baseMap);\njdkUnmodifiableMap.compute(null, (k, v) -&gt; v);\n\nfinal Map&lt;Integer, String&gt; jdk11_ImmutableMap = Map.of(1, &quot;one&quot;);\njdk11_ImmutableMap.compute(null, (k, v) -&gt; v);\n\n// Guava\n\nfinal ImmutableMap&lt;Integer, String&gt; immutableMap = ImmutableMap.of(1, &quot;one&quot;);\nimmutableMap.compute(null, (k, v) -&gt; v);\n\nfinal ImmutableSortedMap&lt;Integer, String&gt; guavaImmutableSortedMap = ImmutableSortedMap.of(1, &quot;one&quot;);\nguavaImmutableSortedMap.compute(null, (k, v) -&gt; v);\"><pre><span class=\"pl-c\">// JDK</span>\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">TreeMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">baseMap</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">TreeMap</span>&lt;&gt;() {{<span class=\"pl-en\">put</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);}};\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">NavigableMap</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">jdkUnmodifiableNavigableMap</span> = <span class=\"pl-s1\">Collections</span>.<span class=\"pl-en\">unmodifiableNavigableMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">jdkUnmodifiableNavigableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">SortedMap</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">jdkUnmodifiableSortedMap</span> = <span class=\"pl-s1\">Collections</span>.<span class=\"pl-en\">unmodifiableSortedMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">jdkUnmodifiableSortedMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">jdkUnmodifiableMap</span> = <span class=\"pl-s1\">Collections</span>.<span class=\"pl-en\">unmodifiableMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">jdkUnmodifiableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">jdk11_ImmutableMap</span> = <span class=\"pl-s1\">Map</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-s1\">jdk11_ImmutableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-c\">// Guava</span>\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ImmutableMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">immutableMap</span> = <span class=\"pl-s1\">ImmutableMap</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-s1\">immutableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ImmutableSortedMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">guavaImmutableSortedMap</span> = <span class=\"pl-s1\">ImmutableSortedMap</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-s1\">guavaImmutableSortedMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);</pre></div>\n<p dir=\"auto\">and other immutable maps from guava will throw</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.UnsupportedOperationException\"><pre class=\"notranslate\"><code>java.lang.UnsupportedOperationException\n</code></pre></div>\n<p dir=\"auto\">At the same time there are 2 implementations in Guava library that have slightly different behavior:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final TreeMap&lt;Integer, String&gt; baseMap = new TreeMap&lt;&gt;() {{put(1, &quot;one&quot;);}};\nfinal NavigableMap&lt;Object, Object&gt; guavaUnmodifiableNavigableMap = Maps.unmodifiableNavigableMap(baseMap);\nguavaUnmodifiableNavigableMap.compute(null, (k, v) -&gt; v);\"><pre><span class=\"pl-k\">final</span> <span class=\"pl-smi\">TreeMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">baseMap</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">TreeMap</span>&lt;&gt;() {{<span class=\"pl-en\">put</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);}};\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">NavigableMap</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">guavaUnmodifiableNavigableMap</span> = <span class=\"pl-s1\">Maps</span>.<span class=\"pl-en\">unmodifiableNavigableMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">guavaUnmodifiableNavigableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);</pre></div>\n<p dir=\"auto\">will throw</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\"><pre class=\"notranslate\"><code>java.lang.NullPointerException\n</code></pre></div>\n<p dir=\"auto\">And the other one will just silently go through.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final BiMap&lt;Integer, String&gt; baseBiMap = HashBiMap.create();\nbaseBiMap.put(1, &quot;one&quot;);\nfinal BiMap&lt;Integer, String&gt; unmodifiableBiMap = Maps.unmodifiableBiMap(baseBiMap);\nunmodifiableBiMap.compute(null, (k, v) -&gt; v);\"><pre><span class=\"pl-k\">final</span> <span class=\"pl-smi\">BiMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">baseBiMap</span> = <span class=\"pl-s1\">HashBiMap</span>.<span class=\"pl-en\">create</span>();\n<span class=\"pl-s1\">baseBiMap</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">BiMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">unmodifiableBiMap</span> = <span class=\"pl-s1\">Maps</span>.<span class=\"pl-en\">unmodifiableBiMap</span>(<span class=\"pl-s1\">baseBiMap</span>);\n<span class=\"pl-s1\">unmodifiableBiMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);</pre></div>\n<p dir=\"auto\">I am not sure if this has been done on purpose by design or was just simply overseen. Happy to contribute if you would qualify it as a something to be changed.</p>",
                                "resourcePath": "/google/guava/issues/5874",
                                "createdAt": "2022-01-17T20:40:34Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "status=fixed" } },
                                        {
                                            "node": {
                                                "name": "type=enhancement"
                                            }
                                        },
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        {
                                            "node": { "name": "platform=java8" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "stopTimers capture in ServiceManager",
                "url": "https://github.com/google/guava/pull/5903",
                "resourcePath": "/google/guava/pull/5903",
                "createdAt": "2022-01-28T23:04:14Z",
                "number": 5903,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/util/concurrent/ServiceManager.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4xw0Vb2gAoNWQzMGIzNWM3MDk0ZjczYTYwZDEzZjQ3ODYxZWQzMWI2Mjc2YjM1ZA",
                                "url": "https://github.com/google/guava/pull/5903/commits/5d30b35c7094f73a60d13f47861ed31b6276b35d"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5842,
                                "url": "https://github.com/google/guava/issues/5842",
                                "title": "Provide ServiceManager.stopTimes() to enable debugging slow ServiceManager shutdowns",
                                "bodyHTML": "<p dir=\"auto\">Consider providing <code class=\"notranslate\">ServiceManager.stopTimes()</code> to enable debugging slow ServiceManager shutdowns.</p>\n<p dir=\"auto\">There currently exists <code class=\"notranslate\">serviceManager.startupTimes()</code> for startup time, this would be the equivalent for the shutdown process.</p>",
                                "resourcePath": "/google/guava/issues/5842",
                                "createdAt": "2021-12-22T02:15:58Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=addition" } },
                                        {
                                            "node": {
                                                "name": "package=concurrent"
                                            }
                                        },
                                        {
                                            "node": { "name": "status=triaged" }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Add a `constrain` method to Range.",
                "url": "https://github.com/google/guava/pull/5892",
                "resourcePath": "/google/guava/pull/5892",
                "createdAt": "2022-01-22T20:27:34Z",
                "number": 5892,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/collect/RangeTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava/src/com/google/common/collect/Range.java"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc4xcrJv2gAoMzQyMzgyZjBlMDdiMmZjMDU4YzkxY2M0NGNlOTY1OTA1ZmU3NWMzOQ",
                                "url": "https://github.com/google/guava/pull/5892/commits/342382f0e07b2fc058c91cc44ce965905fe75c39"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5882,
                                "url": "https://github.com/google/guava/issues/5882",
                                "title": "Add a `constrain` method to Range",
                                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">com.google.common.primitives.Ints</code> already has the very useful <code class=\"notranslate\">static int constrainToRange(int value, int min, int max)</code>. It would be nice to add this as a method to the <code class=\"notranslate\">Range</code> class.</p>\n<p dir=\"auto\">Two advantages:</p>\n<ol dir=\"auto\">\n<li>This would be generically available to any <code class=\"notranslate\">Comparable</code> type.</li>\n<li>It just reads better- compare <code class=\"notranslate\">Range.closed(3,9).constrain(4)</code> vs <code class=\"notranslate\">Ints.constrainToRange(3,4,9)</code>. In the latter case it's not immediately clear which parameter is the input and which are the bounds, but in the former it's super obvious.</li>\n</ol>\n<p dir=\"auto\">One problem is; what should the output of <code class=\"notranslate\">Range.greaterThan(3).constrain(1)</code> be?</p>\n<ul dir=\"auto\">\n<li>On one hand, it seems like <code class=\"notranslate\">myRange.contains(myRange.constrain(x))</code>should always be <code class=\"notranslate\">true</code>, so maybe we should throw an <code class=\"notranslate\">IllegalArgumentException</code> if the <em>exceeded</em> bound is open.</li>\n<li>On the other hand, <code class=\"notranslate\">(3...5].constrain(1) = 3</code> doesn't seem entirely unreasonable either.</li>\n</ul>",
                                "resourcePath": "/google/guava/issues/5882",
                                "createdAt": "2022-01-19T22:48:50Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=addition" } },
                                        {
                                            "node": {
                                                "name": "package=collect"
                                            }
                                        },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Bump actions/cache from 2.1.7 to 3.",
                "url": "https://github.com/google/guava/pull/5979",
                "resourcePath": "/google/guava/pull/5979",
                "createdAt": "2022-03-21T19:00:43Z",
                "number": 5979,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".github/workflows/ci.yml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc40wya12gAoMWIwYTg5MDhmNWU5MjRlNzk1NDQzNDUyODM0NWM1MjNkNTA0NGZmYg",
                                "url": "https://github.com/google/guava/pull/5979/commits/1b0a8908f5e924e7954434528345c523d5044ffb"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 5798,
                                "url": "https://github.com/google/guava/issues/5798",
                                "title": "Apply JANITOR to generated Javadoc to resurrect frames-like experience to allow browsing",
                                "bodyHTML": "<p dir=\"auto\">Newer Javadoc has done away with HTML frames, which means it's much harder to browse available classes. This is especially damaging for a project like Guava which tends to provide lots of good stuff you don't even know about.</p>\n<p dir=\"auto\">See <a href=\"https://stackoverflow.com/questions/51992347/missing-iframe-view-for-javadocs-jdk-11\" rel=\"nofollow\">this stackoverflow thread</a>.</p>\n<p dir=\"auto\">This change has disgusted many developers including me.</p>\n<p dir=\"auto\">There is a workaround available though: See <a href=\"https://stackoverflow.com/a/59423977/263801\" rel=\"nofollow\">this reply</a>.</p>\n<p dir=\"auto\">Feature request: apply the <a href=\"https://gitlab.com/gerib/userscripts/-/wikis/JANITOR-%E2%80%93-Java-API-Navigation-Is-The-Only-Rescue\" rel=\"nofollow\">JANITOR</a> fixup (or some equivalent) to the generated Javadocs so people can browse the API docs again.</p>",
                                "resourcePath": "/google/guava/issues/5798",
                                "createdAt": "2021-11-30T16:10:18Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P4" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": " feat: use build-in cache in actions/setup-java",
                "url": "https://github.com/google/guava/pull/6037",
                "resourcePath": "/google/guava/pull/6037",
                "createdAt": "2022-05-03T14:39:59Z",
                "number": 6037,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".github/workflows/ci.yml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc43O4qV2gAoN2VmNTQ5YTkxMGIxYmRlZjcwNTBkNTBjYmY1NjVkZjdjMWRmZWQ0NQ",
                                "url": "https://github.com/google/guava/pull/6037/commits/7ef549a910b1bdef7050d50cbf565df7c1dfed45"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 6035,
                                "url": "https://github.com/google/guava/issues/6035",
                                "title": "Use build-in cache in actions/setup-java and remove actions/cache",
                                "bodyHTML": "<p dir=\"auto\">The actions <a href=\"https://github.com/actions/setup-java\">setup-java</a> had built-in caching and restoring dependencies in it by <a href=\"https://github.com/actions/cache\">actions/cache</a>. details can refer it's <a href=\"https://github.com/actions/setup-java#caching-packages-dependencies\">main page</a></p>\n<p dir=\"auto\">so <code class=\"notranslate\">actions/cache</code> can be replaced by add a k-v pair <code class=\"notranslate\">cache: 'maven'</code> in config of <code class=\"notranslate\">actions/setup-java</code></p>",
                                "resourcePath": "/google/guava/issues/6035",
                                "createdAt": "2022-05-03T13:50:16Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": " feat: use build-in cache in actions/setup-java",
                "url": "https://github.com/google/guava/pull/6036",
                "resourcePath": "/google/guava/pull/6036",
                "createdAt": "2022-05-03T13:51:16Z",
                "number": 6036,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": ".github/workflows/ci.yml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc43Osf12gAoYWE2YzFmMTU2NDBkYzZkM2FjMzVmNmRhYzRiYmVmODhiODg4MmE2Mg",
                                "url": "https://github.com/google/guava/pull/6036/commits/aa6c1f15640dc6d3ac35f6dac4bbef88b8882a62"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 6035,
                                "url": "https://github.com/google/guava/issues/6035",
                                "title": "Use build-in cache in actions/setup-java and remove actions/cache",
                                "bodyHTML": "<p dir=\"auto\">The actions <a href=\"https://github.com/actions/setup-java\">setup-java</a> had built-in caching and restoring dependencies in it by <a href=\"https://github.com/actions/cache\">actions/cache</a>. details can refer it's <a href=\"https://github.com/actions/setup-java#caching-packages-dependencies\">main page</a></p>\n<p dir=\"auto\">so <code class=\"notranslate\">actions/cache</code> can be replaced by add a k-v pair <code class=\"notranslate\">cache: 'maven'</code> in config of <code class=\"notranslate\">actions/setup-java</code></p>",
                                "resourcePath": "/google/guava/issues/6035",
                                "createdAt": "2022-05-03T13:50:16Z",
                                "labels": {
                                    "edges": [
                                        { "node": { "name": "type=other" } },
                                        { "node": { "name": "P3" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "repository": {
            "pullRequest": {
                "title": "Enable Error Prone for Maven builds.",
                "url": "https://github.com/google/guava/pull/6128",
                "resourcePath": "/google/guava/pull/6128",
                "createdAt": "2022-08-04T00:49:33Z",
                "number": 6128,
                "mergeCommit": null,
                "potentialMergeCommit": null,
                "files": {
                    "edges": [
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-testlib/src/com/google/common/collect/testing/Platform.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/reflect/TypeTokenResolutionTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/reflect/TypeTokenSubtypeTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/guava-tests/test/com/google/common/reflect/TypeTokenTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "android/pom.xml"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-testlib/src/com/google/common/collect/testing/Platform.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/reflect/TypeTokenResolutionTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/reflect/TypeTokenSubtypeTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "guava-tests/test/com/google/common/reflect/TypeTokenTest.java"
                            }
                        },
                        {
                            "node": {
                                "changeType": "MODIFIED",
                                "path": "pom.xml"
                            }
                        }
                    ]
                },
                "commits": {
                    "edges": [
                        {
                            "node": {
                                "id": "PURC_lADOATXBkc48nSOa2gAoYzU1YzBlNzA2OTNiN2MyYzM1YWEyZjI2Y2Y3NGE2OGQzODNlZDBmYg",
                                "url": "https://github.com/google/guava/pull/6128/commits/c55c0e70693b7c2c35aa2f26cf74a68d383ed0fb"
                            }
                        }
                    ]
                },
                "closingIssuesReferences": {
                    "edges": [
                        {
                            "node": {
                                "number": 2484,
                                "url": "https://github.com/google/guava/issues/2484",
                                "title": "Build with javac-with-errorprone",
                                "bodyHTML": "<p dir=\"auto\">We use it internally. It would be nice for external contributors if we extended that to our open-source build. And it would set a good example. Possibly we could even turn on some compile errors that haven't been enabled for all of Google. Further, this may make it easier for us to switch from Animal Sniffer to the (currently internal but maybe to be released someday?) Error Prone version checker.</p>",
                                "resourcePath": "/google/guava/issues/2484",
                                "createdAt": "2016-05-19T15:36:30Z",
                                "labels": {
                                    "edges": [
                                        {
                                            "node": {
                                                "name": "type=enhancement"
                                            }
                                        },
                                        {
                                            "node": {
                                                "name": "package=general"
                                            }
                                        },
                                        { "node": { "name": "P2" } }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    }
]
